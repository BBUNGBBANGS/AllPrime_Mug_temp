ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	hadc1
  18              		.section	.bss.hadc1,"aw",%nobits
  19              		.align	2
  22              	hadc1:
  23 0000 00000000 		.space	48
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	hi2c1
  25              		.section	.bss.hi2c1,"aw",%nobits
  26              		.align	2
  29              	hi2c1:
  30 0000 00000000 		.space	84
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.global	hi2c2
  32              		.section	.bss.hi2c2,"aw",%nobits
  33              		.align	2
  36              	hi2c2:
  37 0000 00000000 		.space	84
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.global	htim1
  39              		.section	.bss.htim1,"aw",%nobits
  40              		.align	2
  43              	htim1:
  44 0000 00000000 		.space	180
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	htim2
  46              		.section	.bss.htim2,"aw",%nobits
  47              		.align	2
  50              	htim2:
  51 0000 00000000 		.space	180
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 2


  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.global	htim3
  53              		.section	.bss.htim3,"aw",%nobits
  54              		.align	2
  57              	htim3:
  58 0000 00000000 		.space	180
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              		.global	htim4
  60              		.section	.bss.htim4,"aw",%nobits
  61              		.align	2
  64              	htim4:
  65 0000 00000000 		.space	180
  65      00000000 
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.global	huart2
  67              		.section	.bss.huart2,"aw",%nobits
  68              		.align	2
  71              	huart2:
  72 0000 00000000 		.space	116
  72      00000000 
  72      00000000 
  72      00000000 
  72      00000000 
  73              		.section	.text.main,"ax",%progbits
  74              		.align	1
  75              		.global	main
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  80              	main:
  81              	.LFB65:
  82              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 3


  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "os.h"
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  49:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart2;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_ADC1_Init(void);
  63:Core/Src/main.c **** static void MX_I2C1_Init(void);
  64:Core/Src/main.c **** static void MX_TIM1_Init(void);
  65:Core/Src/main.c **** static void MX_TIM2_Init(void);
  66:Core/Src/main.c **** static void MX_TIM3_Init(void);
  67:Core/Src/main.c **** static void MX_TIM4_Init(void);
  68:Core/Src/main.c **** static void MX_I2C2_Init(void);
  69:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  70:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 4


  75:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END 0 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /**
  80:Core/Src/main.c ****   * @brief  The application entry point.
  81:Core/Src/main.c ****   * @retval int
  82:Core/Src/main.c ****   */
  83:Core/Src/main.c **** int main(void)
  84:Core/Src/main.c **** {
  83              		.loc 1 84 1
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 80B5     		push	{r7, lr}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 00AF     		add	r7, sp, #0
  93              	.LCFI1:
  94              		.cfi_def_cfa_register 7
  85:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****     /* USER CODE END 1 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Core/Src/main.c ****     HAL_Init();
  95              		.loc 1 92 5
  96 0004 FFF7FEFF 		bl	HAL_Init
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     /* USER CODE END Init */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     /* Configure the system clock */
  99:Core/Src/main.c ****     SystemClock_Config();
  97              		.loc 1 99 5
  98 0008 FFF7FEFF 		bl	SystemClock_Config
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     /* USER CODE END SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* Initialize all configured peripherals */
 106:Core/Src/main.c ****     MX_GPIO_Init();
  99              		.loc 1 106 5
 100 000c FFF7FEFF 		bl	MX_GPIO_Init
 107:Core/Src/main.c ****     MX_ADC1_Init();
 101              		.loc 1 107 5
 102 0010 FFF7FEFF 		bl	MX_ADC1_Init
 108:Core/Src/main.c ****     MX_I2C1_Init();
 103              		.loc 1 108 5
 104 0014 FFF7FEFF 		bl	MX_I2C1_Init
 109:Core/Src/main.c ****     MX_TIM1_Init();
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 5


 105              		.loc 1 109 5
 106 0018 FFF7FEFF 		bl	MX_TIM1_Init
 110:Core/Src/main.c ****     MX_TIM2_Init();
 107              		.loc 1 110 5
 108 001c FFF7FEFF 		bl	MX_TIM2_Init
 111:Core/Src/main.c ****     MX_TIM3_Init();
 109              		.loc 1 111 5
 110 0020 FFF7FEFF 		bl	MX_TIM3_Init
 112:Core/Src/main.c ****     MX_TIM4_Init();
 111              		.loc 1 112 5
 112 0024 FFF7FEFF 		bl	MX_TIM4_Init
 113:Core/Src/main.c ****     MX_I2C2_Init();
 113              		.loc 1 113 5
 114 0028 FFF7FEFF 		bl	MX_I2C2_Init
 114:Core/Src/main.c **** 	  MX_USART2_UART_Init();
 115              		.loc 1 114 4
 116 002c FFF7FEFF 		bl	MX_USART2_UART_Init
 115:Core/Src/main.c ****     
 116:Core/Src/main.c **** 	  EEPROM_Read();
 117              		.loc 1 116 4
 118 0030 FFF7FEFF 		bl	EEPROM_Read
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 119:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim1);
 119              		.loc 1 119 5
 120 0034 1048     		ldr	r0, .L3
 121 0036 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 120:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim2);
 122              		.loc 1 120 5
 123 003a 1048     		ldr	r0, .L3+4
 124 003c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 121:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim3);
 125              		.loc 1 121 5
 126 0040 0F48     		ldr	r0, .L3+8
 127 0042 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 122:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim4);
 128              		.loc 1 122 5
 129 0046 0F48     		ldr	r0, .L3+12
 130 0048 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 	  Os_Init_Task();
 131              		.loc 1 124 4
 132 004c FFF7FEFF 		bl	Os_Init_Task
 125:Core/Src/main.c ****     
 126:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 133              		.loc 1 126 5
 134 0050 0021     		movs	r1, #0
 135 0052 0B48     		ldr	r0, .L3+8
 136 0054 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 127:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 137              		.loc 1 127 5
 138 0058 0421     		movs	r1, #4
 139 005a 0948     		ldr	r0, .L3+8
 140 005c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 128:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 141              		.loc 1 128 5
 142 0060 0021     		movs	r1, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 6


 143 0062 0548     		ldr	r0, .L3
 144 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 129:Core/Src/main.c ****     HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_3);
 145              		.loc 1 129 5
 146 0068 0821     		movs	r1, #8
 147 006a 0348     		ldr	r0, .L3
 148 006c FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 149              	.L2:
 130:Core/Src/main.c ****     /* USER CODE END 2 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* Infinite loop */
 133:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 134:Core/Src/main.c ****     while (1)
 135:Core/Src/main.c ****     {
 136:Core/Src/main.c ****         /* USER CODE END WHILE */
 137:Core/Src/main.c ****         Os_Handler();
 150              		.loc 1 137 9 discriminator 1
 151 0070 FFF7FEFF 		bl	Os_Handler
 152 0074 FCE7     		b	.L2
 153              	.L4:
 154 0076 00BF     		.align	2
 155              	.L3:
 156 0078 00000000 		.word	htim1
 157 007c 00000000 		.word	htim2
 158 0080 00000000 		.word	htim3
 159 0084 00000000 		.word	htim4
 160              		.cfi_endproc
 161              	.LFE65:
 163              		.section	.text.SystemClock_Config,"ax",%progbits
 164              		.align	1
 165              		.global	SystemClock_Config
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	SystemClock_Config:
 171              	.LFB66:
 138:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 139:Core/Src/main.c ****     }
 140:Core/Src/main.c ****     /* USER CODE END 3 */
 141:Core/Src/main.c **** }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** /**
 144:Core/Src/main.c ****   * @brief System Clock Configuration
 145:Core/Src/main.c ****   * @retval None
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c **** void SystemClock_Config(void)
 148:Core/Src/main.c **** {
 172              		.loc 1 148 1
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 80
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 94B0     		sub	sp, sp, #80
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 7


 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 88
 184 0004 00AF     		add	r7, sp, #0
 185              	.LCFI4:
 186              		.cfi_def_cfa_register 7
 149:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 187              		.loc 1 149 22
 188 0006 07F12803 		add	r3, r7, #40
 189 000a 2822     		movs	r2, #40
 190 000c 0021     		movs	r1, #0
 191 000e 1846     		mov	r0, r3
 192 0010 FFF7FEFF 		bl	memset
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 193              		.loc 1 150 22
 194 0014 07F11403 		add	r3, r7, #20
 195 0018 0022     		movs	r2, #0
 196 001a 1A60     		str	r2, [r3]
 197 001c 5A60     		str	r2, [r3, #4]
 198 001e 9A60     		str	r2, [r3, #8]
 199 0020 DA60     		str	r2, [r3, #12]
 200 0022 1A61     		str	r2, [r3, #16]
 151:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 201              		.loc 1 151 28
 202 0024 3B1D     		adds	r3, r7, #4
 203 0026 0022     		movs	r2, #0
 204 0028 1A60     		str	r2, [r3]
 205 002a 5A60     		str	r2, [r3, #4]
 206 002c 9A60     		str	r2, [r3, #8]
 207 002e DA60     		str	r2, [r3, #12]
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 154:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 208              		.loc 1 156 36
 209 0030 0223     		movs	r3, #2
 210 0032 BB62     		str	r3, [r7, #40]
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 211              		.loc 1 157 30
 212 0034 0123     		movs	r3, #1
 213 0036 BB63     		str	r3, [r7, #56]
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 214              		.loc 1 158 41
 215 0038 1023     		movs	r3, #16
 216 003a FB63     		str	r3, [r7, #60]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 217              		.loc 1 159 34
 218 003c 0223     		movs	r3, #2
 219 003e 7B64     		str	r3, [r7, #68]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 220              		.loc 1 160 35
 221 0040 0023     		movs	r3, #0
 222 0042 BB64     		str	r3, [r7, #72]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 223              		.loc 1 161 32
 224 0044 4FF42013 		mov	r3, #2621440
 225 0048 FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 8


 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 226              		.loc 1 162 7
 227 004a 07F12803 		add	r3, r7, #40
 228 004e 1846     		mov	r0, r3
 229 0050 FFF7FEFF 		bl	HAL_RCC_OscConfig
 230 0054 0346     		mov	r3, r0
 231              		.loc 1 162 6
 232 0056 002B     		cmp	r3, #0
 233 0058 01D0     		beq	.L6
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 234              		.loc 1 164 5
 235 005a FFF7FEFF 		bl	Error_Handler
 236              	.L6:
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 237              		.loc 1 168 31
 238 005e 0F23     		movs	r3, #15
 239 0060 7B61     		str	r3, [r7, #20]
 169:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 240              		.loc 1 170 34
 241 0062 0223     		movs	r3, #2
 242 0064 BB61     		str	r3, [r7, #24]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 243              		.loc 1 171 35
 244 0066 0023     		movs	r3, #0
 245 0068 FB61     		str	r3, [r7, #28]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 246              		.loc 1 172 36
 247 006a 4FF48063 		mov	r3, #1024
 248 006e 3B62     		str	r3, [r7, #32]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 249              		.loc 1 173 36
 250 0070 0023     		movs	r3, #0
 251 0072 7B62     		str	r3, [r7, #36]
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 252              		.loc 1 175 7
 253 0074 07F11403 		add	r3, r7, #20
 254 0078 0121     		movs	r1, #1
 255 007a 1846     		mov	r0, r3
 256 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 257 0080 0346     		mov	r3, r0
 258              		.loc 1 175 6
 259 0082 002B     		cmp	r3, #0
 260 0084 01D0     		beq	.L7
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 261              		.loc 1 177 5
 262 0086 FFF7FEFF 		bl	Error_Handler
 263              	.L7:
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 264              		.loc 1 179 38
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 9


 265 008a 0223     		movs	r3, #2
 266 008c 7B60     		str	r3, [r7, #4]
 180:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
 267              		.loc 1 180 35
 268 008e 4FF48043 		mov	r3, #16384
 269 0092 FB60     		str	r3, [r7, #12]
 181:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 270              		.loc 1 181 7
 271 0094 3B1D     		adds	r3, r7, #4
 272 0096 1846     		mov	r0, r3
 273 0098 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 274 009c 0346     		mov	r3, r0
 275              		.loc 1 181 6
 276 009e 002B     		cmp	r3, #0
 277 00a0 01D0     		beq	.L9
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 278              		.loc 1 183 5
 279 00a2 FFF7FEFF 		bl	Error_Handler
 280              	.L9:
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c **** }
 281              		.loc 1 185 1
 282 00a6 00BF     		nop
 283 00a8 5037     		adds	r7, r7, #80
 284              	.LCFI5:
 285              		.cfi_def_cfa_offset 8
 286 00aa BD46     		mov	sp, r7
 287              	.LCFI6:
 288              		.cfi_def_cfa_register 13
 289              		@ sp needed
 290 00ac 80BD     		pop	{r7, pc}
 291              		.cfi_endproc
 292              	.LFE66:
 294              		.section	.text.MX_ADC1_Init,"ax",%progbits
 295              		.align	1
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	MX_ADC1_Init:
 301              	.LFB67:
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 189:Core/Src/main.c ****   * @param None
 190:Core/Src/main.c ****   * @retval None
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** static void MX_ADC1_Init(void)
 193:Core/Src/main.c **** {
 302              		.loc 1 193 1
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 16
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              	.LCFI7:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 10


 310              		.cfi_offset 14, -4
 311 0002 84B0     		sub	sp, sp, #16
 312              	.LCFI8:
 313              		.cfi_def_cfa_offset 24
 314 0004 00AF     		add	r7, sp, #0
 315              	.LCFI9:
 316              		.cfi_def_cfa_register 7
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 317              		.loc 1 199 26
 318 0006 3B1D     		adds	r3, r7, #4
 319 0008 0022     		movs	r2, #0
 320 000a 1A60     		str	r2, [r3]
 321 000c 5A60     		str	r2, [r3, #4]
 322 000e 9A60     		str	r2, [r3, #8]
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 204:Core/Src/main.c ****   /** Common config
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c ****   hadc1.Instance = ADC1;
 323              		.loc 1 206 18
 324 0010 184B     		ldr	r3, .L14
 325 0012 194A     		ldr	r2, .L14+4
 326 0014 1A60     		str	r2, [r3]
 207:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 327              		.loc 1 207 27
 328 0016 174B     		ldr	r3, .L14
 329 0018 0022     		movs	r2, #0
 330 001a 9A60     		str	r2, [r3, #8]
 208:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 331              		.loc 1 208 33
 332 001c 154B     		ldr	r3, .L14
 333 001e 0022     		movs	r2, #0
 334 0020 1A73     		strb	r2, [r3, #12]
 209:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 335              		.loc 1 209 36
 336 0022 144B     		ldr	r3, .L14
 337 0024 0022     		movs	r2, #0
 338 0026 1A75     		strb	r2, [r3, #20]
 210:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 339              		.loc 1 210 31
 340 0028 124B     		ldr	r3, .L14
 341 002a 4FF46022 		mov	r2, #917504
 342 002e DA61     		str	r2, [r3, #28]
 211:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 343              		.loc 1 211 24
 344 0030 104B     		ldr	r3, .L14
 345 0032 0022     		movs	r2, #0
 346 0034 5A60     		str	r2, [r3, #4]
 212:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 347              		.loc 1 212 30
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 11


 348 0036 0F4B     		ldr	r3, .L14
 349 0038 0122     		movs	r2, #1
 350 003a 1A61     		str	r2, [r3, #16]
 213:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 351              		.loc 1 213 7
 352 003c 0D48     		ldr	r0, .L14
 353 003e FFF7FEFF 		bl	HAL_ADC_Init
 354 0042 0346     		mov	r3, r0
 355              		.loc 1 213 6
 356 0044 002B     		cmp	r3, #0
 357 0046 01D0     		beq	.L11
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     Error_Handler();
 358              		.loc 1 215 5
 359 0048 FFF7FEFF 		bl	Error_Handler
 360              	.L11:
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c ****   /** Configure Regular Channel
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 361              		.loc 1 219 19
 362 004c 0023     		movs	r3, #0
 363 004e 7B60     		str	r3, [r7, #4]
 220:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 364              		.loc 1 220 16
 365 0050 0123     		movs	r3, #1
 366 0052 BB60     		str	r3, [r7, #8]
 221:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 367              		.loc 1 221 24
 368 0054 0023     		movs	r3, #0
 369 0056 FB60     		str	r3, [r7, #12]
 222:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 370              		.loc 1 222 7
 371 0058 3B1D     		adds	r3, r7, #4
 372 005a 1946     		mov	r1, r3
 373 005c 0548     		ldr	r0, .L14
 374 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 375 0062 0346     		mov	r3, r0
 376              		.loc 1 222 6
 377 0064 002B     		cmp	r3, #0
 378 0066 01D0     		beq	.L13
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 379              		.loc 1 224 5
 380 0068 FFF7FEFF 		bl	Error_Handler
 381              	.L13:
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** }
 382              		.loc 1 230 1
 383 006c 00BF     		nop
 384 006e 1037     		adds	r7, r7, #16
 385              	.LCFI10:
 386              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 12


 387 0070 BD46     		mov	sp, r7
 388              	.LCFI11:
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 0072 80BD     		pop	{r7, pc}
 392              	.L15:
 393              		.align	2
 394              	.L14:
 395 0074 00000000 		.word	hadc1
 396 0078 00240140 		.word	1073816576
 397              		.cfi_endproc
 398              	.LFE67:
 400              		.section	.text.MX_I2C1_Init,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 406              	MX_I2C1_Init:
 407              	.LFB68:
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 234:Core/Src/main.c ****   * @param None
 235:Core/Src/main.c ****   * @retval None
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c **** static void MX_I2C1_Init(void)
 238:Core/Src/main.c **** {
 408              		.loc 1 238 1
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412 0000 80B5     		push	{r7, lr}
 413              	.LCFI12:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              	.LCFI13:
 419              		.cfi_def_cfa_register 7
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 247:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 420              		.loc 1 247 18
 421 0004 124B     		ldr	r3, .L19
 422 0006 134A     		ldr	r2, .L19+4
 423 0008 1A60     		str	r2, [r3]
 248:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 424              		.loc 1 248 25
 425 000a 114B     		ldr	r3, .L19
 426 000c 124A     		ldr	r2, .L19+8
 427 000e 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 13


 249:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 428              		.loc 1 249 24
 429 0010 0F4B     		ldr	r3, .L19
 430 0012 0022     		movs	r2, #0
 431 0014 9A60     		str	r2, [r3, #8]
 250:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 432              		.loc 1 250 26
 433 0016 0E4B     		ldr	r3, .L19
 434 0018 0022     		movs	r2, #0
 435 001a DA60     		str	r2, [r3, #12]
 251:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 436              		.loc 1 251 29
 437 001c 0C4B     		ldr	r3, .L19
 438 001e 4FF48042 		mov	r2, #16384
 439 0022 1A61     		str	r2, [r3, #16]
 252:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 440              		.loc 1 252 30
 441 0024 0A4B     		ldr	r3, .L19
 442 0026 0022     		movs	r2, #0
 443 0028 5A61     		str	r2, [r3, #20]
 253:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 444              		.loc 1 253 26
 445 002a 094B     		ldr	r3, .L19
 446 002c 0022     		movs	r2, #0
 447 002e 9A61     		str	r2, [r3, #24]
 254:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 448              		.loc 1 254 30
 449 0030 074B     		ldr	r3, .L19
 450 0032 0022     		movs	r2, #0
 451 0034 DA61     		str	r2, [r3, #28]
 255:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 452              		.loc 1 255 28
 453 0036 064B     		ldr	r3, .L19
 454 0038 0022     		movs	r2, #0
 455 003a 1A62     		str	r2, [r3, #32]
 256:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 456              		.loc 1 256 7
 457 003c 0448     		ldr	r0, .L19
 458 003e FFF7FEFF 		bl	HAL_I2C_Init
 459 0042 0346     		mov	r3, r0
 460              		.loc 1 256 6
 461 0044 002B     		cmp	r3, #0
 462 0046 01D0     		beq	.L18
 257:Core/Src/main.c ****   {
 258:Core/Src/main.c ****     Error_Handler();
 463              		.loc 1 258 5
 464 0048 FFF7FEFF 		bl	Error_Handler
 465              	.L18:
 259:Core/Src/main.c ****   }
 260:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** }
 466              		.loc 1 264 1
 467 004c 00BF     		nop
 468 004e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 14


 469              	.L20:
 470              		.align	2
 471              	.L19:
 472 0050 00000000 		.word	hi2c1
 473 0054 00540040 		.word	1073763328
 474 0058 A0860100 		.word	100000
 475              		.cfi_endproc
 476              	.LFE68:
 478              		.section	.text.MX_I2C2_Init,"ax",%progbits
 479              		.align	1
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 484              	MX_I2C2_Init:
 485              	.LFB69:
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /**
 267:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 268:Core/Src/main.c ****   * @param None
 269:Core/Src/main.c ****   * @retval None
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c **** static void MX_I2C2_Init(void)
 272:Core/Src/main.c **** {
 486              		.loc 1 272 1
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490 0000 80B5     		push	{r7, lr}
 491              	.LCFI14:
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 7, -8
 494              		.cfi_offset 14, -4
 495 0002 00AF     		add	r7, sp, #0
 496              	.LCFI15:
 497              		.cfi_def_cfa_register 7
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 281:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 498              		.loc 1 281 18
 499 0004 124B     		ldr	r3, .L24
 500 0006 134A     		ldr	r2, .L24+4
 501 0008 1A60     		str	r2, [r3]
 282:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 502              		.loc 1 282 25
 503 000a 114B     		ldr	r3, .L24
 504 000c 124A     		ldr	r2, .L24+8
 505 000e 5A60     		str	r2, [r3, #4]
 283:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 506              		.loc 1 283 24
 507 0010 0F4B     		ldr	r3, .L24
 508 0012 0022     		movs	r2, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 15


 509 0014 9A60     		str	r2, [r3, #8]
 284:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 510              		.loc 1 284 26
 511 0016 0E4B     		ldr	r3, .L24
 512 0018 0022     		movs	r2, #0
 513 001a DA60     		str	r2, [r3, #12]
 285:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 514              		.loc 1 285 29
 515 001c 0C4B     		ldr	r3, .L24
 516 001e 4FF48042 		mov	r2, #16384
 517 0022 1A61     		str	r2, [r3, #16]
 286:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 518              		.loc 1 286 30
 519 0024 0A4B     		ldr	r3, .L24
 520 0026 0022     		movs	r2, #0
 521 0028 5A61     		str	r2, [r3, #20]
 287:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 522              		.loc 1 287 26
 523 002a 094B     		ldr	r3, .L24
 524 002c 0022     		movs	r2, #0
 525 002e 9A61     		str	r2, [r3, #24]
 288:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 526              		.loc 1 288 30
 527 0030 074B     		ldr	r3, .L24
 528 0032 0022     		movs	r2, #0
 529 0034 DA61     		str	r2, [r3, #28]
 289:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 530              		.loc 1 289 28
 531 0036 064B     		ldr	r3, .L24
 532 0038 0022     		movs	r2, #0
 533 003a 1A62     		str	r2, [r3, #32]
 290:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 534              		.loc 1 290 7
 535 003c 0448     		ldr	r0, .L24
 536 003e FFF7FEFF 		bl	HAL_I2C_Init
 537 0042 0346     		mov	r3, r0
 538              		.loc 1 290 6
 539 0044 002B     		cmp	r3, #0
 540 0046 01D0     		beq	.L23
 291:Core/Src/main.c ****   {
 292:Core/Src/main.c ****     Error_Handler();
 541              		.loc 1 292 5
 542 0048 FFF7FEFF 		bl	Error_Handler
 543              	.L23:
 293:Core/Src/main.c ****   }
 294:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** }
 544              		.loc 1 298 1
 545 004c 00BF     		nop
 546 004e 80BD     		pop	{r7, pc}
 547              	.L25:
 548              		.align	2
 549              	.L24:
 550 0050 00000000 		.word	hi2c2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 16


 551 0054 00580040 		.word	1073764352
 552 0058 A0860100 		.word	100000
 553              		.cfi_endproc
 554              	.LFE69:
 556              		.section	.text.MX_TIM1_Init,"ax",%progbits
 557              		.align	1
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 562              	MX_TIM1_Init:
 563              	.LFB70:
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** /**
 301:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 302:Core/Src/main.c ****   * @param None
 303:Core/Src/main.c ****   * @retval None
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c **** static void MX_TIM1_Init(void)
 306:Core/Src/main.c **** {
 564              		.loc 1 306 1
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 88
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568 0000 80B5     		push	{r7, lr}
 569              	.LCFI16:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 96B0     		sub	sp, sp, #88
 574              	.LCFI17:
 575              		.cfi_def_cfa_offset 96
 576 0004 00AF     		add	r7, sp, #0
 577              	.LCFI18:
 578              		.cfi_def_cfa_register 7
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 579              		.loc 1 312 26
 580 0006 07F14803 		add	r3, r7, #72
 581 000a 0022     		movs	r2, #0
 582 000c 1A60     		str	r2, [r3]
 583 000e 5A60     		str	r2, [r3, #4]
 584 0010 9A60     		str	r2, [r3, #8]
 585 0012 DA60     		str	r2, [r3, #12]
 313:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 586              		.loc 1 313 27
 587 0014 07F14003 		add	r3, r7, #64
 588 0018 0022     		movs	r2, #0
 589 001a 1A60     		str	r2, [r3]
 590 001c 5A60     		str	r2, [r3, #4]
 314:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 591              		.loc 1 314 22
 592 001e 07F12403 		add	r3, r7, #36
 593 0022 0022     		movs	r2, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 17


 594 0024 1A60     		str	r2, [r3]
 595 0026 5A60     		str	r2, [r3, #4]
 596 0028 9A60     		str	r2, [r3, #8]
 597 002a DA60     		str	r2, [r3, #12]
 598 002c 1A61     		str	r2, [r3, #16]
 599 002e 5A61     		str	r2, [r3, #20]
 600 0030 9A61     		str	r2, [r3, #24]
 315:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 601              		.loc 1 315 34
 602 0032 3B1D     		adds	r3, r7, #4
 603 0034 2022     		movs	r2, #32
 604 0036 0021     		movs	r1, #0
 605 0038 1846     		mov	r0, r3
 606 003a FFF7FEFF 		bl	memset
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 320:Core/Src/main.c ****   htim1.Instance = TIM1;
 607              		.loc 1 320 18
 608 003e 454B     		ldr	r3, .L34
 609 0040 454A     		ldr	r2, .L34+4
 610 0042 1A60     		str	r2, [r3]
 321:Core/Src/main.c ****   htim1.Init.Prescaler = 959;
 611              		.loc 1 321 24
 612 0044 434B     		ldr	r3, .L34
 613 0046 40F2BF32 		movw	r2, #959
 614 004a 5A60     		str	r2, [r3, #4]
 322:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 615              		.loc 1 322 26
 616 004c 414B     		ldr	r3, .L34
 617 004e 0022     		movs	r2, #0
 618 0050 9A60     		str	r2, [r3, #8]
 323:Core/Src/main.c ****   htim1.Init.Period = 1000;
 619              		.loc 1 323 21
 620 0052 404B     		ldr	r3, .L34
 621 0054 4FF47A72 		mov	r2, #1000
 622 0058 DA60     		str	r2, [r3, #12]
 324:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 623              		.loc 1 324 28
 624 005a 3E4B     		ldr	r3, .L34
 625 005c 0022     		movs	r2, #0
 626 005e 1A61     		str	r2, [r3, #16]
 325:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 627              		.loc 1 325 32
 628 0060 3C4B     		ldr	r3, .L34
 629 0062 0022     		movs	r2, #0
 630 0064 5A61     		str	r2, [r3, #20]
 326:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 631              		.loc 1 326 32
 632 0066 3B4B     		ldr	r3, .L34
 633 0068 8022     		movs	r2, #128
 634 006a 9A61     		str	r2, [r3, #24]
 327:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 635              		.loc 1 327 7
 636 006c 3948     		ldr	r0, .L34
 637 006e FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 18


 638 0072 0346     		mov	r3, r0
 639              		.loc 1 327 6
 640 0074 002B     		cmp	r3, #0
 641 0076 01D0     		beq	.L27
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 642              		.loc 1 329 5
 643 0078 FFF7FEFF 		bl	Error_Handler
 644              	.L27:
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 645              		.loc 1 331 34
 646 007c 4FF48053 		mov	r3, #4096
 647 0080 BB64     		str	r3, [r7, #72]
 332:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 648              		.loc 1 332 7
 649 0082 07F14803 		add	r3, r7, #72
 650 0086 1946     		mov	r1, r3
 651 0088 3248     		ldr	r0, .L34
 652 008a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 653 008e 0346     		mov	r3, r0
 654              		.loc 1 332 6
 655 0090 002B     		cmp	r3, #0
 656 0092 01D0     		beq	.L28
 333:Core/Src/main.c ****   {
 334:Core/Src/main.c ****     Error_Handler();
 657              		.loc 1 334 5
 658 0094 FFF7FEFF 		bl	Error_Handler
 659              	.L28:
 335:Core/Src/main.c ****   }
 336:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 660              		.loc 1 336 7
 661 0098 2E48     		ldr	r0, .L34
 662 009a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 663 009e 0346     		mov	r3, r0
 664              		.loc 1 336 6
 665 00a0 002B     		cmp	r3, #0
 666 00a2 01D0     		beq	.L29
 337:Core/Src/main.c ****   {
 338:Core/Src/main.c ****     Error_Handler();
 667              		.loc 1 338 5
 668 00a4 FFF7FEFF 		bl	Error_Handler
 669              	.L29:
 339:Core/Src/main.c ****   }
 340:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 670              		.loc 1 340 37
 671 00a8 0023     		movs	r3, #0
 672 00aa 3B64     		str	r3, [r7, #64]
 341:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 673              		.loc 1 341 33
 674 00ac 0023     		movs	r3, #0
 675 00ae 7B64     		str	r3, [r7, #68]
 342:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 676              		.loc 1 342 7
 677 00b0 07F14003 		add	r3, r7, #64
 678 00b4 1946     		mov	r1, r3
 679 00b6 2748     		ldr	r0, .L34
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 19


 680 00b8 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 681 00bc 0346     		mov	r3, r0
 682              		.loc 1 342 6
 683 00be 002B     		cmp	r3, #0
 684 00c0 01D0     		beq	.L30
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****     Error_Handler();
 685              		.loc 1 344 5
 686 00c2 FFF7FEFF 		bl	Error_Handler
 687              	.L30:
 345:Core/Src/main.c ****   }
 346:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 688              		.loc 1 346 20
 689 00c6 6023     		movs	r3, #96
 690 00c8 7B62     		str	r3, [r7, #36]
 347:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 691              		.loc 1 347 19
 692 00ca 0023     		movs	r3, #0
 693 00cc BB62     		str	r3, [r7, #40]
 348:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 694              		.loc 1 348 24
 695 00ce 0023     		movs	r3, #0
 696 00d0 FB62     		str	r3, [r7, #44]
 349:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 697              		.loc 1 349 25
 698 00d2 0023     		movs	r3, #0
 699 00d4 3B63     		str	r3, [r7, #48]
 350:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 700              		.loc 1 350 24
 701 00d6 0023     		movs	r3, #0
 702 00d8 7B63     		str	r3, [r7, #52]
 351:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 703              		.loc 1 351 25
 704 00da 0023     		movs	r3, #0
 705 00dc BB63     		str	r3, [r7, #56]
 352:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 706              		.loc 1 352 26
 707 00de 0023     		movs	r3, #0
 708 00e0 FB63     		str	r3, [r7, #60]
 353:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 709              		.loc 1 353 7
 710 00e2 07F12403 		add	r3, r7, #36
 711 00e6 0022     		movs	r2, #0
 712 00e8 1946     		mov	r1, r3
 713 00ea 1A48     		ldr	r0, .L34
 714 00ec FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 715 00f0 0346     		mov	r3, r0
 716              		.loc 1 353 6
 717 00f2 002B     		cmp	r3, #0
 718 00f4 01D0     		beq	.L31
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 719              		.loc 1 355 5
 720 00f6 FFF7FEFF 		bl	Error_Handler
 721              	.L31:
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 20


 722              		.loc 1 357 7
 723 00fa 07F12403 		add	r3, r7, #36
 724 00fe 0822     		movs	r2, #8
 725 0100 1946     		mov	r1, r3
 726 0102 1448     		ldr	r0, .L34
 727 0104 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 728 0108 0346     		mov	r3, r0
 729              		.loc 1 357 6
 730 010a 002B     		cmp	r3, #0
 731 010c 01D0     		beq	.L32
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     Error_Handler();
 732              		.loc 1 359 5
 733 010e FFF7FEFF 		bl	Error_Handler
 734              	.L32:
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 735              		.loc 1 361 40
 736 0112 0023     		movs	r3, #0
 737 0114 7B60     		str	r3, [r7, #4]
 362:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 738              		.loc 1 362 41
 739 0116 0023     		movs	r3, #0
 740 0118 BB60     		str	r3, [r7, #8]
 363:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 741              		.loc 1 363 34
 742 011a 0023     		movs	r3, #0
 743 011c FB60     		str	r3, [r7, #12]
 364:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 744              		.loc 1 364 33
 745 011e 0023     		movs	r3, #0
 746 0120 3B61     		str	r3, [r7, #16]
 365:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 747              		.loc 1 365 35
 748 0122 0023     		movs	r3, #0
 749 0124 7B61     		str	r3, [r7, #20]
 366:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 750              		.loc 1 366 38
 751 0126 4FF40053 		mov	r3, #8192
 752 012a BB61     		str	r3, [r7, #24]
 367:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 753              		.loc 1 367 40
 754 012c 0023     		movs	r3, #0
 755 012e 3B62     		str	r3, [r7, #32]
 368:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 756              		.loc 1 368 7
 757 0130 3B1D     		adds	r3, r7, #4
 758 0132 1946     		mov	r1, r3
 759 0134 0748     		ldr	r0, .L34
 760 0136 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 761 013a 0346     		mov	r3, r0
 762              		.loc 1 368 6
 763 013c 002B     		cmp	r3, #0
 764 013e 01D0     		beq	.L33
 369:Core/Src/main.c ****   {
 370:Core/Src/main.c ****     Error_Handler();
 765              		.loc 1 370 5
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 21


 766 0140 FFF7FEFF 		bl	Error_Handler
 767              	.L33:
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 375:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 768              		.loc 1 375 3
 769 0144 0348     		ldr	r0, .L34
 770 0146 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** }
 771              		.loc 1 377 1
 772 014a 00BF     		nop
 773 014c 5837     		adds	r7, r7, #88
 774              	.LCFI19:
 775              		.cfi_def_cfa_offset 8
 776 014e BD46     		mov	sp, r7
 777              	.LCFI20:
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 0150 80BD     		pop	{r7, pc}
 781              	.L35:
 782 0152 00BF     		.align	2
 783              	.L34:
 784 0154 00000000 		.word	htim1
 785 0158 002C0140 		.word	1073818624
 786              		.cfi_endproc
 787              	.LFE70:
 789              		.section	.text.MX_TIM2_Init,"ax",%progbits
 790              		.align	1
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 795              	MX_TIM2_Init:
 796              	.LFB71:
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /**
 380:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 381:Core/Src/main.c ****   * @param None
 382:Core/Src/main.c ****   * @retval None
 383:Core/Src/main.c ****   */
 384:Core/Src/main.c **** static void MX_TIM2_Init(void)
 385:Core/Src/main.c **** {
 797              		.loc 1 385 1
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 24
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801 0000 80B5     		push	{r7, lr}
 802              	.LCFI21:
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 86B0     		sub	sp, sp, #24
 807              	.LCFI22:
 808              		.cfi_def_cfa_offset 32
 809 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 22


 810              	.LCFI23:
 811              		.cfi_def_cfa_register 7
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 812              		.loc 1 391 26
 813 0006 07F10803 		add	r3, r7, #8
 814 000a 0022     		movs	r2, #0
 815 000c 1A60     		str	r2, [r3]
 816 000e 5A60     		str	r2, [r3, #4]
 817 0010 9A60     		str	r2, [r3, #8]
 818 0012 DA60     		str	r2, [r3, #12]
 392:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 819              		.loc 1 392 27
 820 0014 3B46     		mov	r3, r7
 821 0016 0022     		movs	r2, #0
 822 0018 1A60     		str	r2, [r3]
 823 001a 5A60     		str	r2, [r3, #4]
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 397:Core/Src/main.c ****   htim2.Instance = TIM2;
 824              		.loc 1 397 18
 825 001c 1E4B     		ldr	r3, .L41
 826 001e 4FF08042 		mov	r2, #1073741824
 827 0022 1A60     		str	r2, [r3]
 398:Core/Src/main.c ****   htim2.Init.Prescaler = 479;
 828              		.loc 1 398 24
 829 0024 1C4B     		ldr	r3, .L41
 830 0026 40F2DF12 		movw	r2, #479
 831 002a 5A60     		str	r2, [r3, #4]
 399:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 832              		.loc 1 399 26
 833 002c 1A4B     		ldr	r3, .L41
 834 002e 0022     		movs	r2, #0
 835 0030 9A60     		str	r2, [r3, #8]
 400:Core/Src/main.c ****   htim2.Init.Period = 1000;
 836              		.loc 1 400 21
 837 0032 194B     		ldr	r3, .L41
 838 0034 4FF47A72 		mov	r2, #1000
 839 0038 DA60     		str	r2, [r3, #12]
 401:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 840              		.loc 1 401 28
 841 003a 174B     		ldr	r3, .L41
 842 003c 0022     		movs	r2, #0
 843 003e 1A61     		str	r2, [r3, #16]
 402:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 844              		.loc 1 402 32
 845 0040 154B     		ldr	r3, .L41
 846 0042 8022     		movs	r2, #128
 847 0044 9A61     		str	r2, [r3, #24]
 403:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 848              		.loc 1 403 7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 23


 849 0046 1448     		ldr	r0, .L41
 850 0048 FFF7FEFF 		bl	HAL_TIM_Base_Init
 851 004c 0346     		mov	r3, r0
 852              		.loc 1 403 6
 853 004e 002B     		cmp	r3, #0
 854 0050 01D0     		beq	.L37
 404:Core/Src/main.c ****   {
 405:Core/Src/main.c ****     Error_Handler();
 855              		.loc 1 405 5
 856 0052 FFF7FEFF 		bl	Error_Handler
 857              	.L37:
 406:Core/Src/main.c ****   }
 407:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 858              		.loc 1 407 34
 859 0056 4FF48053 		mov	r3, #4096
 860 005a BB60     		str	r3, [r7, #8]
 408:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 861              		.loc 1 408 7
 862 005c 07F10803 		add	r3, r7, #8
 863 0060 1946     		mov	r1, r3
 864 0062 0D48     		ldr	r0, .L41
 865 0064 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 866 0068 0346     		mov	r3, r0
 867              		.loc 1 408 6
 868 006a 002B     		cmp	r3, #0
 869 006c 01D0     		beq	.L38
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 870              		.loc 1 410 5
 871 006e FFF7FEFF 		bl	Error_Handler
 872              	.L38:
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 873              		.loc 1 412 37
 874 0072 0023     		movs	r3, #0
 875 0074 3B60     		str	r3, [r7]
 413:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 876              		.loc 1 413 33
 877 0076 0023     		movs	r3, #0
 878 0078 7B60     		str	r3, [r7, #4]
 414:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 879              		.loc 1 414 7
 880 007a 3B46     		mov	r3, r7
 881 007c 1946     		mov	r1, r3
 882 007e 0648     		ldr	r0, .L41
 883 0080 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 884 0084 0346     		mov	r3, r0
 885              		.loc 1 414 6
 886 0086 002B     		cmp	r3, #0
 887 0088 01D0     		beq	.L40
 415:Core/Src/main.c ****   {
 416:Core/Src/main.c ****     Error_Handler();
 888              		.loc 1 416 5
 889 008a FFF7FEFF 		bl	Error_Handler
 890              	.L40:
 417:Core/Src/main.c ****   }
 418:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 24


 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** }
 891              		.loc 1 422 1
 892 008e 00BF     		nop
 893 0090 1837     		adds	r7, r7, #24
 894              	.LCFI24:
 895              		.cfi_def_cfa_offset 8
 896 0092 BD46     		mov	sp, r7
 897              	.LCFI25:
 898              		.cfi_def_cfa_register 13
 899              		@ sp needed
 900 0094 80BD     		pop	{r7, pc}
 901              	.L42:
 902 0096 00BF     		.align	2
 903              	.L41:
 904 0098 00000000 		.word	htim2
 905              		.cfi_endproc
 906              	.LFE71:
 908              		.section	.text.MX_TIM3_Init,"ax",%progbits
 909              		.align	1
 910              		.syntax unified
 911              		.thumb
 912              		.thumb_func
 914              	MX_TIM3_Init:
 915              	.LFB72:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** /**
 425:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 426:Core/Src/main.c ****   * @param None
 427:Core/Src/main.c ****   * @retval None
 428:Core/Src/main.c ****   */
 429:Core/Src/main.c **** static void MX_TIM3_Init(void)
 430:Core/Src/main.c **** {
 916              		.loc 1 430 1
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 56
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              	.LCFI26:
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 8EB0     		sub	sp, sp, #56
 926              	.LCFI27:
 927              		.cfi_def_cfa_offset 64
 928 0004 00AF     		add	r7, sp, #0
 929              	.LCFI28:
 930              		.cfi_def_cfa_register 7
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 931              		.loc 1 436 26
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 25


 932 0006 07F12803 		add	r3, r7, #40
 933 000a 0022     		movs	r2, #0
 934 000c 1A60     		str	r2, [r3]
 935 000e 5A60     		str	r2, [r3, #4]
 936 0010 9A60     		str	r2, [r3, #8]
 937 0012 DA60     		str	r2, [r3, #12]
 437:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 938              		.loc 1 437 27
 939 0014 07F12003 		add	r3, r7, #32
 940 0018 0022     		movs	r2, #0
 941 001a 1A60     		str	r2, [r3]
 942 001c 5A60     		str	r2, [r3, #4]
 438:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 943              		.loc 1 438 22
 944 001e 3B1D     		adds	r3, r7, #4
 945 0020 0022     		movs	r2, #0
 946 0022 1A60     		str	r2, [r3]
 947 0024 5A60     		str	r2, [r3, #4]
 948 0026 9A60     		str	r2, [r3, #8]
 949 0028 DA60     		str	r2, [r3, #12]
 950 002a 1A61     		str	r2, [r3, #16]
 951 002c 5A61     		str	r2, [r3, #20]
 952 002e 9A61     		str	r2, [r3, #24]
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 443:Core/Src/main.c ****   htim3.Instance = TIM3;
 953              		.loc 1 443 18
 954 0030 324B     		ldr	r3, .L50
 955 0032 334A     		ldr	r2, .L50+4
 956 0034 1A60     		str	r2, [r3]
 444:Core/Src/main.c ****   htim3.Init.Prescaler = 479;
 957              		.loc 1 444 24
 958 0036 314B     		ldr	r3, .L50
 959 0038 40F2DF12 		movw	r2, #479
 960 003c 5A60     		str	r2, [r3, #4]
 445:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 961              		.loc 1 445 26
 962 003e 2F4B     		ldr	r3, .L50
 963 0040 0022     		movs	r2, #0
 964 0042 9A60     		str	r2, [r3, #8]
 446:Core/Src/main.c ****   htim3.Init.Period = 1000;
 965              		.loc 1 446 21
 966 0044 2D4B     		ldr	r3, .L50
 967 0046 4FF47A72 		mov	r2, #1000
 968 004a DA60     		str	r2, [r3, #12]
 447:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 969              		.loc 1 447 28
 970 004c 2B4B     		ldr	r3, .L50
 971 004e 0022     		movs	r2, #0
 972 0050 1A61     		str	r2, [r3, #16]
 448:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 973              		.loc 1 448 32
 974 0052 2A4B     		ldr	r3, .L50
 975 0054 8022     		movs	r2, #128
 976 0056 9A61     		str	r2, [r3, #24]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 26


 449:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 977              		.loc 1 449 7
 978 0058 2848     		ldr	r0, .L50
 979 005a FFF7FEFF 		bl	HAL_TIM_Base_Init
 980 005e 0346     		mov	r3, r0
 981              		.loc 1 449 6
 982 0060 002B     		cmp	r3, #0
 983 0062 01D0     		beq	.L44
 450:Core/Src/main.c ****   {
 451:Core/Src/main.c ****     Error_Handler();
 984              		.loc 1 451 5
 985 0064 FFF7FEFF 		bl	Error_Handler
 986              	.L44:
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 987              		.loc 1 453 34
 988 0068 4FF48053 		mov	r3, #4096
 989 006c BB62     		str	r3, [r7, #40]
 454:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 990              		.loc 1 454 7
 991 006e 07F12803 		add	r3, r7, #40
 992 0072 1946     		mov	r1, r3
 993 0074 2148     		ldr	r0, .L50
 994 0076 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 995 007a 0346     		mov	r3, r0
 996              		.loc 1 454 6
 997 007c 002B     		cmp	r3, #0
 998 007e 01D0     		beq	.L45
 455:Core/Src/main.c ****   {
 456:Core/Src/main.c ****     Error_Handler();
 999              		.loc 1 456 5
 1000 0080 FFF7FEFF 		bl	Error_Handler
 1001              	.L45:
 457:Core/Src/main.c ****   }
 458:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1002              		.loc 1 458 7
 1003 0084 1D48     		ldr	r0, .L50
 1004 0086 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1005 008a 0346     		mov	r3, r0
 1006              		.loc 1 458 6
 1007 008c 002B     		cmp	r3, #0
 1008 008e 01D0     		beq	.L46
 459:Core/Src/main.c ****   {
 460:Core/Src/main.c ****     Error_Handler();
 1009              		.loc 1 460 5
 1010 0090 FFF7FEFF 		bl	Error_Handler
 1011              	.L46:
 461:Core/Src/main.c ****   }
 462:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1012              		.loc 1 462 37
 1013 0094 0023     		movs	r3, #0
 1014 0096 3B62     		str	r3, [r7, #32]
 463:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1015              		.loc 1 463 33
 1016 0098 0023     		movs	r3, #0
 1017 009a 7B62     		str	r3, [r7, #36]
 464:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 27


 1018              		.loc 1 464 7
 1019 009c 07F12003 		add	r3, r7, #32
 1020 00a0 1946     		mov	r1, r3
 1021 00a2 1648     		ldr	r0, .L50
 1022 00a4 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1023 00a8 0346     		mov	r3, r0
 1024              		.loc 1 464 6
 1025 00aa 002B     		cmp	r3, #0
 1026 00ac 01D0     		beq	.L47
 465:Core/Src/main.c ****   {
 466:Core/Src/main.c ****     Error_Handler();
 1027              		.loc 1 466 5
 1028 00ae FFF7FEFF 		bl	Error_Handler
 1029              	.L47:
 467:Core/Src/main.c ****   }
 468:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1030              		.loc 1 468 20
 1031 00b2 6023     		movs	r3, #96
 1032 00b4 7B60     		str	r3, [r7, #4]
 469:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1033              		.loc 1 469 19
 1034 00b6 0023     		movs	r3, #0
 1035 00b8 BB60     		str	r3, [r7, #8]
 470:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1036              		.loc 1 470 24
 1037 00ba 0023     		movs	r3, #0
 1038 00bc FB60     		str	r3, [r7, #12]
 471:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1039              		.loc 1 471 24
 1040 00be 0023     		movs	r3, #0
 1041 00c0 7B61     		str	r3, [r7, #20]
 472:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1042              		.loc 1 472 7
 1043 00c2 3B1D     		adds	r3, r7, #4
 1044 00c4 0022     		movs	r2, #0
 1045 00c6 1946     		mov	r1, r3
 1046 00c8 0C48     		ldr	r0, .L50
 1047 00ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1048 00ce 0346     		mov	r3, r0
 1049              		.loc 1 472 6
 1050 00d0 002B     		cmp	r3, #0
 1051 00d2 01D0     		beq	.L48
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 1052              		.loc 1 474 5
 1053 00d4 FFF7FEFF 		bl	Error_Handler
 1054              	.L48:
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1055              		.loc 1 476 7
 1056 00d8 3B1D     		adds	r3, r7, #4
 1057 00da 0422     		movs	r2, #4
 1058 00dc 1946     		mov	r1, r3
 1059 00de 0748     		ldr	r0, .L50
 1060 00e0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1061 00e4 0346     		mov	r3, r0
 1062              		.loc 1 476 6
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 28


 1063 00e6 002B     		cmp	r3, #0
 1064 00e8 01D0     		beq	.L49
 477:Core/Src/main.c ****   {
 478:Core/Src/main.c ****     Error_Handler();
 1065              		.loc 1 478 5
 1066 00ea FFF7FEFF 		bl	Error_Handler
 1067              	.L49:
 479:Core/Src/main.c ****   }
 480:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 483:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 1068              		.loc 1 483 3
 1069 00ee 0348     		ldr	r0, .L50
 1070 00f0 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 484:Core/Src/main.c **** 
 485:Core/Src/main.c **** }
 1071              		.loc 1 485 1
 1072 00f4 00BF     		nop
 1073 00f6 3837     		adds	r7, r7, #56
 1074              	.LCFI29:
 1075              		.cfi_def_cfa_offset 8
 1076 00f8 BD46     		mov	sp, r7
 1077              	.LCFI30:
 1078              		.cfi_def_cfa_register 13
 1079              		@ sp needed
 1080 00fa 80BD     		pop	{r7, pc}
 1081              	.L51:
 1082              		.align	2
 1083              	.L50:
 1084 00fc 00000000 		.word	htim3
 1085 0100 00040040 		.word	1073742848
 1086              		.cfi_endproc
 1087              	.LFE72:
 1089              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1090              		.align	1
 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1095              	MX_TIM4_Init:
 1096              	.LFB73:
 486:Core/Src/main.c **** 
 487:Core/Src/main.c **** /**
 488:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 489:Core/Src/main.c ****   * @param None
 490:Core/Src/main.c ****   * @retval None
 491:Core/Src/main.c ****   */
 492:Core/Src/main.c **** static void MX_TIM4_Init(void)
 493:Core/Src/main.c **** {
 1097              		.loc 1 493 1
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 24
 1100              		@ frame_needed = 1, uses_anonymous_args = 0
 1101 0000 80B5     		push	{r7, lr}
 1102              	.LCFI31:
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 7, -8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 29


 1105              		.cfi_offset 14, -4
 1106 0002 86B0     		sub	sp, sp, #24
 1107              	.LCFI32:
 1108              		.cfi_def_cfa_offset 32
 1109 0004 00AF     		add	r7, sp, #0
 1110              	.LCFI33:
 1111              		.cfi_def_cfa_register 7
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1112              		.loc 1 499 26
 1113 0006 07F10803 		add	r3, r7, #8
 1114 000a 0022     		movs	r2, #0
 1115 000c 1A60     		str	r2, [r3]
 1116 000e 5A60     		str	r2, [r3, #4]
 1117 0010 9A60     		str	r2, [r3, #8]
 1118 0012 DA60     		str	r2, [r3, #12]
 500:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1119              		.loc 1 500 27
 1120 0014 3B46     		mov	r3, r7
 1121 0016 0022     		movs	r2, #0
 1122 0018 1A60     		str	r2, [r3]
 1123 001a 5A60     		str	r2, [r3, #4]
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 505:Core/Src/main.c ****   htim4.Instance = TIM4;
 1124              		.loc 1 505 18
 1125 001c 1C4B     		ldr	r3, .L57
 1126 001e 1D4A     		ldr	r2, .L57+4
 1127 0020 1A60     		str	r2, [r3]
 506:Core/Src/main.c ****   htim4.Init.Prescaler = 47;
 1128              		.loc 1 506 24
 1129 0022 1B4B     		ldr	r3, .L57
 1130 0024 2F22     		movs	r2, #47
 1131 0026 5A60     		str	r2, [r3, #4]
 507:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1132              		.loc 1 507 26
 1133 0028 194B     		ldr	r3, .L57
 1134 002a 0022     		movs	r2, #0
 1135 002c 9A60     		str	r2, [r3, #8]
 508:Core/Src/main.c ****   htim4.Init.Period = 100;
 1136              		.loc 1 508 21
 1137 002e 184B     		ldr	r3, .L57
 1138 0030 6422     		movs	r2, #100
 1139 0032 DA60     		str	r2, [r3, #12]
 509:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1140              		.loc 1 509 28
 1141 0034 164B     		ldr	r3, .L57
 1142 0036 0022     		movs	r2, #0
 1143 0038 1A61     		str	r2, [r3, #16]
 510:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1144              		.loc 1 510 32
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 30


 1145 003a 154B     		ldr	r3, .L57
 1146 003c 8022     		movs	r2, #128
 1147 003e 9A61     		str	r2, [r3, #24]
 511:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 1148              		.loc 1 511 7
 1149 0040 1348     		ldr	r0, .L57
 1150 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1151 0046 0346     		mov	r3, r0
 1152              		.loc 1 511 6
 1153 0048 002B     		cmp	r3, #0
 1154 004a 01D0     		beq	.L53
 512:Core/Src/main.c ****   {
 513:Core/Src/main.c ****     Error_Handler();
 1155              		.loc 1 513 5
 1156 004c FFF7FEFF 		bl	Error_Handler
 1157              	.L53:
 514:Core/Src/main.c ****   }
 515:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1158              		.loc 1 515 34
 1159 0050 4FF48053 		mov	r3, #4096
 1160 0054 BB60     		str	r3, [r7, #8]
 516:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 1161              		.loc 1 516 7
 1162 0056 07F10803 		add	r3, r7, #8
 1163 005a 1946     		mov	r1, r3
 1164 005c 0C48     		ldr	r0, .L57
 1165 005e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1166 0062 0346     		mov	r3, r0
 1167              		.loc 1 516 6
 1168 0064 002B     		cmp	r3, #0
 1169 0066 01D0     		beq	.L54
 517:Core/Src/main.c ****   {
 518:Core/Src/main.c ****     Error_Handler();
 1170              		.loc 1 518 5
 1171 0068 FFF7FEFF 		bl	Error_Handler
 1172              	.L54:
 519:Core/Src/main.c ****   }
 520:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1173              		.loc 1 520 37
 1174 006c 0023     		movs	r3, #0
 1175 006e 3B60     		str	r3, [r7]
 521:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1176              		.loc 1 521 33
 1177 0070 0023     		movs	r3, #0
 1178 0072 7B60     		str	r3, [r7, #4]
 522:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1179              		.loc 1 522 7
 1180 0074 3B46     		mov	r3, r7
 1181 0076 1946     		mov	r1, r3
 1182 0078 0548     		ldr	r0, .L57
 1183 007a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1184 007e 0346     		mov	r3, r0
 1185              		.loc 1 522 6
 1186 0080 002B     		cmp	r3, #0
 1187 0082 01D0     		beq	.L56
 523:Core/Src/main.c ****   {
 524:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 31


 1188              		.loc 1 524 5
 1189 0084 FFF7FEFF 		bl	Error_Handler
 1190              	.L56:
 525:Core/Src/main.c ****   }
 526:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 529:Core/Src/main.c **** 
 530:Core/Src/main.c **** }
 1191              		.loc 1 530 1
 1192 0088 00BF     		nop
 1193 008a 1837     		adds	r7, r7, #24
 1194              	.LCFI34:
 1195              		.cfi_def_cfa_offset 8
 1196 008c BD46     		mov	sp, r7
 1197              	.LCFI35:
 1198              		.cfi_def_cfa_register 13
 1199              		@ sp needed
 1200 008e 80BD     		pop	{r7, pc}
 1201              	.L58:
 1202              		.align	2
 1203              	.L57:
 1204 0090 00000000 		.word	htim4
 1205 0094 00080040 		.word	1073743872
 1206              		.cfi_endproc
 1207              	.LFE73:
 1209              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1210              		.align	1
 1211              		.syntax unified
 1212              		.thumb
 1213              		.thumb_func
 1215              	MX_USART2_UART_Init:
 1216              	.LFB74:
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** /**
 533:Core/Src/main.c ****   * @brief USART2 Initialization Function
 534:Core/Src/main.c ****   * @param None
 535:Core/Src/main.c ****   * @retval None
 536:Core/Src/main.c ****   */
 537:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 538:Core/Src/main.c **** {
 1217              		.loc 1 538 1
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221 0000 80B5     		push	{r7, lr}
 1222              	.LCFI36:
 1223              		.cfi_def_cfa_offset 8
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 00AF     		add	r7, sp, #0
 1227              	.LCFI37:
 1228              		.cfi_def_cfa_register 7
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 32


 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 547:Core/Src/main.c ****   huart2.Instance = USART2;
 1229              		.loc 1 547 19
 1230 0004 114B     		ldr	r3, .L62
 1231 0006 124A     		ldr	r2, .L62+4
 1232 0008 1A60     		str	r2, [r3]
 548:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 1233              		.loc 1 548 24
 1234 000a 104B     		ldr	r3, .L62
 1235 000c 4FF41652 		mov	r2, #9600
 1236 0010 5A60     		str	r2, [r3, #4]
 549:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1237              		.loc 1 549 26
 1238 0012 0E4B     		ldr	r3, .L62
 1239 0014 0022     		movs	r2, #0
 1240 0016 9A60     		str	r2, [r3, #8]
 550:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1241              		.loc 1 550 24
 1242 0018 0C4B     		ldr	r3, .L62
 1243 001a 0022     		movs	r2, #0
 1244 001c DA60     		str	r2, [r3, #12]
 551:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1245              		.loc 1 551 22
 1246 001e 0B4B     		ldr	r3, .L62
 1247 0020 0022     		movs	r2, #0
 1248 0022 1A61     		str	r2, [r3, #16]
 552:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1249              		.loc 1 552 20
 1250 0024 094B     		ldr	r3, .L62
 1251 0026 0C22     		movs	r2, #12
 1252 0028 5A61     		str	r2, [r3, #20]
 553:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1253              		.loc 1 553 25
 1254 002a 084B     		ldr	r3, .L62
 1255 002c 0022     		movs	r2, #0
 1256 002e 9A61     		str	r2, [r3, #24]
 554:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1257              		.loc 1 554 28
 1258 0030 064B     		ldr	r3, .L62
 1259 0032 0022     		movs	r2, #0
 1260 0034 DA61     		str	r2, [r3, #28]
 555:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1261              		.loc 1 555 7
 1262 0036 0548     		ldr	r0, .L62
 1263 0038 FFF7FEFF 		bl	HAL_UART_Init
 1264 003c 0346     		mov	r3, r0
 1265              		.loc 1 555 6
 1266 003e 002B     		cmp	r3, #0
 1267 0040 01D0     		beq	.L61
 556:Core/Src/main.c ****   {
 557:Core/Src/main.c ****     Error_Handler();
 1268              		.loc 1 557 5
 1269 0042 FFF7FEFF 		bl	Error_Handler
 1270              	.L61:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 33


 558:Core/Src/main.c ****   }
 559:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** }
 1271              		.loc 1 563 1
 1272 0046 00BF     		nop
 1273 0048 80BD     		pop	{r7, pc}
 1274              	.L63:
 1275 004a 00BF     		.align	2
 1276              	.L62:
 1277 004c 00000000 		.word	huart2
 1278 0050 00440040 		.word	1073759232
 1279              		.cfi_endproc
 1280              	.LFE74:
 1282              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1283              		.align	1
 1284              		.syntax unified
 1285              		.thumb
 1286              		.thumb_func
 1288              	MX_GPIO_Init:
 1289              	.LFB75:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** /**
 566:Core/Src/main.c ****   * @brief GPIO Initialization Function
 567:Core/Src/main.c ****   * @param None
 568:Core/Src/main.c ****   * @retval None
 569:Core/Src/main.c ****   */
 570:Core/Src/main.c **** static void MX_GPIO_Init(void)
 571:Core/Src/main.c **** {
 1290              		.loc 1 571 1
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 32
 1293              		@ frame_needed = 1, uses_anonymous_args = 0
 1294 0000 80B5     		push	{r7, lr}
 1295              	.LCFI38:
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 88B0     		sub	sp, sp, #32
 1300              	.LCFI39:
 1301              		.cfi_def_cfa_offset 40
 1302 0004 00AF     		add	r7, sp, #0
 1303              	.LCFI40:
 1304              		.cfi_def_cfa_register 7
 572:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1305              		.loc 1 572 20
 1306 0006 07F11003 		add	r3, r7, #16
 1307 000a 0022     		movs	r2, #0
 1308 000c 1A60     		str	r2, [r3]
 1309 000e 5A60     		str	r2, [r3, #4]
 1310 0010 9A60     		str	r2, [r3, #8]
 1311 0012 DA60     		str	r2, [r3, #12]
 1312              	.LBB4:
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 34


 575:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1313              		.loc 1 575 3
 1314 0014 3F4B     		ldr	r3, .L65
 1315 0016 9B69     		ldr	r3, [r3, #24]
 1316 0018 3E4A     		ldr	r2, .L65
 1317 001a 43F01003 		orr	r3, r3, #16
 1318 001e 9361     		str	r3, [r2, #24]
 1319 0020 3C4B     		ldr	r3, .L65
 1320 0022 9B69     		ldr	r3, [r3, #24]
 1321 0024 03F01003 		and	r3, r3, #16
 1322 0028 FB60     		str	r3, [r7, #12]
 1323 002a FB68     		ldr	r3, [r7, #12]
 1324              	.LBE4:
 1325              	.LBB5:
 576:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1326              		.loc 1 576 3
 1327 002c 394B     		ldr	r3, .L65
 1328 002e 9B69     		ldr	r3, [r3, #24]
 1329 0030 384A     		ldr	r2, .L65
 1330 0032 43F00403 		orr	r3, r3, #4
 1331 0036 9361     		str	r3, [r2, #24]
 1332 0038 364B     		ldr	r3, .L65
 1333 003a 9B69     		ldr	r3, [r3, #24]
 1334 003c 03F00403 		and	r3, r3, #4
 1335 0040 BB60     		str	r3, [r7, #8]
 1336 0042 BB68     		ldr	r3, [r7, #8]
 1337              	.LBE5:
 1338              	.LBB6:
 577:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1339              		.loc 1 577 3
 1340 0044 334B     		ldr	r3, .L65
 1341 0046 9B69     		ldr	r3, [r3, #24]
 1342 0048 324A     		ldr	r2, .L65
 1343 004a 43F00803 		orr	r3, r3, #8
 1344 004e 9361     		str	r3, [r2, #24]
 1345 0050 304B     		ldr	r3, .L65
 1346 0052 9B69     		ldr	r3, [r3, #24]
 1347 0054 03F00803 		and	r3, r3, #8
 1348 0058 7B60     		str	r3, [r7, #4]
 1349 005a 7B68     		ldr	r3, [r7, #4]
 1350              	.LBE6:
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 580:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1351              		.loc 1 580 3
 1352 005c 0022     		movs	r2, #0
 1353 005e 4FF40051 		mov	r1, #8192
 1354 0062 2D48     		ldr	r0, .L65+4
 1355 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 583:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET);
 1356              		.loc 1 583 3
 1357 0068 0022     		movs	r2, #0
 1358 006a 0221     		movs	r1, #2
 1359 006c 2B48     		ldr	r0, .L65+8
 1360 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 35


 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 586:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_12|GPIO_PIN_3
 1361              		.loc 1 586 3
 1362 0072 0022     		movs	r2, #0
 1363 0074 41F23B31 		movw	r1, #4923
 1364 0078 2948     		ldr	r0, .L65+12
 1365 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 587:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 588:Core/Src/main.c **** 
 589:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 590:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 1366              		.loc 1 590 23
 1367 007e 4FF40053 		mov	r3, #8192
 1368 0082 3B61     		str	r3, [r7, #16]
 591:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1369              		.loc 1 591 24
 1370 0084 0123     		movs	r3, #1
 1371 0086 7B61     		str	r3, [r7, #20]
 592:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1372              		.loc 1 592 24
 1373 0088 0023     		movs	r3, #0
 1374 008a BB61     		str	r3, [r7, #24]
 593:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1375              		.loc 1 593 25
 1376 008c 0223     		movs	r3, #2
 1377 008e FB61     		str	r3, [r7, #28]
 594:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1378              		.loc 1 594 3
 1379 0090 07F11003 		add	r3, r7, #16
 1380 0094 1946     		mov	r1, r3
 1381 0096 2048     		ldr	r0, .L65+4
 1382 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 595:Core/Src/main.c **** 
 596:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 597:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 1383              		.loc 1 597 23
 1384 009c 0223     		movs	r3, #2
 1385 009e 3B61     		str	r3, [r7, #16]
 598:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1386              		.loc 1 598 24
 1387 00a0 0123     		movs	r3, #1
 1388 00a2 7B61     		str	r3, [r7, #20]
 599:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1389              		.loc 1 599 24
 1390 00a4 0023     		movs	r3, #0
 1391 00a6 BB61     		str	r3, [r7, #24]
 600:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1392              		.loc 1 600 25
 1393 00a8 0223     		movs	r3, #2
 1394 00aa FB61     		str	r3, [r7, #28]
 601:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1395              		.loc 1 601 3
 1396 00ac 07F11003 		add	r3, r7, #16
 1397 00b0 1946     		mov	r1, r3
 1398 00b2 1A48     		ldr	r0, .L65+8
 1399 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 36


 602:Core/Src/main.c **** 
 603:Core/Src/main.c ****   /*Configure GPIO pins : PA4 PA9 PA10 PA11
 604:Core/Src/main.c ****                            PA12 PA15 */
 605:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 1400              		.loc 1 605 23
 1401 00b8 49F61063 		movw	r3, #40464
 1402 00bc 3B61     		str	r3, [r7, #16]
 606:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_15;
 607:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1403              		.loc 1 607 24
 1404 00be 0023     		movs	r3, #0
 1405 00c0 7B61     		str	r3, [r7, #20]
 608:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1406              		.loc 1 608 24
 1407 00c2 0023     		movs	r3, #0
 1408 00c4 BB61     		str	r3, [r7, #24]
 609:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1409              		.loc 1 609 3
 1410 00c6 07F11003 		add	r3, r7, #16
 1411 00ca 1946     		mov	r1, r3
 1412 00cc 1348     		ldr	r0, .L65+8
 1413 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB12 PB3
 612:Core/Src/main.c ****                            PB4 PB5 PB8 PB9 */
 613:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_12|GPIO_PIN_3
 1414              		.loc 1 613 23
 1415 00d2 41F23B33 		movw	r3, #4923
 1416 00d6 3B61     		str	r3, [r7, #16]
 614:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9;
 615:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1417              		.loc 1 615 24
 1418 00d8 0123     		movs	r3, #1
 1419 00da 7B61     		str	r3, [r7, #20]
 616:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1420              		.loc 1 616 24
 1421 00dc 0023     		movs	r3, #0
 1422 00de BB61     		str	r3, [r7, #24]
 617:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1423              		.loc 1 617 25
 1424 00e0 0223     		movs	r3, #2
 1425 00e2 FB61     		str	r3, [r7, #28]
 618:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1426              		.loc 1 618 3
 1427 00e4 07F11003 		add	r3, r7, #16
 1428 00e8 1946     		mov	r1, r3
 1429 00ea 0D48     		ldr	r0, .L65+12
 1430 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /*Configure GPIO pin : PB14 */
 621:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 1431              		.loc 1 621 23
 1432 00f0 4FF48043 		mov	r3, #16384
 1433 00f4 3B61     		str	r3, [r7, #16]
 622:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1434              		.loc 1 622 24
 1435 00f6 0023     		movs	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 37


 1436 00f8 7B61     		str	r3, [r7, #20]
 623:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1437              		.loc 1 623 24
 1438 00fa 0023     		movs	r3, #0
 1439 00fc BB61     		str	r3, [r7, #24]
 624:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1440              		.loc 1 624 3
 1441 00fe 07F11003 		add	r3, r7, #16
 1442 0102 1946     		mov	r1, r3
 1443 0104 0648     		ldr	r0, .L65+12
 1444 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 625:Core/Src/main.c **** 
 626:Core/Src/main.c **** }
 1445              		.loc 1 626 1
 1446 010a 00BF     		nop
 1447 010c 2037     		adds	r7, r7, #32
 1448              	.LCFI41:
 1449              		.cfi_def_cfa_offset 8
 1450 010e BD46     		mov	sp, r7
 1451              	.LCFI42:
 1452              		.cfi_def_cfa_register 13
 1453              		@ sp needed
 1454 0110 80BD     		pop	{r7, pc}
 1455              	.L66:
 1456 0112 00BF     		.align	2
 1457              	.L65:
 1458 0114 00100240 		.word	1073876992
 1459 0118 00100140 		.word	1073811456
 1460 011c 00080140 		.word	1073809408
 1461 0120 000C0140 		.word	1073810432
 1462              		.cfi_endproc
 1463              	.LFE75:
 1465              		.section	.text.Error_Handler,"ax",%progbits
 1466              		.align	1
 1467              		.global	Error_Handler
 1468              		.syntax unified
 1469              		.thumb
 1470              		.thumb_func
 1472              	Error_Handler:
 1473              	.LFB76:
 627:Core/Src/main.c **** 
 628:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 629:Core/Src/main.c **** 
 630:Core/Src/main.c **** /* USER CODE END 4 */
 631:Core/Src/main.c **** 
 632:Core/Src/main.c **** /**
 633:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 634:Core/Src/main.c ****   * @retval None
 635:Core/Src/main.c ****   */
 636:Core/Src/main.c **** void Error_Handler(void)
 637:Core/Src/main.c **** {
 1474              		.loc 1 637 1
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 1, uses_anonymous_args = 0
 1478              		@ link register save eliminated.
 1479 0000 80B4     		push	{r7}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 38


 1480              	.LCFI43:
 1481              		.cfi_def_cfa_offset 4
 1482              		.cfi_offset 7, -4
 1483 0002 00AF     		add	r7, sp, #0
 1484              	.LCFI44:
 1485              		.cfi_def_cfa_register 7
 1486              	.LBB7:
 1487              	.LBB8:
 1488              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 39


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 40


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1489              		.loc 2 142 3
 1490              		.syntax unified
 1491              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1492 0004 72B6     		cpsid i
 1493              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1494              		.loc 2 143 1
 1495              		.thumb
 1496              		.syntax unified
 1497 0006 00BF     		nop
 1498              	.L68:
 1499              	.LBE8:
 1500              	.LBE7:
 638:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 639:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 640:Core/Src/main.c ****   __disable_irq();
 641:Core/Src/main.c ****   while (1)
 1501              		.loc 1 641 9 discriminator 1
 1502 0008 FEE7     		b	.L68
 1503              		.cfi_endproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 41


 1504              	.LFE76:
 1506              		.text
 1507              	.Letext0:
 1508              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1509              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1510              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1511              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1512              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1513              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1514              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1515              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1516              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1517              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1518              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1519              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1520              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1521              		.file 16 "Core/Inc/main.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:22     .bss.hadc1:00000000 hadc1
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:19     .bss.hadc1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:29     .bss.hi2c1:00000000 hi2c1
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:26     .bss.hi2c1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:36     .bss.hi2c2:00000000 hi2c2
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:33     .bss.hi2c2:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:43     .bss.htim1:00000000 htim1
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:40     .bss.htim1:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:50     .bss.htim2:00000000 htim2
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:47     .bss.htim2:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:57     .bss.htim3:00000000 htim3
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:54     .bss.htim3:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:64     .bss.htim4:00000000 htim4
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:61     .bss.htim4:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:71     .bss.huart2:00000000 huart2
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:68     .bss.huart2:00000000 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:74     .text.main:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:80     .text.main:00000000 main
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:170    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1288   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:300    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:406    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:562    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:795    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:914    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1095   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:484    .text.MX_I2C2_Init:00000000 MX_I2C2_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1215   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:156    .text.main:00000078 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:164    .text.SystemClock_Config:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1472   .text.Error_Handler:00000000 Error_Handler
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:295    .text.MX_ADC1_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:395    .text.MX_ADC1_Init:00000074 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:401    .text.MX_I2C1_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:472    .text.MX_I2C1_Init:00000050 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:479    .text.MX_I2C2_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:550    .text.MX_I2C2_Init:00000050 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:557    .text.MX_TIM1_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:784    .text.MX_TIM1_Init:00000154 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:790    .text.MX_TIM2_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:904    .text.MX_TIM2_Init:00000098 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:909    .text.MX_TIM3_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1084   .text.MX_TIM3_Init:000000fc $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1090   .text.MX_TIM4_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1204   .text.MX_TIM4_Init:00000090 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1210   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1277   .text.MX_USART2_UART_Init:0000004c $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1283   .text.MX_GPIO_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1458   .text.MX_GPIO_Init:00000114 $d
C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s:1466   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
EEPROM_Read
HAL_TIM_Base_Start_IT
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccwcDu7j.s 			page 43


Os_Init_Task
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
Os_Handler
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
