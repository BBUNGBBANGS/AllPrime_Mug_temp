ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_UART_Init:
  25              	.LFB65:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ##### Callback registration #####
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ==================================
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and a pointer to the user callback function.
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     weak (surcharged) function.
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and the Callback ID.
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     respectively @ref HAL_UART_RegisterRxEventCallback() , @ref HAL_UART_UnRegisterRxEventCallback(
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     not defined, the callback registration feature is not available
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver :
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     where number of data to be received is unknown).
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         as triggers for updating reception status to caller :
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                for 1 frame time, after last received byte.
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two mode of transfer:
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            are returned by function after finishing transfer.
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            These API's return the HAL status.
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The end of the data processing will be indicated through the
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode API:
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * All rights reserved.</center></h2>
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 6


 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 7


 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Over Sampling Method
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     procedures (details for the procedures are available in reference manuals
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  27              		.loc 1 353 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
  43              		.loc 1 355 6
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 8


  46 000c 01D1     		bne	.L2
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
  47              		.loc 1 357 12
  48 000e 0123     		movs	r3, #1
  49 0010 4AE0     		b	.L3
  50              	.L2:
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2 and USART3 */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  51              		.loc 1 376 12
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 93F83D30 		ldrb	r3, [r3, #61]
  54 0018 DBB2     		uxtb	r3, r3
  55              		.loc 1 376 6
  56 001a 002B     		cmp	r3, #0
  57 001c 11D1     		bne	.L4
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  58              		.loc 1 379 17
  59 001e 7B68     		ldr	r3, [r7, #4]
  60 0020 0022     		movs	r2, #0
  61 0022 83F83C20 		strb	r2, [r3, #60]
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
  62              		.loc 1 382 5
  63 0026 7868     		ldr	r0, [r7, #4]
  64 0028 FFF7FEFF 		bl	UART_InitCallbacksToDefault
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
  65              		.loc 1 384 14
  66 002c 7B68     		ldr	r3, [r7, #4]
  67 002e DB6E     		ldr	r3, [r3, #108]
  68              		.loc 1 384 8
  69 0030 002B     		cmp	r3, #0
  70 0032 02D1     		bne	.L5
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
  71              		.loc 1 386 30
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 9


  72 0034 7B68     		ldr	r3, [r7, #4]
  73 0036 1E4A     		ldr	r2, .L6
  74 0038 DA66     		str	r2, [r3, #108]
  75              	.L5:
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
  76              		.loc 1 390 10
  77 003a 7B68     		ldr	r3, [r7, #4]
  78 003c DB6E     		ldr	r3, [r3, #108]
  79              		.loc 1 390 5
  80 003e 7868     		ldr	r0, [r7, #4]
  81 0040 9847     		blx	r3
  82              	.LVL0:
  83              	.L4:
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  84              		.loc 1 397 17
  85 0042 7B68     		ldr	r3, [r7, #4]
  86 0044 2422     		movs	r2, #36
  87 0046 83F83D20 		strb	r2, [r3, #61]
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  88              		.loc 1 400 3
  89 004a 7B68     		ldr	r3, [r7, #4]
  90 004c 1B68     		ldr	r3, [r3]
  91 004e DA68     		ldr	r2, [r3, #12]
  92 0050 7B68     		ldr	r3, [r7, #4]
  93 0052 1B68     		ldr	r3, [r3]
  94 0054 22F40052 		bic	r2, r2, #8192
  95 0058 DA60     		str	r2, [r3, #12]
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
  96              		.loc 1 403 3
  97 005a 7868     		ldr	r0, [r7, #4]
  98 005c FFF7FEFF 		bl	UART_SetConfig
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  99              		.loc 1 408 3
 100 0060 7B68     		ldr	r3, [r7, #4]
 101 0062 1B68     		ldr	r3, [r3]
 102 0064 1A69     		ldr	r2, [r3, #16]
 103 0066 7B68     		ldr	r3, [r7, #4]
 104 0068 1B68     		ldr	r3, [r3]
 105 006a 22F49042 		bic	r2, r2, #18432
 106 006e 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 10


 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 107              		.loc 1 409 3
 108 0070 7B68     		ldr	r3, [r7, #4]
 109 0072 1B68     		ldr	r3, [r3]
 110 0074 5A69     		ldr	r2, [r3, #20]
 111 0076 7B68     		ldr	r3, [r7, #4]
 112 0078 1B68     		ldr	r3, [r3]
 113 007a 22F02A02 		bic	r2, r2, #42
 114 007e 5A61     		str	r2, [r3, #20]
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 115              		.loc 1 412 3
 116 0080 7B68     		ldr	r3, [r7, #4]
 117 0082 1B68     		ldr	r3, [r3]
 118 0084 DA68     		ldr	r2, [r3, #12]
 119 0086 7B68     		ldr	r3, [r7, #4]
 120 0088 1B68     		ldr	r3, [r3]
 121 008a 42F40052 		orr	r2, r2, #8192
 122 008e DA60     		str	r2, [r3, #12]
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 123              		.loc 1 415 20
 124 0090 7B68     		ldr	r3, [r7, #4]
 125 0092 0022     		movs	r2, #0
 126 0094 1A64     		str	r2, [r3, #64]
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 127              		.loc 1 416 17
 128 0096 7B68     		ldr	r3, [r7, #4]
 129 0098 2022     		movs	r2, #32
 130 009a 83F83D20 		strb	r2, [r3, #61]
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 131              		.loc 1 417 18
 132 009e 7B68     		ldr	r3, [r7, #4]
 133 00a0 2022     		movs	r2, #32
 134 00a2 83F83E20 		strb	r2, [r3, #62]
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 135              		.loc 1 419 10
 136 00a6 0023     		movs	r3, #0
 137              	.L3:
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 138              		.loc 1 420 1
 139 00a8 1846     		mov	r0, r3
 140 00aa 0837     		adds	r7, r7, #8
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 8
 143 00ac BD46     		mov	sp, r7
 144              	.LCFI4:
 145              		.cfi_def_cfa_register 13
 146              		@ sp needed
 147 00ae 80BD     		pop	{r7, pc}
 148              	.L7:
 149              		.align	2
 150              	.L6:
 151 00b0 00000000 		.word	HAL_UART_MspInit
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 11


 152              		.cfi_endproc
 153              	.LFE65:
 155              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 156              		.align	1
 157              		.global	HAL_HalfDuplex_Init
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	HAL_HalfDuplex_Init:
 163              	.LFB66:
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 164              		.loc 1 430 1
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 8
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              	.LCFI5:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 82B0     		sub	sp, sp, #8
 174              	.LCFI6:
 175              		.cfi_def_cfa_offset 16
 176 0004 00AF     		add	r7, sp, #0
 177              	.LCFI7:
 178              		.cfi_def_cfa_register 7
 179 0006 7860     		str	r0, [r7, #4]
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 180              		.loc 1 432 6
 181 0008 7B68     		ldr	r3, [r7, #4]
 182 000a 002B     		cmp	r3, #0
 183 000c 01D1     		bne	.L9
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 184              		.loc 1 434 12
 185 000e 0123     		movs	r3, #1
 186 0010 52E0     		b	.L10
 187              	.L9:
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 12


 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 188              		.loc 1 444 12
 189 0012 7B68     		ldr	r3, [r7, #4]
 190 0014 93F83D30 		ldrb	r3, [r3, #61]
 191 0018 DBB2     		uxtb	r3, r3
 192              		.loc 1 444 6
 193 001a 002B     		cmp	r3, #0
 194 001c 11D1     		bne	.L11
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 195              		.loc 1 447 17
 196 001e 7B68     		ldr	r3, [r7, #4]
 197 0020 0022     		movs	r2, #0
 198 0022 83F83C20 		strb	r2, [r3, #60]
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 199              		.loc 1 450 5
 200 0026 7868     		ldr	r0, [r7, #4]
 201 0028 FFF7FEFF 		bl	UART_InitCallbacksToDefault
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 202              		.loc 1 452 14
 203 002c 7B68     		ldr	r3, [r7, #4]
 204 002e DB6E     		ldr	r3, [r3, #108]
 205              		.loc 1 452 8
 206 0030 002B     		cmp	r3, #0
 207 0032 02D1     		bne	.L12
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 208              		.loc 1 454 30
 209 0034 7B68     		ldr	r3, [r7, #4]
 210 0036 224A     		ldr	r2, .L13
 211 0038 DA66     		str	r2, [r3, #108]
 212              	.L12:
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 213              		.loc 1 458 10
 214 003a 7B68     		ldr	r3, [r7, #4]
 215 003c DB6E     		ldr	r3, [r3, #108]
 216              		.loc 1 458 5
 217 003e 7868     		ldr	r0, [r7, #4]
 218 0040 9847     		blx	r3
 219              	.LVL1:
 220              	.L11:
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 221              		.loc 1 465 17
 222 0042 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 13


 223 0044 2422     		movs	r2, #36
 224 0046 83F83D20 		strb	r2, [r3, #61]
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 225              		.loc 1 468 3
 226 004a 7B68     		ldr	r3, [r7, #4]
 227 004c 1B68     		ldr	r3, [r3]
 228 004e DA68     		ldr	r2, [r3, #12]
 229 0050 7B68     		ldr	r3, [r7, #4]
 230 0052 1B68     		ldr	r3, [r3]
 231 0054 22F40052 		bic	r2, r2, #8192
 232 0058 DA60     		str	r2, [r3, #12]
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 233              		.loc 1 471 3
 234 005a 7868     		ldr	r0, [r7, #4]
 235 005c FFF7FEFF 		bl	UART_SetConfig
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 236              		.loc 1 476 3
 237 0060 7B68     		ldr	r3, [r7, #4]
 238 0062 1B68     		ldr	r3, [r3]
 239 0064 1A69     		ldr	r2, [r3, #16]
 240 0066 7B68     		ldr	r3, [r7, #4]
 241 0068 1B68     		ldr	r3, [r3]
 242 006a 22F49042 		bic	r2, r2, #18432
 243 006e 1A61     		str	r2, [r3, #16]
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 244              		.loc 1 477 3
 245 0070 7B68     		ldr	r3, [r7, #4]
 246 0072 1B68     		ldr	r3, [r3]
 247 0074 5A69     		ldr	r2, [r3, #20]
 248 0076 7B68     		ldr	r3, [r7, #4]
 249 0078 1B68     		ldr	r3, [r3]
 250 007a 22F02202 		bic	r2, r2, #34
 251 007e 5A61     		str	r2, [r3, #20]
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 252              		.loc 1 480 3
 253 0080 7B68     		ldr	r3, [r7, #4]
 254 0082 1B68     		ldr	r3, [r3]
 255 0084 5A69     		ldr	r2, [r3, #20]
 256 0086 7B68     		ldr	r3, [r7, #4]
 257 0088 1B68     		ldr	r3, [r3]
 258 008a 42F00802 		orr	r2, r2, #8
 259 008e 5A61     		str	r2, [r3, #20]
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 260              		.loc 1 483 3
 261 0090 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 14


 262 0092 1B68     		ldr	r3, [r3]
 263 0094 DA68     		ldr	r2, [r3, #12]
 264 0096 7B68     		ldr	r3, [r7, #4]
 265 0098 1B68     		ldr	r3, [r3]
 266 009a 42F40052 		orr	r2, r2, #8192
 267 009e DA60     		str	r2, [r3, #12]
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 268              		.loc 1 486 20
 269 00a0 7B68     		ldr	r3, [r7, #4]
 270 00a2 0022     		movs	r2, #0
 271 00a4 1A64     		str	r2, [r3, #64]
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 272              		.loc 1 487 17
 273 00a6 7B68     		ldr	r3, [r7, #4]
 274 00a8 2022     		movs	r2, #32
 275 00aa 83F83D20 		strb	r2, [r3, #61]
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 276              		.loc 1 488 18
 277 00ae 7B68     		ldr	r3, [r7, #4]
 278 00b0 2022     		movs	r2, #32
 279 00b2 83F83E20 		strb	r2, [r3, #62]
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 280              		.loc 1 490 10
 281 00b6 0023     		movs	r3, #0
 282              	.L10:
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 283              		.loc 1 491 1
 284 00b8 1846     		mov	r0, r3
 285 00ba 0837     		adds	r7, r7, #8
 286              	.LCFI8:
 287              		.cfi_def_cfa_offset 8
 288 00bc BD46     		mov	sp, r7
 289              	.LCFI9:
 290              		.cfi_def_cfa_register 13
 291              		@ sp needed
 292 00be 80BD     		pop	{r7, pc}
 293              	.L14:
 294              		.align	2
 295              	.L13:
 296 00c0 00000000 		.word	HAL_UART_MspInit
 297              		.cfi_endproc
 298              	.LFE66:
 300              		.section	.text.HAL_LIN_Init,"ax",%progbits
 301              		.align	1
 302              		.global	HAL_LIN_Init
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	HAL_LIN_Init:
 308              	.LFB67:
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 15


 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 309              		.loc 1 505 1
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 80B5     		push	{r7, lr}
 314              	.LCFI10:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 82B0     		sub	sp, sp, #8
 319              	.LCFI11:
 320              		.cfi_def_cfa_offset 16
 321 0004 00AF     		add	r7, sp, #0
 322              	.LCFI12:
 323              		.cfi_def_cfa_register 7
 324 0006 7860     		str	r0, [r7, #4]
 325 0008 3960     		str	r1, [r7]
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 326              		.loc 1 507 6
 327 000a 7B68     		ldr	r3, [r7, #4]
 328 000c 002B     		cmp	r3, #0
 329 000e 01D1     		bne	.L16
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 330              		.loc 1 509 12
 331 0010 0123     		movs	r3, #1
 332 0012 62E0     		b	.L17
 333              	.L16:
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 334              		.loc 1 522 12
 335 0014 7B68     		ldr	r3, [r7, #4]
 336 0016 93F83D30 		ldrb	r3, [r3, #61]
 337 001a DBB2     		uxtb	r3, r3
 338              		.loc 1 522 6
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 16


 339 001c 002B     		cmp	r3, #0
 340 001e 11D1     		bne	.L18
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 341              		.loc 1 525 17
 342 0020 7B68     		ldr	r3, [r7, #4]
 343 0022 0022     		movs	r2, #0
 344 0024 83F83C20 		strb	r2, [r3, #60]
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 345              		.loc 1 528 5
 346 0028 7868     		ldr	r0, [r7, #4]
 347 002a FFF7FEFF 		bl	UART_InitCallbacksToDefault
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 348              		.loc 1 530 14
 349 002e 7B68     		ldr	r3, [r7, #4]
 350 0030 DB6E     		ldr	r3, [r3, #108]
 351              		.loc 1 530 8
 352 0032 002B     		cmp	r3, #0
 353 0034 02D1     		bne	.L19
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 354              		.loc 1 532 30
 355 0036 7B68     		ldr	r3, [r7, #4]
 356 0038 2A4A     		ldr	r2, .L20
 357 003a DA66     		str	r2, [r3, #108]
 358              	.L19:
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 359              		.loc 1 536 10
 360 003c 7B68     		ldr	r3, [r7, #4]
 361 003e DB6E     		ldr	r3, [r3, #108]
 362              		.loc 1 536 5
 363 0040 7868     		ldr	r0, [r7, #4]
 364 0042 9847     		blx	r3
 365              	.LVL2:
 366              	.L18:
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 367              		.loc 1 543 17
 368 0044 7B68     		ldr	r3, [r7, #4]
 369 0046 2422     		movs	r2, #36
 370 0048 83F83D20 		strb	r2, [r3, #61]
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 371              		.loc 1 546 3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 17


 372 004c 7B68     		ldr	r3, [r7, #4]
 373 004e 1B68     		ldr	r3, [r3]
 374 0050 DA68     		ldr	r2, [r3, #12]
 375 0052 7B68     		ldr	r3, [r7, #4]
 376 0054 1B68     		ldr	r3, [r3]
 377 0056 22F40052 		bic	r2, r2, #8192
 378 005a DA60     		str	r2, [r3, #12]
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 379              		.loc 1 549 3
 380 005c 7868     		ldr	r0, [r7, #4]
 381 005e FFF7FEFF 		bl	UART_SetConfig
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 382              		.loc 1 554 3
 383 0062 7B68     		ldr	r3, [r7, #4]
 384 0064 1B68     		ldr	r3, [r3]
 385 0066 1A69     		ldr	r2, [r3, #16]
 386 0068 7B68     		ldr	r3, [r7, #4]
 387 006a 1B68     		ldr	r3, [r3]
 388 006c 22F40062 		bic	r2, r2, #2048
 389 0070 1A61     		str	r2, [r3, #16]
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 390              		.loc 1 555 3
 391 0072 7B68     		ldr	r3, [r7, #4]
 392 0074 1B68     		ldr	r3, [r3]
 393 0076 5A69     		ldr	r2, [r3, #20]
 394 0078 7B68     		ldr	r3, [r7, #4]
 395 007a 1B68     		ldr	r3, [r3]
 396 007c 22F02A02 		bic	r2, r2, #42
 397 0080 5A61     		str	r2, [r3, #20]
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 398              		.loc 1 558 3
 399 0082 7B68     		ldr	r3, [r7, #4]
 400 0084 1B68     		ldr	r3, [r3]
 401 0086 1A69     		ldr	r2, [r3, #16]
 402 0088 7B68     		ldr	r3, [r7, #4]
 403 008a 1B68     		ldr	r3, [r3]
 404 008c 42F48042 		orr	r2, r2, #16384
 405 0090 1A61     		str	r2, [r3, #16]
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 406              		.loc 1 561 3
 407 0092 7B68     		ldr	r3, [r7, #4]
 408 0094 1B68     		ldr	r3, [r3]
 409 0096 1A69     		ldr	r2, [r3, #16]
 410 0098 7B68     		ldr	r3, [r7, #4]
 411 009a 1B68     		ldr	r3, [r3]
 412 009c 22F02002 		bic	r2, r2, #32
 413 00a0 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 18


 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 414              		.loc 1 562 3
 415 00a2 7B68     		ldr	r3, [r7, #4]
 416 00a4 1B68     		ldr	r3, [r3]
 417 00a6 1969     		ldr	r1, [r3, #16]
 418 00a8 7B68     		ldr	r3, [r7, #4]
 419 00aa 1B68     		ldr	r3, [r3]
 420 00ac 3A68     		ldr	r2, [r7]
 421 00ae 0A43     		orrs	r2, r2, r1
 422 00b0 1A61     		str	r2, [r3, #16]
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 423              		.loc 1 565 3
 424 00b2 7B68     		ldr	r3, [r7, #4]
 425 00b4 1B68     		ldr	r3, [r3]
 426 00b6 DA68     		ldr	r2, [r3, #12]
 427 00b8 7B68     		ldr	r3, [r7, #4]
 428 00ba 1B68     		ldr	r3, [r3]
 429 00bc 42F40052 		orr	r2, r2, #8192
 430 00c0 DA60     		str	r2, [r3, #12]
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 431              		.loc 1 568 20
 432 00c2 7B68     		ldr	r3, [r7, #4]
 433 00c4 0022     		movs	r2, #0
 434 00c6 1A64     		str	r2, [r3, #64]
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 435              		.loc 1 569 17
 436 00c8 7B68     		ldr	r3, [r7, #4]
 437 00ca 2022     		movs	r2, #32
 438 00cc 83F83D20 		strb	r2, [r3, #61]
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 439              		.loc 1 570 18
 440 00d0 7B68     		ldr	r3, [r7, #4]
 441 00d2 2022     		movs	r2, #32
 442 00d4 83F83E20 		strb	r2, [r3, #62]
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 443              		.loc 1 572 10
 444 00d8 0023     		movs	r3, #0
 445              	.L17:
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 446              		.loc 1 573 1
 447 00da 1846     		mov	r0, r3
 448 00dc 0837     		adds	r7, r7, #8
 449              	.LCFI13:
 450              		.cfi_def_cfa_offset 8
 451 00de BD46     		mov	sp, r7
 452              	.LCFI14:
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 00e0 80BD     		pop	{r7, pc}
 456              	.L21:
 457 00e2 00BF     		.align	2
 458              	.L20:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 19


 459 00e4 00000000 		.word	HAL_UART_MspInit
 460              		.cfi_endproc
 461              	.LFE67:
 463              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 464              		.align	1
 465              		.global	HAL_MultiProcessor_Init
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 470              	HAL_MultiProcessor_Init:
 471              	.LFB68:
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address USART address
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 472              		.loc 1 588 1
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 16
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476 0000 80B5     		push	{r7, lr}
 477              	.LCFI15:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 84B0     		sub	sp, sp, #16
 482              	.LCFI16:
 483              		.cfi_def_cfa_offset 24
 484 0004 00AF     		add	r7, sp, #0
 485              	.LCFI17:
 486              		.cfi_def_cfa_register 7
 487 0006 F860     		str	r0, [r7, #12]
 488 0008 0B46     		mov	r3, r1
 489 000a 7A60     		str	r2, [r7, #4]
 490 000c FB72     		strb	r3, [r7, #11]
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 491              		.loc 1 590 6
 492 000e FB68     		ldr	r3, [r7, #12]
 493 0010 002B     		cmp	r3, #0
 494 0012 01D1     		bne	.L23
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 495              		.loc 1 592 12
 496 0014 0123     		movs	r3, #1
 497 0016 6AE0     		b	.L24
 498              	.L23:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 20


 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 499              		.loc 1 606 12
 500 0018 FB68     		ldr	r3, [r7, #12]
 501 001a 93F83D30 		ldrb	r3, [r3, #61]
 502 001e DBB2     		uxtb	r3, r3
 503              		.loc 1 606 6
 504 0020 002B     		cmp	r3, #0
 505 0022 11D1     		bne	.L25
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 506              		.loc 1 609 17
 507 0024 FB68     		ldr	r3, [r7, #12]
 508 0026 0022     		movs	r2, #0
 509 0028 83F83C20 		strb	r2, [r3, #60]
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 510              		.loc 1 612 5
 511 002c F868     		ldr	r0, [r7, #12]
 512 002e FFF7FEFF 		bl	UART_InitCallbacksToDefault
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 513              		.loc 1 614 14
 514 0032 FB68     		ldr	r3, [r7, #12]
 515 0034 DB6E     		ldr	r3, [r3, #108]
 516              		.loc 1 614 8
 517 0036 002B     		cmp	r3, #0
 518 0038 02D1     		bne	.L26
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 519              		.loc 1 616 30
 520 003a FB68     		ldr	r3, [r7, #12]
 521 003c 2E4A     		ldr	r2, .L27
 522 003e DA66     		str	r2, [r3, #108]
 523              	.L26:
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 524              		.loc 1 620 10
 525 0040 FB68     		ldr	r3, [r7, #12]
 526 0042 DB6E     		ldr	r3, [r3, #108]
 527              		.loc 1 620 5
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 21


 528 0044 F868     		ldr	r0, [r7, #12]
 529 0046 9847     		blx	r3
 530              	.LVL3:
 531              	.L25:
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 532              		.loc 1 627 17
 533 0048 FB68     		ldr	r3, [r7, #12]
 534 004a 2422     		movs	r2, #36
 535 004c 83F83D20 		strb	r2, [r3, #61]
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 536              		.loc 1 630 3
 537 0050 FB68     		ldr	r3, [r7, #12]
 538 0052 1B68     		ldr	r3, [r3]
 539 0054 DA68     		ldr	r2, [r3, #12]
 540 0056 FB68     		ldr	r3, [r7, #12]
 541 0058 1B68     		ldr	r3, [r3]
 542 005a 22F40052 		bic	r2, r2, #8192
 543 005e DA60     		str	r2, [r3, #12]
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 544              		.loc 1 633 3
 545 0060 F868     		ldr	r0, [r7, #12]
 546 0062 FFF7FEFF 		bl	UART_SetConfig
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 547              		.loc 1 638 3
 548 0066 FB68     		ldr	r3, [r7, #12]
 549 0068 1B68     		ldr	r3, [r3]
 550 006a 1A69     		ldr	r2, [r3, #16]
 551 006c FB68     		ldr	r3, [r7, #12]
 552 006e 1B68     		ldr	r3, [r3]
 553 0070 22F49042 		bic	r2, r2, #18432
 554 0074 1A61     		str	r2, [r3, #16]
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 555              		.loc 1 639 3
 556 0076 FB68     		ldr	r3, [r7, #12]
 557 0078 1B68     		ldr	r3, [r3]
 558 007a 5A69     		ldr	r2, [r3, #20]
 559 007c FB68     		ldr	r3, [r7, #12]
 560 007e 1B68     		ldr	r3, [r3]
 561 0080 22F02A02 		bic	r2, r2, #42
 562 0084 5A61     		str	r2, [r3, #20]
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 22


 563              		.loc 1 642 3
 564 0086 FB68     		ldr	r3, [r7, #12]
 565 0088 1B68     		ldr	r3, [r3]
 566 008a 1A69     		ldr	r2, [r3, #16]
 567 008c FB68     		ldr	r3, [r7, #12]
 568 008e 1B68     		ldr	r3, [r3]
 569 0090 22F00F02 		bic	r2, r2, #15
 570 0094 1A61     		str	r2, [r3, #16]
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 571              		.loc 1 643 3
 572 0096 FB68     		ldr	r3, [r7, #12]
 573 0098 1B68     		ldr	r3, [r3]
 574 009a 1969     		ldr	r1, [r3, #16]
 575 009c FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 576 009e FB68     		ldr	r3, [r7, #12]
 577 00a0 1B68     		ldr	r3, [r3]
 578 00a2 0A43     		orrs	r2, r2, r1
 579 00a4 1A61     		str	r2, [r3, #16]
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 580              		.loc 1 646 3
 581 00a6 FB68     		ldr	r3, [r7, #12]
 582 00a8 1B68     		ldr	r3, [r3]
 583 00aa DA68     		ldr	r2, [r3, #12]
 584 00ac FB68     		ldr	r3, [r7, #12]
 585 00ae 1B68     		ldr	r3, [r3]
 586 00b0 22F40062 		bic	r2, r2, #2048
 587 00b4 DA60     		str	r2, [r3, #12]
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 588              		.loc 1 647 3
 589 00b6 FB68     		ldr	r3, [r7, #12]
 590 00b8 1B68     		ldr	r3, [r3]
 591 00ba D968     		ldr	r1, [r3, #12]
 592 00bc FB68     		ldr	r3, [r7, #12]
 593 00be 1B68     		ldr	r3, [r3]
 594 00c0 7A68     		ldr	r2, [r7, #4]
 595 00c2 0A43     		orrs	r2, r2, r1
 596 00c4 DA60     		str	r2, [r3, #12]
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 597              		.loc 1 650 3
 598 00c6 FB68     		ldr	r3, [r7, #12]
 599 00c8 1B68     		ldr	r3, [r3]
 600 00ca DA68     		ldr	r2, [r3, #12]
 601 00cc FB68     		ldr	r3, [r7, #12]
 602 00ce 1B68     		ldr	r3, [r3]
 603 00d0 42F40052 		orr	r2, r2, #8192
 604 00d4 DA60     		str	r2, [r3, #12]
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 605              		.loc 1 653 20
 606 00d6 FB68     		ldr	r3, [r7, #12]
 607 00d8 0022     		movs	r2, #0
 608 00da 1A64     		str	r2, [r3, #64]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 23


 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 609              		.loc 1 654 17
 610 00dc FB68     		ldr	r3, [r7, #12]
 611 00de 2022     		movs	r2, #32
 612 00e0 83F83D20 		strb	r2, [r3, #61]
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 613              		.loc 1 655 18
 614 00e4 FB68     		ldr	r3, [r7, #12]
 615 00e6 2022     		movs	r2, #32
 616 00e8 83F83E20 		strb	r2, [r3, #62]
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 617              		.loc 1 657 10
 618 00ec 0023     		movs	r3, #0
 619              	.L24:
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 620              		.loc 1 658 1
 621 00ee 1846     		mov	r0, r3
 622 00f0 1037     		adds	r7, r7, #16
 623              	.LCFI18:
 624              		.cfi_def_cfa_offset 8
 625 00f2 BD46     		mov	sp, r7
 626              	.LCFI19:
 627              		.cfi_def_cfa_register 13
 628              		@ sp needed
 629 00f4 80BD     		pop	{r7, pc}
 630              	.L28:
 631 00f6 00BF     		.align	2
 632              	.L27:
 633 00f8 00000000 		.word	HAL_UART_MspInit
 634              		.cfi_endproc
 635              	.LFE68:
 637              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 638              		.align	1
 639              		.global	HAL_UART_DeInit
 640              		.syntax unified
 641              		.thumb
 642              		.thumb_func
 644              	HAL_UART_DeInit:
 645              	.LFB69:
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 646              		.loc 1 667 1
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 8
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650 0000 80B5     		push	{r7, lr}
 651              	.LCFI20:
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 7, -8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 24


 654              		.cfi_offset 14, -4
 655 0002 82B0     		sub	sp, sp, #8
 656              	.LCFI21:
 657              		.cfi_def_cfa_offset 16
 658 0004 00AF     		add	r7, sp, #0
 659              	.LCFI22:
 660              		.cfi_def_cfa_register 7
 661 0006 7860     		str	r0, [r7, #4]
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 662              		.loc 1 669 6
 663 0008 7B68     		ldr	r3, [r7, #4]
 664 000a 002B     		cmp	r3, #0
 665 000c 01D1     		bne	.L30
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 666              		.loc 1 671 12
 667 000e 0123     		movs	r3, #1
 668 0010 29E0     		b	.L31
 669              	.L30:
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 670              		.loc 1 677 17
 671 0012 7B68     		ldr	r3, [r7, #4]
 672 0014 2422     		movs	r2, #36
 673 0016 83F83D20 		strb	r2, [r3, #61]
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the Peripheral */
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 674              		.loc 1 680 3
 675 001a 7B68     		ldr	r3, [r7, #4]
 676 001c 1B68     		ldr	r3, [r3]
 677 001e DA68     		ldr	r2, [r3, #12]
 678 0020 7B68     		ldr	r3, [r7, #4]
 679 0022 1B68     		ldr	r3, [r3]
 680 0024 22F40052 		bic	r2, r2, #8192
 681 0028 DA60     		str	r2, [r3, #12]
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 682              		.loc 1 683 12
 683 002a 7B68     		ldr	r3, [r7, #4]
 684 002c 1B6F     		ldr	r3, [r3, #112]
 685              		.loc 1 683 6
 686 002e 002B     		cmp	r3, #0
 687 0030 02D1     		bne	.L32
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 688              		.loc 1 685 30
 689 0032 7B68     		ldr	r3, [r7, #4]
 690 0034 0E4A     		ldr	r2, .L33
 691 0036 1A67     		str	r2, [r3, #112]
 692              	.L32:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 25


 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 693              		.loc 1 688 8
 694 0038 7B68     		ldr	r3, [r7, #4]
 695 003a 1B6F     		ldr	r3, [r3, #112]
 696              		.loc 1 688 3
 697 003c 7868     		ldr	r0, [r7, #4]
 698 003e 9847     		blx	r3
 699              	.LVL4:
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 700              		.loc 1 694 20
 701 0040 7B68     		ldr	r3, [r7, #4]
 702 0042 0022     		movs	r2, #0
 703 0044 1A64     		str	r2, [r3, #64]
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 704              		.loc 1 695 17
 705 0046 7B68     		ldr	r3, [r7, #4]
 706 0048 0022     		movs	r2, #0
 707 004a 83F83D20 		strb	r2, [r3, #61]
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 708              		.loc 1 696 18
 709 004e 7B68     		ldr	r3, [r7, #4]
 710 0050 0022     		movs	r2, #0
 711 0052 83F83E20 		strb	r2, [r3, #62]
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 712              		.loc 1 697 24
 713 0056 7B68     		ldr	r3, [r7, #4]
 714 0058 0022     		movs	r2, #0
 715 005a 1A63     		str	r2, [r3, #48]
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 716              		.loc 1 700 3
 717 005c 7B68     		ldr	r3, [r7, #4]
 718 005e 0022     		movs	r2, #0
 719 0060 83F83C20 		strb	r2, [r3, #60]
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 720              		.loc 1 702 10
 721 0064 0023     		movs	r3, #0
 722              	.L31:
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 723              		.loc 1 703 1
 724 0066 1846     		mov	r0, r3
 725 0068 0837     		adds	r7, r7, #8
 726              	.LCFI23:
 727              		.cfi_def_cfa_offset 8
 728 006a BD46     		mov	sp, r7
 729              	.LCFI24:
 730              		.cfi_def_cfa_register 13
 731              		@ sp needed
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 26


 732 006c 80BD     		pop	{r7, pc}
 733              	.L34:
 734 006e 00BF     		.align	2
 735              	.L33:
 736 0070 00000000 		.word	HAL_UART_MspDeInit
 737              		.cfi_endproc
 738              	.LFE69:
 740              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 741              		.align	1
 742              		.weak	HAL_UART_MspInit
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 747              	HAL_UART_MspInit:
 748              	.LFB70:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 749              		.loc 1 712 1
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754 0000 80B4     		push	{r7}
 755              	.LCFI25:
 756              		.cfi_def_cfa_offset 4
 757              		.cfi_offset 7, -4
 758 0002 83B0     		sub	sp, sp, #12
 759              	.LCFI26:
 760              		.cfi_def_cfa_offset 16
 761 0004 00AF     		add	r7, sp, #0
 762              	.LCFI27:
 763              		.cfi_def_cfa_register 7
 764 0006 7860     		str	r0, [r7, #4]
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 765              		.loc 1 718 1
 766 0008 00BF     		nop
 767 000a 0C37     		adds	r7, r7, #12
 768              	.LCFI28:
 769              		.cfi_def_cfa_offset 4
 770 000c BD46     		mov	sp, r7
 771              	.LCFI29:
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 000e 80BC     		pop	{r7}
 775              	.LCFI30:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 27


 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0010 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE70:
 782              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 783              		.align	1
 784              		.weak	HAL_UART_MspDeInit
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	HAL_UART_MspDeInit:
 790              	.LFB71:
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 791              		.loc 1 727 1
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 8
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796 0000 80B4     		push	{r7}
 797              	.LCFI31:
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 0002 83B0     		sub	sp, sp, #12
 801              	.LCFI32:
 802              		.cfi_def_cfa_offset 16
 803 0004 00AF     		add	r7, sp, #0
 804              	.LCFI33:
 805              		.cfi_def_cfa_register 7
 806 0006 7860     		str	r0, [r7, #4]
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 807              		.loc 1 733 1
 808 0008 00BF     		nop
 809 000a 0C37     		adds	r7, r7, #12
 810              	.LCFI34:
 811              		.cfi_def_cfa_offset 4
 812 000c BD46     		mov	sp, r7
 813              	.LCFI35:
 814              		.cfi_def_cfa_register 13
 815              		@ sp needed
 816 000e 80BC     		pop	{r7}
 817              	.LCFI36:
 818              		.cfi_restore 7
 819              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 28


 820 0010 7047     		bx	lr
 821              		.cfi_endproc
 822              	.LFE71:
 824              		.section	.text.HAL_UART_RegisterCallback,"ax",%progbits
 825              		.align	1
 826              		.global	HAL_UART_RegisterCallback
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 831              	HAL_UART_RegisterCallback:
 832              	.LFB72:
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Register a User UART Callback
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart uart handle
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 833              		.loc 1 756 1
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 24
 836              		@ frame_needed = 1, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 838 0000 80B4     		push	{r7}
 839              	.LCFI37:
 840              		.cfi_def_cfa_offset 4
 841              		.cfi_offset 7, -4
 842 0002 87B0     		sub	sp, sp, #28
 843              	.LCFI38:
 844              		.cfi_def_cfa_offset 32
 845 0004 00AF     		add	r7, sp, #0
 846              	.LCFI39:
 847              		.cfi_def_cfa_register 7
 848 0006 F860     		str	r0, [r7, #12]
 849 0008 0B46     		mov	r3, r1
 850 000a 7A60     		str	r2, [r7, #4]
 851 000c FB72     		strb	r3, [r7, #11]
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 852              		.loc 1 757 21
 853 000e 0023     		movs	r3, #0
 854 0010 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 29


 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (pCallback == NULL)
 855              		.loc 1 759 6
 856 0012 7B68     		ldr	r3, [r7, #4]
 857 0014 002B     		cmp	r3, #0
 858 0016 07D1     		bne	.L38
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 859              		.loc 1 762 22
 860 0018 FB68     		ldr	r3, [r7, #12]
 861 001a 1B6C     		ldr	r3, [r3, #64]
 862 001c 43F02002 		orr	r2, r3, #32
 863 0020 FB68     		ldr	r3, [r7, #12]
 864 0022 1A64     		str	r2, [r3, #64]
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 865              		.loc 1 764 12
 866 0024 0123     		movs	r3, #1
 867 0026 8CE0     		b	.L39
 868              	.L38:
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 869              		.loc 1 767 3
 870 0028 FB68     		ldr	r3, [r7, #12]
 871 002a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 872 002e 012B     		cmp	r3, #1
 873 0030 01D1     		bne	.L40
 874              		.loc 1 767 3 is_stmt 0 discriminator 1
 875 0032 0223     		movs	r3, #2
 876 0034 85E0     		b	.L39
 877              	.L40:
 878              		.loc 1 767 3 discriminator 2
 879 0036 FB68     		ldr	r3, [r7, #12]
 880 0038 0122     		movs	r2, #1
 881 003a 83F83C20 		strb	r2, [r3, #60]
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 882              		.loc 1 769 12 is_stmt 1 discriminator 2
 883 003e FB68     		ldr	r3, [r7, #12]
 884 0040 93F83D30 		ldrb	r3, [r3, #61]
 885 0044 DBB2     		uxtb	r3, r3
 886              		.loc 1 769 6 discriminator 2
 887 0046 202B     		cmp	r3, #32
 888 0048 51D1     		bne	.L41
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 889              		.loc 1 771 5
 890 004a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 891 004c 0C2B     		cmp	r3, #12
 892 004e 45D8     		bhi	.L42
 893 0050 01A2     		adr	r2, .L44
 894 0052 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 895 0056 00BF     		.p2align 2
 896              	.L44:
 897 0058 8D000000 		.word	.L53+1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 30


 898 005c 95000000 		.word	.L52+1
 899 0060 9D000000 		.word	.L51+1
 900 0064 A5000000 		.word	.L50+1
 901 0068 AD000000 		.word	.L49+1
 902 006c B5000000 		.word	.L48+1
 903 0070 BD000000 		.word	.L47+1
 904 0074 C5000000 		.word	.L46+1
 905 0078 DD000000 		.word	.L42+1
 906 007c DD000000 		.word	.L42+1
 907 0080 DD000000 		.word	.L42+1
 908 0084 CD000000 		.word	.L45+1
 909 0088 D5000000 		.word	.L43+1
 910              		.p2align 1
 911              	.L53:
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 912              		.loc 1 774 35
 913 008c FB68     		ldr	r3, [r7, #12]
 914 008e 7A68     		ldr	r2, [r7, #4]
 915 0090 5A64     		str	r2, [r3, #68]
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 916              		.loc 1 775 9
 917 0092 51E0     		b	.L55
 918              	.L52:
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 919              		.loc 1 778 31
 920 0094 FB68     		ldr	r3, [r7, #12]
 921 0096 7A68     		ldr	r2, [r7, #4]
 922 0098 9A64     		str	r2, [r3, #72]
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 923              		.loc 1 779 9
 924 009a 4DE0     		b	.L55
 925              	.L51:
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 926              		.loc 1 782 35
 927 009c FB68     		ldr	r3, [r7, #12]
 928 009e 7A68     		ldr	r2, [r7, #4]
 929 00a0 DA64     		str	r2, [r3, #76]
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 930              		.loc 1 783 9
 931 00a2 49E0     		b	.L55
 932              	.L50:
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 933              		.loc 1 786 31
 934 00a4 FB68     		ldr	r3, [r7, #12]
 935 00a6 7A68     		ldr	r2, [r7, #4]
 936 00a8 1A65     		str	r2, [r3, #80]
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 937              		.loc 1 787 9
 938 00aa 45E0     		b	.L55
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 31


 939              	.L49:
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 940              		.loc 1 790 30
 941 00ac FB68     		ldr	r3, [r7, #12]
 942 00ae 7A68     		ldr	r2, [r7, #4]
 943 00b0 5A65     		str	r2, [r3, #84]
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 944              		.loc 1 791 9
 945 00b2 41E0     		b	.L55
 946              	.L48:
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 947              		.loc 1 794 34
 948 00b4 FB68     		ldr	r3, [r7, #12]
 949 00b6 7A68     		ldr	r2, [r7, #4]
 950 00b8 9A65     		str	r2, [r3, #88]
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 951              		.loc 1 795 9
 952 00ba 3DE0     		b	.L55
 953              	.L47:
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 954              		.loc 1 798 42
 955 00bc FB68     		ldr	r3, [r7, #12]
 956 00be 7A68     		ldr	r2, [r7, #4]
 957 00c0 DA65     		str	r2, [r3, #92]
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 958              		.loc 1 799 9
 959 00c2 39E0     		b	.L55
 960              	.L46:
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 961              		.loc 1 802 41
 962 00c4 FB68     		ldr	r3, [r7, #12]
 963 00c6 7A68     		ldr	r2, [r7, #4]
 964 00c8 1A66     		str	r2, [r3, #96]
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 965              		.loc 1 803 9
 966 00ca 35E0     		b	.L55
 967              	.L45:
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 968              		.loc 1 806 32
 969 00cc FB68     		ldr	r3, [r7, #12]
 970 00ce 7A68     		ldr	r2, [r7, #4]
 971 00d0 DA66     		str	r2, [r3, #108]
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 972              		.loc 1 807 9
 973 00d2 31E0     		b	.L55
 974              	.L43:
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 32


 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 975              		.loc 1 810 34
 976 00d4 FB68     		ldr	r3, [r7, #12]
 977 00d6 7A68     		ldr	r2, [r7, #4]
 978 00d8 1A67     		str	r2, [r3, #112]
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 979              		.loc 1 811 9
 980 00da 2DE0     		b	.L55
 981              	.L42:
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 982              		.loc 1 815 26
 983 00dc FB68     		ldr	r3, [r7, #12]
 984 00de 1B6C     		ldr	r3, [r3, #64]
 985 00e0 43F02002 		orr	r2, r3, #32
 986 00e4 FB68     		ldr	r3, [r7, #12]
 987 00e6 1A64     		str	r2, [r3, #64]
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 988              		.loc 1 818 16
 989 00e8 0123     		movs	r3, #1
 990 00ea FB75     		strb	r3, [r7, #23]
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 991              		.loc 1 819 9
 992 00ec 24E0     		b	.L55
 993              	.L41:
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 994              		.loc 1 822 17
 995 00ee FB68     		ldr	r3, [r7, #12]
 996 00f0 93F83D30 		ldrb	r3, [r3, #61]
 997 00f4 DBB2     		uxtb	r3, r3
 998              		.loc 1 822 11
 999 00f6 002B     		cmp	r3, #0
 1000 00f8 16D1     		bne	.L56
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 1001              		.loc 1 824 5
 1002 00fa FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1003 00fc 0B2B     		cmp	r3, #11
 1004 00fe 02D0     		beq	.L57
 1005 0100 0C2B     		cmp	r3, #12
 1006 0102 04D0     		beq	.L58
 1007 0104 07E0     		b	.L61
 1008              	.L57:
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 1009              		.loc 1 827 32
 1010 0106 FB68     		ldr	r3, [r7, #12]
 1011 0108 7A68     		ldr	r2, [r7, #4]
 1012 010a DA66     		str	r2, [r3, #108]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 33


 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1013              		.loc 1 828 9
 1014 010c 14E0     		b	.L55
 1015              	.L58:
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 1016              		.loc 1 831 34
 1017 010e FB68     		ldr	r3, [r7, #12]
 1018 0110 7A68     		ldr	r2, [r7, #4]
 1019 0112 1A67     		str	r2, [r3, #112]
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1020              		.loc 1 832 9
 1021 0114 10E0     		b	.L55
 1022              	.L61:
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 1023              		.loc 1 836 26
 1024 0116 FB68     		ldr	r3, [r7, #12]
 1025 0118 1B6C     		ldr	r3, [r3, #64]
 1026 011a 43F02002 		orr	r2, r3, #32
 1027 011e FB68     		ldr	r3, [r7, #12]
 1028 0120 1A64     		str	r2, [r3, #64]
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 1029              		.loc 1 839 16
 1030 0122 0123     		movs	r3, #1
 1031 0124 FB75     		strb	r3, [r7, #23]
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1032              		.loc 1 840 9
 1033 0126 07E0     		b	.L55
 1034              	.L56:
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 1035              		.loc 1 846 22
 1036 0128 FB68     		ldr	r3, [r7, #12]
 1037 012a 1B6C     		ldr	r3, [r3, #64]
 1038 012c 43F02002 		orr	r2, r3, #32
 1039 0130 FB68     		ldr	r3, [r7, #12]
 1040 0132 1A64     		str	r2, [r3, #64]
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Return error status */
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
 1041              		.loc 1 849 12
 1042 0134 0123     		movs	r3, #1
 1043 0136 FB75     		strb	r3, [r7, #23]
 1044              	.L55:
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 34


 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1045              		.loc 1 853 3
 1046 0138 FB68     		ldr	r3, [r7, #12]
 1047 013a 0022     		movs	r2, #0
 1048 013c 83F83C20 		strb	r2, [r3, #60]
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
 1049              		.loc 1 855 10
 1050 0140 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1051              	.L39:
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1052              		.loc 1 856 1
 1053 0142 1846     		mov	r0, r3
 1054 0144 1C37     		adds	r7, r7, #28
 1055              	.LCFI40:
 1056              		.cfi_def_cfa_offset 4
 1057 0146 BD46     		mov	sp, r7
 1058              	.LCFI41:
 1059              		.cfi_def_cfa_register 13
 1060              		@ sp needed
 1061 0148 80BC     		pop	{r7}
 1062              	.LCFI42:
 1063              		.cfi_restore 7
 1064              		.cfi_def_cfa_offset 0
 1065 014a 7047     		bx	lr
 1066              		.cfi_endproc
 1067              	.LFE72:
 1069              		.section	.text.HAL_UART_UnRegisterCallback,"ax",%progbits
 1070              		.align	1
 1071              		.global	HAL_UART_UnRegisterCallback
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1076              	HAL_UART_UnRegisterCallback:
 1077              	.LFB73:
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart uart handle
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1078              		.loc 1 877 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 35


 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 16
 1081              		@ frame_needed = 1, uses_anonymous_args = 0
 1082              		@ link register save eliminated.
 1083 0000 80B4     		push	{r7}
 1084              	.LCFI43:
 1085              		.cfi_def_cfa_offset 4
 1086              		.cfi_offset 7, -4
 1087 0002 85B0     		sub	sp, sp, #20
 1088              	.LCFI44:
 1089              		.cfi_def_cfa_offset 24
 1090 0004 00AF     		add	r7, sp, #0
 1091              	.LCFI45:
 1092              		.cfi_def_cfa_register 7
 1093 0006 7860     		str	r0, [r7, #4]
 1094 0008 0B46     		mov	r3, r1
 1095 000a FB70     		strb	r3, [r7, #3]
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 1096              		.loc 1 878 21
 1097 000c 0023     		movs	r3, #0
 1098 000e FB73     		strb	r3, [r7, #15]
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1099              		.loc 1 881 3
 1100 0010 7B68     		ldr	r3, [r7, #4]
 1101 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1102 0016 012B     		cmp	r3, #1
 1103 0018 01D1     		bne	.L63
 1104              		.loc 1 881 3 is_stmt 0 discriminator 1
 1105 001a 0223     		movs	r3, #2
 1106 001c 85E0     		b	.L64
 1107              	.L63:
 1108              		.loc 1 881 3 discriminator 2
 1109 001e 7B68     		ldr	r3, [r7, #4]
 1110 0020 0122     		movs	r2, #1
 1111 0022 83F83C20 		strb	r2, [r3, #60]
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 1112              		.loc 1 883 36 is_stmt 1 discriminator 2
 1113 0026 7B68     		ldr	r3, [r7, #4]
 1114 0028 93F83D30 		ldrb	r3, [r3, #61]
 1115 002c DBB2     		uxtb	r3, r3
 1116              		.loc 1 883 6 discriminator 2
 1117 002e 202B     		cmp	r3, #32
 1118 0030 51D1     		bne	.L65
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 1119              		.loc 1 885 5
 1120 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1121 0034 0C2B     		cmp	r3, #12
 1122 0036 45D8     		bhi	.L66
 1123 0038 01A2     		adr	r2, .L68
 1124 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1125 003e 00BF     		.p2align 2
 1126              	.L68:
 1127 0040 75000000 		.word	.L77+1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 36


 1128 0044 7D000000 		.word	.L76+1
 1129 0048 85000000 		.word	.L75+1
 1130 004c 8D000000 		.word	.L74+1
 1131 0050 95000000 		.word	.L73+1
 1132 0054 9D000000 		.word	.L72+1
 1133 0058 A5000000 		.word	.L71+1
 1134 005c AD000000 		.word	.L70+1
 1135 0060 C5000000 		.word	.L66+1
 1136 0064 C5000000 		.word	.L66+1
 1137 0068 C5000000 		.word	.L66+1
 1138 006c B5000000 		.word	.L69+1
 1139 0070 BD000000 		.word	.L67+1
 1140              		.p2align 1
 1141              	.L77:
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 1142              		.loc 1 888 35
 1143 0074 7B68     		ldr	r3, [r7, #4]
 1144 0076 2F4A     		ldr	r2, .L86
 1145 0078 5A64     		str	r2, [r3, #68]
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1146              		.loc 1 889 9
 1147 007a 51E0     		b	.L79
 1148              	.L76:
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 1149              		.loc 1 892 31
 1150 007c 7B68     		ldr	r3, [r7, #4]
 1151 007e 2E4A     		ldr	r2, .L86+4
 1152 0080 9A64     		str	r2, [r3, #72]
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1153              		.loc 1 893 9
 1154 0082 4DE0     		b	.L79
 1155              	.L75:
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 1156              		.loc 1 896 35
 1157 0084 7B68     		ldr	r3, [r7, #4]
 1158 0086 2D4A     		ldr	r2, .L86+8
 1159 0088 DA64     		str	r2, [r3, #76]
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1160              		.loc 1 897 9
 1161 008a 49E0     		b	.L79
 1162              	.L74:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 1163              		.loc 1 900 31
 1164 008c 7B68     		ldr	r3, [r7, #4]
 1165 008e 2C4A     		ldr	r2, .L86+12
 1166 0090 1A65     		str	r2, [r3, #80]
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1167              		.loc 1 901 9
 1168 0092 45E0     		b	.L79
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 37


 1169              	.L73:
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 1170              		.loc 1 904 30
 1171 0094 7B68     		ldr	r3, [r7, #4]
 1172 0096 2B4A     		ldr	r2, .L86+16
 1173 0098 5A65     		str	r2, [r3, #84]
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1174              		.loc 1 905 9
 1175 009a 41E0     		b	.L79
 1176              	.L72:
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 1177              		.loc 1 908 34
 1178 009c 7B68     		ldr	r3, [r7, #4]
 1179 009e 2A4A     		ldr	r2, .L86+20
 1180 00a0 9A65     		str	r2, [r3, #88]
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1181              		.loc 1 909 9
 1182 00a2 3DE0     		b	.L79
 1183              	.L71:
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 1184              		.loc 1 912 42
 1185 00a4 7B68     		ldr	r3, [r7, #4]
 1186 00a6 294A     		ldr	r2, .L86+24
 1187 00a8 DA65     		str	r2, [r3, #92]
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1188              		.loc 1 913 9
 1189 00aa 39E0     		b	.L79
 1190              	.L70:
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 1191              		.loc 1 916 41
 1192 00ac 7B68     		ldr	r3, [r7, #4]
 1193 00ae 284A     		ldr	r2, .L86+28
 1194 00b0 1A66     		str	r2, [r3, #96]
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1195              		.loc 1 917 9
 1196 00b2 35E0     		b	.L79
 1197              	.L69:
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 1198              		.loc 1 920 32
 1199 00b4 7B68     		ldr	r3, [r7, #4]
 1200 00b6 274A     		ldr	r2, .L86+32
 1201 00b8 DA66     		str	r2, [r3, #108]
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1202              		.loc 1 921 9
 1203 00ba 31E0     		b	.L79
 1204              	.L67:
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 38


 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 1205              		.loc 1 924 34
 1206 00bc 7B68     		ldr	r3, [r7, #4]
 1207 00be 264A     		ldr	r2, .L86+36
 1208 00c0 1A67     		str	r2, [r3, #112]
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1209              		.loc 1 925 9
 1210 00c2 2DE0     		b	.L79
 1211              	.L66:
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 1212              		.loc 1 929 26
 1213 00c4 7B68     		ldr	r3, [r7, #4]
 1214 00c6 1B6C     		ldr	r3, [r3, #64]
 1215 00c8 43F02002 		orr	r2, r3, #32
 1216 00cc 7B68     		ldr	r3, [r7, #4]
 1217 00ce 1A64     		str	r2, [r3, #64]
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 1218              		.loc 1 932 16
 1219 00d0 0123     		movs	r3, #1
 1220 00d2 FB73     		strb	r3, [r7, #15]
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1221              		.loc 1 933 9
 1222 00d4 24E0     		b	.L79
 1223              	.L65:
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 1224              		.loc 1 936 41
 1225 00d6 7B68     		ldr	r3, [r7, #4]
 1226 00d8 93F83D30 		ldrb	r3, [r3, #61]
 1227 00dc DBB2     		uxtb	r3, r3
 1228              		.loc 1 936 11
 1229 00de 002B     		cmp	r3, #0
 1230 00e0 16D1     		bne	.L80
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 1231              		.loc 1 938 5
 1232 00e2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1233 00e4 0B2B     		cmp	r3, #11
 1234 00e6 02D0     		beq	.L81
 1235 00e8 0C2B     		cmp	r3, #12
 1236 00ea 04D0     		beq	.L82
 1237 00ec 07E0     		b	.L85
 1238              	.L81:
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 1239              		.loc 1 941 32
 1240 00ee 7B68     		ldr	r3, [r7, #4]
 1241 00f0 184A     		ldr	r2, .L86+32
 1242 00f2 DA66     		str	r2, [r3, #108]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 39


 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1243              		.loc 1 942 9
 1244 00f4 14E0     		b	.L79
 1245              	.L82:
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 1246              		.loc 1 945 34
 1247 00f6 7B68     		ldr	r3, [r7, #4]
 1248 00f8 174A     		ldr	r2, .L86+36
 1249 00fa 1A67     		str	r2, [r3, #112]
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1250              		.loc 1 946 9
 1251 00fc 10E0     		b	.L79
 1252              	.L85:
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 1253              		.loc 1 950 26
 1254 00fe 7B68     		ldr	r3, [r7, #4]
 1255 0100 1B6C     		ldr	r3, [r3, #64]
 1256 0102 43F02002 		orr	r2, r3, #32
 1257 0106 7B68     		ldr	r3, [r7, #4]
 1258 0108 1A64     		str	r2, [r3, #64]
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 1259              		.loc 1 953 16
 1260 010a 0123     		movs	r3, #1
 1261 010c FB73     		strb	r3, [r7, #15]
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 1262              		.loc 1 954 9
 1263 010e 07E0     		b	.L79
 1264              	.L80:
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 1265              		.loc 1 960 22
 1266 0110 7B68     		ldr	r3, [r7, #4]
 1267 0112 1B6C     		ldr	r3, [r3, #64]
 1268 0114 43F02002 		orr	r2, r3, #32
 1269 0118 7B68     		ldr	r3, [r7, #4]
 1270 011a 1A64     		str	r2, [r3, #64]
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Return error status */
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
 1271              		.loc 1 963 12
 1272 011c 0123     		movs	r3, #1
 1273 011e FB73     		strb	r3, [r7, #15]
 1274              	.L79:
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 40


 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1275              		.loc 1 967 3
 1276 0120 7B68     		ldr	r3, [r7, #4]
 1277 0122 0022     		movs	r2, #0
 1278 0124 83F83C20 		strb	r2, [r3, #60]
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
 1279              		.loc 1 969 10
 1280 0128 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1281              	.L64:
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1282              		.loc 1 970 1
 1283 012a 1846     		mov	r0, r3
 1284 012c 1437     		adds	r7, r7, #20
 1285              	.LCFI46:
 1286              		.cfi_def_cfa_offset 4
 1287 012e BD46     		mov	sp, r7
 1288              	.LCFI47:
 1289              		.cfi_def_cfa_register 13
 1290              		@ sp needed
 1291 0130 80BC     		pop	{r7}
 1292              	.LCFI48:
 1293              		.cfi_restore 7
 1294              		.cfi_def_cfa_offset 0
 1295 0132 7047     		bx	lr
 1296              	.L87:
 1297              		.align	2
 1298              	.L86:
 1299 0134 00000000 		.word	HAL_UART_TxHalfCpltCallback
 1300 0138 00000000 		.word	HAL_UART_TxCpltCallback
 1301 013c 00000000 		.word	HAL_UART_RxHalfCpltCallback
 1302 0140 00000000 		.word	HAL_UART_RxCpltCallback
 1303 0144 00000000 		.word	HAL_UART_ErrorCallback
 1304 0148 00000000 		.word	HAL_UART_AbortCpltCallback
 1305 014c 00000000 		.word	HAL_UART_AbortTransmitCpltCallback
 1306 0150 00000000 		.word	HAL_UART_AbortReceiveCpltCallback
 1307 0154 00000000 		.word	HAL_UART_MspInit
 1308 0158 00000000 		.word	HAL_UART_MspDeInit
 1309              		.cfi_endproc
 1310              	.LFE73:
 1312              		.section	.text.HAL_UART_RegisterRxEventCallback,"ax",%progbits
 1313              		.align	1
 1314              		.global	HAL_UART_RegisterRxEventCallback
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1319              	HAL_UART_RegisterRxEventCallback:
 1320              	.LFB74:
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart     Uart handle
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 41


 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1321              		.loc 1 980 1
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 16
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325              		@ link register save eliminated.
 1326 0000 80B4     		push	{r7}
 1327              	.LCFI49:
 1328              		.cfi_def_cfa_offset 4
 1329              		.cfi_offset 7, -4
 1330 0002 85B0     		sub	sp, sp, #20
 1331              	.LCFI50:
 1332              		.cfi_def_cfa_offset 24
 1333 0004 00AF     		add	r7, sp, #0
 1334              	.LCFI51:
 1335              		.cfi_def_cfa_register 7
 1336 0006 7860     		str	r0, [r7, #4]
 1337 0008 3960     		str	r1, [r7]
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 1338              		.loc 1 981 21
 1339 000a 0023     		movs	r3, #0
 1340 000c FB73     		strb	r3, [r7, #15]
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (pCallback == NULL)
 1341              		.loc 1 983 6
 1342 000e 3B68     		ldr	r3, [r7]
 1343 0010 002B     		cmp	r3, #0
 1344 0012 07D1     		bne	.L89
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 1345              		.loc 1 985 22
 1346 0014 7B68     		ldr	r3, [r7, #4]
 1347 0016 1B6C     		ldr	r3, [r3, #64]
 1348 0018 43F02002 		orr	r2, r3, #32
 1349 001c 7B68     		ldr	r3, [r7, #4]
 1350 001e 1A64     		str	r2, [r3, #64]
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 1351              		.loc 1 987 12
 1352 0020 0123     		movs	r3, #1
 1353 0022 21E0     		b	.L90
 1354              	.L89:
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1355              		.loc 1 991 3
 1356 0024 7B68     		ldr	r3, [r7, #4]
 1357 0026 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1358 002a 012B     		cmp	r3, #1
 1359 002c 01D1     		bne	.L91
 1360              		.loc 1 991 3 is_stmt 0 discriminator 1
 1361 002e 0223     		movs	r3, #2
 1362 0030 1AE0     		b	.L90
 1363              	.L91:
 1364              		.loc 1 991 3 discriminator 2
 1365 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 42


 1366 0034 0122     		movs	r2, #1
 1367 0036 83F83C20 		strb	r2, [r3, #60]
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1368              		.loc 1 993 12 is_stmt 1 discriminator 2
 1369 003a 7B68     		ldr	r3, [r7, #4]
 1370 003c 93F83D30 		ldrb	r3, [r3, #61]
 1371 0040 DBB2     		uxtb	r3, r3
 1372              		.loc 1 993 6 discriminator 2
 1373 0042 202B     		cmp	r3, #32
 1374 0044 03D1     		bne	.L92
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 1375              		.loc 1 995 28
 1376 0046 7B68     		ldr	r3, [r7, #4]
 1377 0048 3A68     		ldr	r2, [r7]
 1378 004a 9A66     		str	r2, [r3, #104]
 1379 004c 07E0     		b	.L93
 1380              	.L92:
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 1381              		.loc 1 999 22
 1382 004e 7B68     		ldr	r3, [r7, #4]
 1383 0050 1B6C     		ldr	r3, [r3, #64]
 1384 0052 43F02002 		orr	r2, r3, #32
 1385 0056 7B68     		ldr	r3, [r7, #4]
 1386 0058 1A64     		str	r2, [r3, #64]
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
 1387              		.loc 1 1001 12
 1388 005a 0123     		movs	r3, #1
 1389 005c FB73     		strb	r3, [r7, #15]
 1390              	.L93:
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1391              		.loc 1 1005 3
 1392 005e 7B68     		ldr	r3, [r7, #4]
 1393 0060 0022     		movs	r2, #0
 1394 0062 83F83C20 		strb	r2, [r3, #60]
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
 1395              		.loc 1 1007 10
 1396 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1397              	.L90:
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1398              		.loc 1 1008 1
 1399 0068 1846     		mov	r0, r3
 1400 006a 1437     		adds	r7, r7, #20
 1401              	.LCFI52:
 1402              		.cfi_def_cfa_offset 4
 1403 006c BD46     		mov	sp, r7
 1404              	.LCFI53:
 1405              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 43


 1406              		@ sp needed
 1407 006e 80BC     		pop	{r7}
 1408              	.LCFI54:
 1409              		.cfi_restore 7
 1410              		.cfi_def_cfa_offset 0
 1411 0070 7047     		bx	lr
 1412              		.cfi_endproc
 1413              	.LFE74:
 1415              		.section	.text.HAL_UART_UnRegisterRxEventCallback,"ax",%progbits
 1416              		.align	1
 1417              		.global	HAL_UART_UnRegisterRxEventCallback
 1418              		.syntax unified
 1419              		.thumb
 1420              		.thumb_func
 1422              	HAL_UART_UnRegisterRxEventCallback:
 1423              	.LFB75:
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart     Uart handle
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1424              		.loc 1 1017 1
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 16
 1427              		@ frame_needed = 1, uses_anonymous_args = 0
 1428              		@ link register save eliminated.
 1429 0000 80B4     		push	{r7}
 1430              	.LCFI55:
 1431              		.cfi_def_cfa_offset 4
 1432              		.cfi_offset 7, -4
 1433 0002 85B0     		sub	sp, sp, #20
 1434              	.LCFI56:
 1435              		.cfi_def_cfa_offset 24
 1436 0004 00AF     		add	r7, sp, #0
 1437              	.LCFI57:
 1438              		.cfi_def_cfa_register 7
 1439 0006 7860     		str	r0, [r7, #4]
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 1440              		.loc 1 1018 21
 1441 0008 0023     		movs	r3, #0
 1442 000a FB73     		strb	r3, [r7, #15]
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1443              		.loc 1 1021 3
 1444 000c 7B68     		ldr	r3, [r7, #4]
 1445 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1446 0012 012B     		cmp	r3, #1
 1447 0014 01D1     		bne	.L95
 1448              		.loc 1 1021 3 is_stmt 0 discriminator 1
 1449 0016 0223     		movs	r3, #2
 1450 0018 1AE0     		b	.L96
 1451              	.L95:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 44


 1452              		.loc 1 1021 3 discriminator 2
 1453 001a 7B68     		ldr	r3, [r7, #4]
 1454 001c 0122     		movs	r2, #1
 1455 001e 83F83C20 		strb	r2, [r3, #60]
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1456              		.loc 1 1023 12 is_stmt 1 discriminator 2
 1457 0022 7B68     		ldr	r3, [r7, #4]
 1458 0024 93F83D30 		ldrb	r3, [r3, #61]
 1459 0028 DBB2     		uxtb	r3, r3
 1460              		.loc 1 1023 6 discriminator 2
 1461 002a 202B     		cmp	r3, #32
 1462 002c 03D1     		bne	.L97
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
 1463              		.loc 1 1025 28
 1464 002e 7B68     		ldr	r3, [r7, #4]
 1465 0030 0A4A     		ldr	r2, .L99
 1466 0032 9A66     		str	r2, [r3, #104]
 1467 0034 07E0     		b	.L98
 1468              	.L97:
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 1469              		.loc 1 1029 22
 1470 0036 7B68     		ldr	r3, [r7, #4]
 1471 0038 1B6C     		ldr	r3, [r3, #64]
 1472 003a 43F02002 		orr	r2, r3, #32
 1473 003e 7B68     		ldr	r3, [r7, #4]
 1474 0040 1A64     		str	r2, [r3, #64]
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
 1475              		.loc 1 1031 12
 1476 0042 0123     		movs	r3, #1
 1477 0044 FB73     		strb	r3, [r7, #15]
 1478              	.L98:
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1479              		.loc 1 1035 3
 1480 0046 7B68     		ldr	r3, [r7, #4]
 1481 0048 0022     		movs	r2, #0
 1482 004a 83F83C20 		strb	r2, [r3, #60]
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
 1483              		.loc 1 1036 10
 1484 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1485              	.L96:
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1486              		.loc 1 1037 1
 1487 0050 1846     		mov	r0, r3
 1488 0052 1437     		adds	r7, r7, #20
 1489              	.LCFI58:
 1490              		.cfi_def_cfa_offset 4
 1491 0054 BD46     		mov	sp, r7
 1492              	.LCFI59:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 45


 1493              		.cfi_def_cfa_register 13
 1494              		@ sp needed
 1495 0056 80BC     		pop	{r7}
 1496              	.LCFI60:
 1497              		.cfi_restore 7
 1498              		.cfi_def_cfa_offset 0
 1499 0058 7047     		bx	lr
 1500              	.L100:
 1501 005a 00BF     		.align	2
 1502              	.L99:
 1503 005c 00000000 		.word	HAL_UARTEx_RxEventCallback
 1504              		.cfi_endproc
 1505              	.LFE75:
 1507              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1508              		.align	1
 1509              		.global	HAL_UART_Transmit
 1510              		.syntax unified
 1511              		.thumb
 1512              		.thumb_func
 1514              	HAL_UART_Transmit:
 1515              	.LFB76:
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            after finishing transfer.
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The end of the data processing will be indicated through the
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            using DMA mode.
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode API's are :
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive()
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 46


1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Abort()
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Errors are handled as follows :
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 47


1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1516              		.loc 1 1137 1
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 32
 1519              		@ frame_needed = 1, uses_anonymous_args = 0
 1520 0000 80B5     		push	{r7, lr}
 1521              	.LCFI61:
 1522              		.cfi_def_cfa_offset 8
 1523              		.cfi_offset 7, -8
 1524              		.cfi_offset 14, -4
 1525 0002 8AB0     		sub	sp, sp, #40
 1526              	.LCFI62:
 1527              		.cfi_def_cfa_offset 48
 1528 0004 02AF     		add	r7, sp, #8
 1529              	.LCFI63:
 1530              		.cfi_def_cfa 7, 40
 1531 0006 F860     		str	r0, [r7, #12]
 1532 0008 B960     		str	r1, [r7, #8]
 1533 000a 3B60     		str	r3, [r7]
 1534 000c 1346     		mov	r3, r2	@ movhi
 1535 000e FB80     		strh	r3, [r7, #6]	@ movhi
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 1536              		.loc 1 1140 12
 1537 0010 0023     		movs	r3, #0
 1538 0012 7B61     		str	r3, [r7, #20]
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1539              		.loc 1 1143 12
 1540 0014 FB68     		ldr	r3, [r7, #12]
 1541 0016 93F83D30 		ldrb	r3, [r3, #61]
 1542 001a DBB2     		uxtb	r3, r3
 1543              		.loc 1 1143 6
 1544 001c 202B     		cmp	r3, #32
 1545 001e 7CD1     		bne	.L102
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1546              		.loc 1 1145 8
 1547 0020 BB68     		ldr	r3, [r7, #8]
 1548 0022 002B     		cmp	r3, #0
 1549 0024 02D0     		beq	.L103
 1550              		.loc 1 1145 25 discriminator 1
 1551 0026 FB88     		ldrh	r3, [r7, #6]
 1552 0028 002B     		cmp	r3, #0
 1553 002a 01D1     		bne	.L104
 1554              	.L103:
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 1555              		.loc 1 1147 15
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 48


 1556 002c 0123     		movs	r3, #1
 1557 002e 75E0     		b	.L105
 1558              	.L104:
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1559              		.loc 1 1151 5
 1560 0030 FB68     		ldr	r3, [r7, #12]
 1561 0032 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1562 0036 012B     		cmp	r3, #1
 1563 0038 01D1     		bne	.L106
 1564              		.loc 1 1151 5 is_stmt 0 discriminator 1
 1565 003a 0223     		movs	r3, #2
 1566 003c 6EE0     		b	.L105
 1567              	.L106:
 1568              		.loc 1 1151 5 discriminator 2
 1569 003e FB68     		ldr	r3, [r7, #12]
 1570 0040 0122     		movs	r2, #1
 1571 0042 83F83C20 		strb	r2, [r3, #60]
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1572              		.loc 1 1153 22 is_stmt 1 discriminator 2
 1573 0046 FB68     		ldr	r3, [r7, #12]
 1574 0048 0022     		movs	r2, #0
 1575 004a 1A64     		str	r2, [r3, #64]
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1576              		.loc 1 1154 19 discriminator 2
 1577 004c FB68     		ldr	r3, [r7, #12]
 1578 004e 2122     		movs	r2, #33
 1579 0050 83F83D20 		strb	r2, [r3, #61]
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1580              		.loc 1 1157 17 discriminator 2
 1581 0054 FFF7FEFF 		bl	HAL_GetTick
 1582 0058 7861     		str	r0, [r7, #20]
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1583              		.loc 1 1159 23 discriminator 2
 1584 005a FB68     		ldr	r3, [r7, #12]
 1585 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1586 005e 9A84     		strh	r2, [r3, #36]	@ movhi
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1587              		.loc 1 1160 24 discriminator 2
 1588 0060 FB68     		ldr	r3, [r7, #12]
 1589 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1590 0064 DA84     		strh	r2, [r3, #38]	@ movhi
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1591              		.loc 1 1163 21 discriminator 2
 1592 0066 FB68     		ldr	r3, [r7, #12]
 1593 0068 9B68     		ldr	r3, [r3, #8]
 1594              		.loc 1 1163 8 discriminator 2
 1595 006a B3F5805F 		cmp	r3, #4096
 1596 006e 08D1     		bne	.L107
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 49


 1597              		.loc 1 1163 71 discriminator 1
 1598 0070 FB68     		ldr	r3, [r7, #12]
 1599 0072 1B69     		ldr	r3, [r3, #16]
 1600              		.loc 1 1163 56 discriminator 1
 1601 0074 002B     		cmp	r3, #0
 1602 0076 04D1     		bne	.L107
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
 1603              		.loc 1 1165 19
 1604 0078 0023     		movs	r3, #0
 1605 007a FB61     		str	r3, [r7, #28]
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1606              		.loc 1 1166 19
 1607 007c BB68     		ldr	r3, [r7, #8]
 1608 007e BB61     		str	r3, [r7, #24]
 1609 0080 03E0     		b	.L108
 1610              	.L107:
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
 1611              		.loc 1 1170 19
 1612 0082 BB68     		ldr	r3, [r7, #8]
 1613 0084 FB61     		str	r3, [r7, #28]
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
 1614              		.loc 1 1171 19
 1615 0086 0023     		movs	r3, #0
 1616 0088 BB61     		str	r3, [r7, #24]
 1617              	.L108:
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1618              		.loc 1 1175 5
 1619 008a FB68     		ldr	r3, [r7, #12]
 1620 008c 0022     		movs	r2, #0
 1621 008e 83F83C20 		strb	r2, [r3, #60]
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 1622              		.loc 1 1177 11
 1623 0092 2AE0     		b	.L109
 1624              	.L113:
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 1625              		.loc 1 1179 11
 1626 0094 3B68     		ldr	r3, [r7]
 1627 0096 0093     		str	r3, [sp]
 1628 0098 7B69     		ldr	r3, [r7, #20]
 1629 009a 0022     		movs	r2, #0
 1630 009c 8021     		movs	r1, #128
 1631 009e F868     		ldr	r0, [r7, #12]
 1632 00a0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1633 00a4 0346     		mov	r3, r0
 1634              		.loc 1 1179 10
 1635 00a6 002B     		cmp	r3, #0
 1636 00a8 01D0     		beq	.L110
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 50


1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
 1637              		.loc 1 1181 16
 1638 00aa 0323     		movs	r3, #3
 1639 00ac 36E0     		b	.L105
 1640              	.L110:
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (pdata8bits == NULL)
 1641              		.loc 1 1183 10
 1642 00ae FB69     		ldr	r3, [r7, #28]
 1643 00b0 002B     		cmp	r3, #0
 1644 00b2 0BD1     		bne	.L111
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 1645              		.loc 1 1185 42
 1646 00b4 BB69     		ldr	r3, [r7, #24]
 1647 00b6 1B88     		ldrh	r3, [r3]
 1648              		.loc 1 1185 31
 1649 00b8 1A46     		mov	r2, r3
 1650              		.loc 1 1185 14
 1651 00ba FB68     		ldr	r3, [r7, #12]
 1652 00bc 1B68     		ldr	r3, [r3]
 1653              		.loc 1 1185 31
 1654 00be C2F30802 		ubfx	r2, r2, #0, #9
 1655              		.loc 1 1185 29
 1656 00c2 5A60     		str	r2, [r3, #4]
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata16bits++;
 1657              		.loc 1 1186 20
 1658 00c4 BB69     		ldr	r3, [r7, #24]
 1659 00c6 0233     		adds	r3, r3, #2
 1660 00c8 BB61     		str	r3, [r7, #24]
 1661 00ca 07E0     		b	.L112
 1662              	.L111:
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 1663              		.loc 1 1190 41
 1664 00cc FB69     		ldr	r3, [r7, #28]
 1665 00ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1666              		.loc 1 1190 14
 1667 00d0 FB68     		ldr	r3, [r7, #12]
 1668 00d2 1B68     		ldr	r3, [r3]
 1669              		.loc 1 1190 29
 1670 00d4 5A60     		str	r2, [r3, #4]
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata8bits++;
 1671              		.loc 1 1191 19
 1672 00d6 FB69     		ldr	r3, [r7, #28]
 1673 00d8 0133     		adds	r3, r3, #1
 1674 00da FB61     		str	r3, [r7, #28]
 1675              	.L112:
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 1676              		.loc 1 1193 12
 1677 00dc FB68     		ldr	r3, [r7, #12]
 1678 00de DB8C     		ldrh	r3, [r3, #38]	@ movhi
 1679 00e0 9BB2     		uxth	r3, r3
 1680              		.loc 1 1193 25
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 51


 1681 00e2 013B     		subs	r3, r3, #1
 1682 00e4 9AB2     		uxth	r2, r3
 1683 00e6 FB68     		ldr	r3, [r7, #12]
 1684 00e8 DA84     		strh	r2, [r3, #38]	@ movhi
 1685              	.L109:
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1686              		.loc 1 1177 17
 1687 00ea FB68     		ldr	r3, [r7, #12]
 1688 00ec DB8C     		ldrh	r3, [r3, #38]	@ movhi
 1689 00ee 9BB2     		uxth	r3, r3
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1690              		.loc 1 1177 11
 1691 00f0 002B     		cmp	r3, #0
 1692 00f2 CFD1     		bne	.L113
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 1693              		.loc 1 1196 9
 1694 00f4 3B68     		ldr	r3, [r7]
 1695 00f6 0093     		str	r3, [sp]
 1696 00f8 7B69     		ldr	r3, [r7, #20]
 1697 00fa 0022     		movs	r2, #0
 1698 00fc 4021     		movs	r1, #64
 1699 00fe F868     		ldr	r0, [r7, #12]
 1700 0100 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1701 0104 0346     		mov	r3, r0
 1702              		.loc 1 1196 8
 1703 0106 002B     		cmp	r3, #0
 1704 0108 01D0     		beq	.L114
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 1705              		.loc 1 1198 14
 1706 010a 0323     		movs	r3, #3
 1707 010c 06E0     		b	.L105
 1708              	.L114:
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 1709              		.loc 1 1202 19
 1710 010e FB68     		ldr	r3, [r7, #12]
 1711 0110 2022     		movs	r2, #32
 1712 0112 83F83D20 		strb	r2, [r3, #61]
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1713              		.loc 1 1204 12
 1714 0116 0023     		movs	r3, #0
 1715 0118 00E0     		b	.L105
 1716              	.L102:
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1717              		.loc 1 1208 12
 1718 011a 0223     		movs	r3, #2
 1719              	.L105:
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 52


1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1720              		.loc 1 1210 1
 1721 011c 1846     		mov	r0, r3
 1722 011e 2037     		adds	r7, r7, #32
 1723              	.LCFI64:
 1724              		.cfi_def_cfa_offset 8
 1725 0120 BD46     		mov	sp, r7
 1726              	.LCFI65:
 1727              		.cfi_def_cfa_register 13
 1728              		@ sp needed
 1729 0122 80BD     		pop	{r7, pc}
 1730              		.cfi_endproc
 1731              	.LFE76:
 1733              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1734              		.align	1
 1735              		.global	HAL_UART_Receive
 1736              		.syntax unified
 1737              		.thumb
 1738              		.thumb_func
 1740              	HAL_UART_Receive:
 1741              	.LFB77:
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1742              		.loc 1 1225 1
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 32
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0000 80B5     		push	{r7, lr}
 1747              	.LCFI66:
 1748              		.cfi_def_cfa_offset 8
 1749              		.cfi_offset 7, -8
 1750              		.cfi_offset 14, -4
 1751 0002 8AB0     		sub	sp, sp, #40
 1752              	.LCFI67:
 1753              		.cfi_def_cfa_offset 48
 1754 0004 02AF     		add	r7, sp, #8
 1755              	.LCFI68:
 1756              		.cfi_def_cfa 7, 40
 1757 0006 F860     		str	r0, [r7, #12]
 1758 0008 B960     		str	r1, [r7, #8]
 1759 000a 3B60     		str	r3, [r7]
 1760 000c 1346     		mov	r3, r2	@ movhi
 1761 000e FB80     		strh	r3, [r7, #6]	@ movhi
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 53


1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 1762              		.loc 1 1228 12
 1763 0010 0023     		movs	r3, #0
 1764 0012 7B61     		str	r3, [r7, #20]
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1765              		.loc 1 1231 12
 1766 0014 FB68     		ldr	r3, [r7, #12]
 1767 0016 93F83E30 		ldrb	r3, [r3, #62]
 1768 001a DBB2     		uxtb	r3, r3
 1769              		.loc 1 1231 6
 1770 001c 202B     		cmp	r3, #32
 1771 001e 40F08C80 		bne	.L116
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1772              		.loc 1 1233 8
 1773 0022 BB68     		ldr	r3, [r7, #8]
 1774 0024 002B     		cmp	r3, #0
 1775 0026 02D0     		beq	.L117
 1776              		.loc 1 1233 25 discriminator 1
 1777 0028 FB88     		ldrh	r3, [r7, #6]
 1778 002a 002B     		cmp	r3, #0
 1779 002c 01D1     		bne	.L118
 1780              	.L117:
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 1781              		.loc 1 1235 15
 1782 002e 0123     		movs	r3, #1
 1783 0030 84E0     		b	.L119
 1784              	.L118:
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1785              		.loc 1 1239 5
 1786 0032 FB68     		ldr	r3, [r7, #12]
 1787 0034 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1788 0038 012B     		cmp	r3, #1
 1789 003a 01D1     		bne	.L120
 1790              		.loc 1 1239 5 is_stmt 0 discriminator 1
 1791 003c 0223     		movs	r3, #2
 1792 003e 7DE0     		b	.L119
 1793              	.L120:
 1794              		.loc 1 1239 5 discriminator 2
 1795 0040 FB68     		ldr	r3, [r7, #12]
 1796 0042 0122     		movs	r2, #1
 1797 0044 83F83C20 		strb	r2, [r3, #60]
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1798              		.loc 1 1241 22 is_stmt 1 discriminator 2
 1799 0048 FB68     		ldr	r3, [r7, #12]
 1800 004a 0022     		movs	r2, #0
 1801 004c 1A64     		str	r2, [r3, #64]
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1802              		.loc 1 1242 20 discriminator 2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 54


 1803 004e FB68     		ldr	r3, [r7, #12]
 1804 0050 2222     		movs	r2, #34
 1805 0052 83F83E20 		strb	r2, [r3, #62]
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1806              		.loc 1 1243 26 discriminator 2
 1807 0056 FB68     		ldr	r3, [r7, #12]
 1808 0058 0022     		movs	r2, #0
 1809 005a 1A63     		str	r2, [r3, #48]
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1810              		.loc 1 1246 17 discriminator 2
 1811 005c FFF7FEFF 		bl	HAL_GetTick
 1812 0060 7861     		str	r0, [r7, #20]
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1813              		.loc 1 1248 23 discriminator 2
 1814 0062 FB68     		ldr	r3, [r7, #12]
 1815 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1816 0066 9A85     		strh	r2, [r3, #44]	@ movhi
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1817              		.loc 1 1249 24 discriminator 2
 1818 0068 FB68     		ldr	r3, [r7, #12]
 1819 006a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1820 006c DA85     		strh	r2, [r3, #46]	@ movhi
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1821              		.loc 1 1252 21 discriminator 2
 1822 006e FB68     		ldr	r3, [r7, #12]
 1823 0070 9B68     		ldr	r3, [r3, #8]
 1824              		.loc 1 1252 8 discriminator 2
 1825 0072 B3F5805F 		cmp	r3, #4096
 1826 0076 08D1     		bne	.L121
 1827              		.loc 1 1252 71 discriminator 1
 1828 0078 FB68     		ldr	r3, [r7, #12]
 1829 007a 1B69     		ldr	r3, [r3, #16]
 1830              		.loc 1 1252 56 discriminator 1
 1831 007c 002B     		cmp	r3, #0
 1832 007e 04D1     		bne	.L121
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
 1833              		.loc 1 1254 19
 1834 0080 0023     		movs	r3, #0
 1835 0082 FB61     		str	r3, [r7, #28]
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1836              		.loc 1 1255 19
 1837 0084 BB68     		ldr	r3, [r7, #8]
 1838 0086 BB61     		str	r3, [r7, #24]
 1839 0088 03E0     		b	.L122
 1840              	.L121:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
 1841              		.loc 1 1259 19
 1842 008a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 55


 1843 008c FB61     		str	r3, [r7, #28]
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
 1844              		.loc 1 1260 19
 1845 008e 0023     		movs	r3, #0
 1846 0090 BB61     		str	r3, [r7, #24]
 1847              	.L122:
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1848              		.loc 1 1264 5
 1849 0092 FB68     		ldr	r3, [r7, #12]
 1850 0094 0022     		movs	r2, #0
 1851 0096 83F83C20 		strb	r2, [r3, #60]
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1852              		.loc 1 1267 11
 1853 009a 43E0     		b	.L123
 1854              	.L130:
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1855              		.loc 1 1269 11
 1856 009c 3B68     		ldr	r3, [r7]
 1857 009e 0093     		str	r3, [sp]
 1858 00a0 7B69     		ldr	r3, [r7, #20]
 1859 00a2 0022     		movs	r2, #0
 1860 00a4 2021     		movs	r1, #32
 1861 00a6 F868     		ldr	r0, [r7, #12]
 1862 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1863 00ac 0346     		mov	r3, r0
 1864              		.loc 1 1269 10
 1865 00ae 002B     		cmp	r3, #0
 1866 00b0 01D0     		beq	.L124
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
 1867              		.loc 1 1271 16
 1868 00b2 0323     		movs	r3, #3
 1869 00b4 42E0     		b	.L119
 1870              	.L124:
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (pdata8bits == NULL)
 1871              		.loc 1 1273 10
 1872 00b6 FB69     		ldr	r3, [r7, #28]
 1873 00b8 002B     		cmp	r3, #0
 1874 00ba 0CD1     		bne	.L125
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 1875              		.loc 1 1275 40
 1876 00bc FB68     		ldr	r3, [r7, #12]
 1877 00be 1B68     		ldr	r3, [r3]
 1878              		.loc 1 1275 50
 1879 00c0 5B68     		ldr	r3, [r3, #4]
 1880              		.loc 1 1275 24
 1881 00c2 9BB2     		uxth	r3, r3
 1882 00c4 C3F30803 		ubfx	r3, r3, #0, #9
 1883 00c8 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 56


 1884              		.loc 1 1275 22
 1885 00ca BB69     		ldr	r3, [r7, #24]
 1886 00cc 1A80     		strh	r2, [r3]	@ movhi
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata16bits++;
 1887              		.loc 1 1276 20
 1888 00ce BB69     		ldr	r3, [r7, #24]
 1889 00d0 0233     		adds	r3, r3, #2
 1890 00d2 BB61     		str	r3, [r7, #24]
 1891 00d4 1FE0     		b	.L126
 1892              	.L125:
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
 1893              		.loc 1 1280 25
 1894 00d6 FB68     		ldr	r3, [r7, #12]
 1895 00d8 9B68     		ldr	r3, [r3, #8]
 1896              		.loc 1 1280 12
 1897 00da B3F5805F 		cmp	r3, #4096
 1898 00de 07D0     		beq	.L127
 1899              		.loc 1 1280 76 discriminator 1
 1900 00e0 FB68     		ldr	r3, [r7, #12]
 1901 00e2 9B68     		ldr	r3, [r3, #8]
 1902              		.loc 1 1280 60 discriminator 1
 1903 00e4 002B     		cmp	r3, #0
 1904 00e6 0AD1     		bne	.L128
 1905              		.loc 1 1280 126 discriminator 2
 1906 00e8 FB68     		ldr	r3, [r7, #12]
 1907 00ea 1B69     		ldr	r3, [r3, #16]
 1908              		.loc 1 1280 111 discriminator 2
 1909 00ec 002B     		cmp	r3, #0
 1910 00ee 06D1     		bne	.L128
 1911              	.L127:
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1912              		.loc 1 1282 40
 1913 00f0 FB68     		ldr	r3, [r7, #12]
 1914 00f2 1B68     		ldr	r3, [r3]
 1915              		.loc 1 1282 50
 1916 00f4 5B68     		ldr	r3, [r3, #4]
 1917              		.loc 1 1282 25
 1918 00f6 DAB2     		uxtb	r2, r3
 1919              		.loc 1 1282 23
 1920 00f8 FB69     		ldr	r3, [r7, #28]
 1921 00fa 1A70     		strb	r2, [r3]
 1922 00fc 08E0     		b	.L129
 1923              	.L128:
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1924              		.loc 1 1286 40
 1925 00fe FB68     		ldr	r3, [r7, #12]
 1926 0100 1B68     		ldr	r3, [r3]
 1927              		.loc 1 1286 50
 1928 0102 5B68     		ldr	r3, [r3, #4]
 1929              		.loc 1 1286 25
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 57


 1930 0104 DBB2     		uxtb	r3, r3
 1931 0106 03F07F03 		and	r3, r3, #127
 1932 010a DAB2     		uxtb	r2, r3
 1933              		.loc 1 1286 23
 1934 010c FB69     		ldr	r3, [r7, #28]
 1935 010e 1A70     		strb	r2, [r3]
 1936              	.L129:
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata8bits++;
 1937              		.loc 1 1288 19
 1938 0110 FB69     		ldr	r3, [r7, #28]
 1939 0112 0133     		adds	r3, r3, #1
 1940 0114 FB61     		str	r3, [r7, #28]
 1941              	.L126:
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 1942              		.loc 1 1290 12
 1943 0116 FB68     		ldr	r3, [r7, #12]
 1944 0118 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1945 011a 9BB2     		uxth	r3, r3
 1946              		.loc 1 1290 25
 1947 011c 013B     		subs	r3, r3, #1
 1948 011e 9AB2     		uxth	r2, r3
 1949 0120 FB68     		ldr	r3, [r7, #12]
 1950 0122 DA85     		strh	r2, [r3, #46]	@ movhi
 1951              	.L123:
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1952              		.loc 1 1267 17
 1953 0124 FB68     		ldr	r3, [r7, #12]
 1954 0126 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1955 0128 9BB2     		uxth	r3, r3
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1956              		.loc 1 1267 11
 1957 012a 002B     		cmp	r3, #0
 1958 012c B6D1     		bne	.L130
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1959              		.loc 1 1294 20
 1960 012e FB68     		ldr	r3, [r7, #12]
 1961 0130 2022     		movs	r2, #32
 1962 0132 83F83E20 		strb	r2, [r3, #62]
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1963              		.loc 1 1296 12
 1964 0136 0023     		movs	r3, #0
 1965 0138 00E0     		b	.L119
 1966              	.L116:
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1967              		.loc 1 1300 12
 1968 013a 0223     		movs	r3, #2
 1969              	.L119:
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 58


1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1970              		.loc 1 1302 1
 1971 013c 1846     		mov	r0, r3
 1972 013e 2037     		adds	r7, r7, #32
 1973              	.LCFI69:
 1974              		.cfi_def_cfa_offset 8
 1975 0140 BD46     		mov	sp, r7
 1976              	.LCFI70:
 1977              		.cfi_def_cfa_register 13
 1978              		@ sp needed
 1979 0142 80BD     		pop	{r7, pc}
 1980              		.cfi_endproc
 1981              	.LFE77:
 1983              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1984              		.align	1
 1985              		.global	HAL_UART_Transmit_IT
 1986              		.syntax unified
 1987              		.thumb
 1988              		.thumb_func
 1990              	HAL_UART_Transmit_IT:
 1991              	.LFB78:
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1992              		.loc 1 1316 1
 1993              		.cfi_startproc
 1994              		@ args = 0, pretend = 0, frame = 16
 1995              		@ frame_needed = 1, uses_anonymous_args = 0
 1996              		@ link register save eliminated.
 1997 0000 80B4     		push	{r7}
 1998              	.LCFI71:
 1999              		.cfi_def_cfa_offset 4
 2000              		.cfi_offset 7, -4
 2001 0002 85B0     		sub	sp, sp, #20
 2002              	.LCFI72:
 2003              		.cfi_def_cfa_offset 24
 2004 0004 00AF     		add	r7, sp, #0
 2005              	.LCFI73:
 2006              		.cfi_def_cfa_register 7
 2007 0006 F860     		str	r0, [r7, #12]
 2008 0008 B960     		str	r1, [r7, #8]
 2009 000a 1346     		mov	r3, r2
 2010 000c FB80     		strh	r3, [r7, #6]	@ movhi
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 2011              		.loc 1 1318 12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 59


 2012 000e FB68     		ldr	r3, [r7, #12]
 2013 0010 93F83D30 		ldrb	r3, [r3, #61]
 2014 0014 DBB2     		uxtb	r3, r3
 2015              		.loc 1 1318 6
 2016 0016 202B     		cmp	r3, #32
 2017 0018 30D1     		bne	.L132
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2018              		.loc 1 1320 8
 2019 001a BB68     		ldr	r3, [r7, #8]
 2020 001c 002B     		cmp	r3, #0
 2021 001e 02D0     		beq	.L133
 2022              		.loc 1 1320 25 discriminator 1
 2023 0020 FB88     		ldrh	r3, [r7, #6]
 2024 0022 002B     		cmp	r3, #0
 2025 0024 01D1     		bne	.L134
 2026              	.L133:
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 2027              		.loc 1 1322 14
 2028 0026 0123     		movs	r3, #1
 2029 0028 29E0     		b	.L135
 2030              	.L134:
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 2031              		.loc 1 1326 5
 2032 002a FB68     		ldr	r3, [r7, #12]
 2033 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2034 0030 012B     		cmp	r3, #1
 2035 0032 01D1     		bne	.L136
 2036              		.loc 1 1326 5 is_stmt 0 discriminator 1
 2037 0034 0223     		movs	r3, #2
 2038 0036 22E0     		b	.L135
 2039              	.L136:
 2040              		.loc 1 1326 5 discriminator 2
 2041 0038 FB68     		ldr	r3, [r7, #12]
 2042 003a 0122     		movs	r2, #1
 2043 003c 83F83C20 		strb	r2, [r3, #60]
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 2044              		.loc 1 1328 23 is_stmt 1 discriminator 2
 2045 0040 FB68     		ldr	r3, [r7, #12]
 2046 0042 BA68     		ldr	r2, [r7, #8]
 2047 0044 1A62     		str	r2, [r3, #32]
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 2048              		.loc 1 1329 23 discriminator 2
 2049 0046 FB68     		ldr	r3, [r7, #12]
 2050 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2051 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 2052              		.loc 1 1330 24 discriminator 2
 2053 004c FB68     		ldr	r3, [r7, #12]
 2054 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 2055 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 60


1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2056              		.loc 1 1332 22 discriminator 2
 2057 0052 FB68     		ldr	r3, [r7, #12]
 2058 0054 0022     		movs	r2, #0
 2059 0056 1A64     		str	r2, [r3, #64]
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2060              		.loc 1 1333 19 discriminator 2
 2061 0058 FB68     		ldr	r3, [r7, #12]
 2062 005a 2122     		movs	r2, #33
 2063 005c 83F83D20 		strb	r2, [r3, #61]
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2064              		.loc 1 1336 5 discriminator 2
 2065 0060 FB68     		ldr	r3, [r7, #12]
 2066 0062 0022     		movs	r2, #0
 2067 0064 83F83C20 		strb	r2, [r3, #60]
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 2068              		.loc 1 1339 5 discriminator 2
 2069 0068 FB68     		ldr	r3, [r7, #12]
 2070 006a 1B68     		ldr	r3, [r3]
 2071 006c DA68     		ldr	r2, [r3, #12]
 2072 006e FB68     		ldr	r3, [r7, #12]
 2073 0070 1B68     		ldr	r3, [r3]
 2074 0072 42F08002 		orr	r2, r2, #128
 2075 0076 DA60     		str	r2, [r3, #12]
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 2076              		.loc 1 1341 12 discriminator 2
 2077 0078 0023     		movs	r3, #0
 2078 007a 00E0     		b	.L135
 2079              	.L132:
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 2080              		.loc 1 1345 12
 2081 007c 0223     		movs	r3, #2
 2082              	.L135:
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2083              		.loc 1 1347 1
 2084 007e 1846     		mov	r0, r3
 2085 0080 1437     		adds	r7, r7, #20
 2086              	.LCFI74:
 2087              		.cfi_def_cfa_offset 4
 2088 0082 BD46     		mov	sp, r7
 2089              	.LCFI75:
 2090              		.cfi_def_cfa_register 13
 2091              		@ sp needed
 2092 0084 80BC     		pop	{r7}
 2093              	.LCFI76:
 2094              		.cfi_restore 7
 2095              		.cfi_def_cfa_offset 0
 2096 0086 7047     		bx	lr
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 61


 2097              		.cfi_endproc
 2098              	.LFE78:
 2100              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 2101              		.align	1
 2102              		.global	HAL_UART_Receive_IT
 2103              		.syntax unified
 2104              		.thumb
 2105              		.thumb_func
 2107              	HAL_UART_Receive_IT:
 2108              	.LFB79:
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2109              		.loc 1 1361 1
 2110              		.cfi_startproc
 2111              		@ args = 0, pretend = 0, frame = 16
 2112              		@ frame_needed = 1, uses_anonymous_args = 0
 2113 0000 80B5     		push	{r7, lr}
 2114              	.LCFI77:
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 7, -8
 2117              		.cfi_offset 14, -4
 2118 0002 84B0     		sub	sp, sp, #16
 2119              	.LCFI78:
 2120              		.cfi_def_cfa_offset 24
 2121 0004 00AF     		add	r7, sp, #0
 2122              	.LCFI79:
 2123              		.cfi_def_cfa_register 7
 2124 0006 F860     		str	r0, [r7, #12]
 2125 0008 B960     		str	r1, [r7, #8]
 2126 000a 1346     		mov	r3, r2
 2127 000c FB80     		strh	r3, [r7, #6]	@ movhi
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2128              		.loc 1 1363 12
 2129 000e FB68     		ldr	r3, [r7, #12]
 2130 0010 93F83E30 		ldrb	r3, [r3, #62]
 2131 0014 DBB2     		uxtb	r3, r3
 2132              		.loc 1 1363 6
 2133 0016 202B     		cmp	r3, #32
 2134 0018 1DD1     		bne	.L138
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2135              		.loc 1 1365 8
 2136 001a BB68     		ldr	r3, [r7, #8]
 2137 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 62


 2138 001e 02D0     		beq	.L139
 2139              		.loc 1 1365 25 discriminator 1
 2140 0020 FB88     		ldrh	r3, [r7, #6]
 2141 0022 002B     		cmp	r3, #0
 2142 0024 01D1     		bne	.L140
 2143              	.L139:
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 2144              		.loc 1 1367 14
 2145 0026 0123     		movs	r3, #1
 2146 0028 16E0     		b	.L141
 2147              	.L140:
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 2148              		.loc 1 1371 5
 2149 002a FB68     		ldr	r3, [r7, #12]
 2150 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2151 0030 012B     		cmp	r3, #1
 2152 0032 01D1     		bne	.L142
 2153              		.loc 1 1371 5 is_stmt 0 discriminator 1
 2154 0034 0223     		movs	r3, #2
 2155 0036 0FE0     		b	.L141
 2156              	.L142:
 2157              		.loc 1 1371 5 discriminator 2
 2158 0038 FB68     		ldr	r3, [r7, #12]
 2159 003a 0122     		movs	r2, #1
 2160 003c 83F83C20 		strb	r2, [r3, #60]
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2161              		.loc 1 1374 26 is_stmt 1 discriminator 2
 2162 0040 FB68     		ldr	r3, [r7, #12]
 2163 0042 0022     		movs	r2, #0
 2164 0044 1A63     		str	r2, [r3, #48]
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return(UART_Start_Receive_IT(huart, pData, Size));
 2165              		.loc 1 1376 12 discriminator 2
 2166 0046 FB88     		ldrh	r3, [r7, #6]
 2167 0048 1A46     		mov	r2, r3
 2168 004a B968     		ldr	r1, [r7, #8]
 2169 004c F868     		ldr	r0, [r7, #12]
 2170 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 2171 0052 0346     		mov	r3, r0
 2172 0054 00E0     		b	.L141
 2173              	.L138:
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 2174              		.loc 1 1380 12
 2175 0056 0223     		movs	r3, #2
 2176              	.L141:
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2177              		.loc 1 1382 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 63


 2178 0058 1846     		mov	r0, r3
 2179 005a 1037     		adds	r7, r7, #16
 2180              	.LCFI80:
 2181              		.cfi_def_cfa_offset 8
 2182 005c BD46     		mov	sp, r7
 2183              	.LCFI81:
 2184              		.cfi_def_cfa_register 13
 2185              		@ sp needed
 2186 005e 80BD     		pop	{r7, pc}
 2187              		.cfi_endproc
 2188              	.LFE79:
 2190              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 2191              		.align	1
 2192              		.global	HAL_UART_Transmit_DMA
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2197              	HAL_UART_Transmit_DMA:
 2198              	.LFB80:
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2199              		.loc 1 1396 1
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 24
 2202              		@ frame_needed = 1, uses_anonymous_args = 0
 2203 0000 80B5     		push	{r7, lr}
 2204              	.LCFI82:
 2205              		.cfi_def_cfa_offset 8
 2206              		.cfi_offset 7, -8
 2207              		.cfi_offset 14, -4
 2208 0002 86B0     		sub	sp, sp, #24
 2209              	.LCFI83:
 2210              		.cfi_def_cfa_offset 32
 2211 0004 00AF     		add	r7, sp, #0
 2212              	.LCFI84:
 2213              		.cfi_def_cfa_register 7
 2214 0006 F860     		str	r0, [r7, #12]
 2215 0008 B960     		str	r1, [r7, #8]
 2216 000a 1346     		mov	r3, r2
 2217 000c FB80     		strh	r3, [r7, #6]	@ movhi
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 2218              		.loc 1 1400 12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 64


 2219 000e FB68     		ldr	r3, [r7, #12]
 2220 0010 93F83D30 		ldrb	r3, [r3, #61]
 2221 0014 DBB2     		uxtb	r3, r3
 2222              		.loc 1 1400 6
 2223 0016 202B     		cmp	r3, #32
 2224 0018 53D1     		bne	.L144
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2225              		.loc 1 1402 16
 2226 001a BB68     		ldr	r3, [r7, #8]
 2227              		.loc 1 1402 8
 2228 001c 002B     		cmp	r3, #0
 2229 001e 02D0     		beq	.L145
 2230              		.loc 1 1402 25 discriminator 1
 2231 0020 FB88     		ldrh	r3, [r7, #6]
 2232 0022 002B     		cmp	r3, #0
 2233 0024 01D1     		bne	.L146
 2234              	.L145:
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 2235              		.loc 1 1404 14
 2236 0026 0123     		movs	r3, #1
 2237 0028 4CE0     		b	.L147
 2238              	.L146:
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 2239              		.loc 1 1408 5
 2240 002a FB68     		ldr	r3, [r7, #12]
 2241 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2242 0030 012B     		cmp	r3, #1
 2243 0032 01D1     		bne	.L148
 2244              		.loc 1 1408 5 is_stmt 0 discriminator 1
 2245 0034 0223     		movs	r3, #2
 2246 0036 45E0     		b	.L147
 2247              	.L148:
 2248              		.loc 1 1408 5 discriminator 2
 2249 0038 FB68     		ldr	r3, [r7, #12]
 2250 003a 0122     		movs	r2, #1
 2251 003c 83F83C20 		strb	r2, [r3, #60]
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 2252              		.loc 1 1410 23 is_stmt 1 discriminator 2
 2253 0040 BA68     		ldr	r2, [r7, #8]
 2254 0042 FB68     		ldr	r3, [r7, #12]
 2255 0044 1A62     		str	r2, [r3, #32]
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 2256              		.loc 1 1411 23 discriminator 2
 2257 0046 FB68     		ldr	r3, [r7, #12]
 2258 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2259 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 2260              		.loc 1 1412 24 discriminator 2
 2261 004c FB68     		ldr	r3, [r7, #12]
 2262 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 2263 0050 DA84     		strh	r2, [r3, #38]	@ movhi
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 65


1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2264              		.loc 1 1414 22 discriminator 2
 2265 0052 FB68     		ldr	r3, [r7, #12]
 2266 0054 0022     		movs	r2, #0
 2267 0056 1A64     		str	r2, [r3, #64]
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2268              		.loc 1 1415 19 discriminator 2
 2269 0058 FB68     		ldr	r3, [r7, #12]
 2270 005a 2122     		movs	r2, #33
 2271 005c 83F83D20 		strb	r2, [r3, #61]
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 2272              		.loc 1 1418 10 discriminator 2
 2273 0060 FB68     		ldr	r3, [r7, #12]
 2274 0062 5B6B     		ldr	r3, [r3, #52]
 2275              		.loc 1 1418 37 discriminator 2
 2276 0064 194A     		ldr	r2, .L149
 2277 0066 9A62     		str	r2, [r3, #40]
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 2278              		.loc 1 1421 10 discriminator 2
 2279 0068 FB68     		ldr	r3, [r7, #12]
 2280 006a 5B6B     		ldr	r3, [r3, #52]
 2281              		.loc 1 1421 41 discriminator 2
 2282 006c 184A     		ldr	r2, .L149+4
 2283 006e DA62     		str	r2, [r3, #44]
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 2284              		.loc 1 1424 10 discriminator 2
 2285 0070 FB68     		ldr	r3, [r7, #12]
 2286 0072 5B6B     		ldr	r3, [r3, #52]
 2287              		.loc 1 1424 38 discriminator 2
 2288 0074 174A     		ldr	r2, .L149+8
 2289 0076 1A63     		str	r2, [r3, #48]
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 2290              		.loc 1 1427 10 discriminator 2
 2291 0078 FB68     		ldr	r3, [r7, #12]
 2292 007a 5B6B     		ldr	r3, [r3, #52]
 2293              		.loc 1 1427 38 discriminator 2
 2294 007c 0022     		movs	r2, #0
 2295 007e 5A63     		str	r2, [r3, #52]
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 2296              		.loc 1 1430 9 discriminator 2
 2297 0080 07F10803 		add	r3, r7, #8
 2298 0084 7B61     		str	r3, [r7, #20]
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 2299              		.loc 1 1431 5 discriminator 2
 2300 0086 FB68     		ldr	r3, [r7, #12]
 2301 0088 586B     		ldr	r0, [r3, #52]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 66


 2302 008a 7B69     		ldr	r3, [r7, #20]
 2303 008c 1968     		ldr	r1, [r3]
 2304              		.loc 1 1431 71 discriminator 2
 2305 008e FB68     		ldr	r3, [r7, #12]
 2306 0090 1B68     		ldr	r3, [r3]
 2307              		.loc 1 1431 65 discriminator 2
 2308 0092 0433     		adds	r3, r3, #4
 2309              		.loc 1 1431 5 discriminator 2
 2310 0094 1A46     		mov	r2, r3
 2311 0096 FB88     		ldrh	r3, [r7, #6]
 2312 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 2313              		.loc 1 1434 5 discriminator 2
 2314 009c FB68     		ldr	r3, [r7, #12]
 2315 009e 1B68     		ldr	r3, [r3]
 2316 00a0 6FF04002 		mvn	r2, #64
 2317 00a4 1A60     		str	r2, [r3]
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2318              		.loc 1 1437 5 discriminator 2
 2319 00a6 FB68     		ldr	r3, [r7, #12]
 2320 00a8 0022     		movs	r2, #0
 2321 00aa 83F83C20 		strb	r2, [r3, #60]
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2322              		.loc 1 1441 5 discriminator 2
 2323 00ae FB68     		ldr	r3, [r7, #12]
 2324 00b0 1B68     		ldr	r3, [r3]
 2325 00b2 5A69     		ldr	r2, [r3, #20]
 2326 00b4 FB68     		ldr	r3, [r7, #12]
 2327 00b6 1B68     		ldr	r3, [r3]
 2328 00b8 42F08002 		orr	r2, r2, #128
 2329 00bc 5A61     		str	r2, [r3, #20]
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 2330              		.loc 1 1443 12 discriminator 2
 2331 00be 0023     		movs	r3, #0
 2332 00c0 00E0     		b	.L147
 2333              	.L144:
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 2334              		.loc 1 1447 12
 2335 00c2 0223     		movs	r3, #2
 2336              	.L147:
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2337              		.loc 1 1449 1
 2338 00c4 1846     		mov	r0, r3
 2339 00c6 1837     		adds	r7, r7, #24
 2340              	.LCFI85:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 67


 2341              		.cfi_def_cfa_offset 8
 2342 00c8 BD46     		mov	sp, r7
 2343              	.LCFI86:
 2344              		.cfi_def_cfa_register 13
 2345              		@ sp needed
 2346 00ca 80BD     		pop	{r7, pc}
 2347              	.L150:
 2348              		.align	2
 2349              	.L149:
 2350 00cc 00000000 		.word	UART_DMATransmitCplt
 2351 00d0 00000000 		.word	UART_DMATxHalfCplt
 2352 00d4 00000000 		.word	UART_DMAError
 2353              		.cfi_endproc
 2354              	.LFE80:
 2356              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 2357              		.align	1
 2358              		.global	HAL_UART_Receive_DMA
 2359              		.syntax unified
 2360              		.thumb
 2361              		.thumb_func
 2363              	HAL_UART_Receive_DMA:
 2364              	.LFB81:
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2365              		.loc 1 1464 1
 2366              		.cfi_startproc
 2367              		@ args = 0, pretend = 0, frame = 16
 2368              		@ frame_needed = 1, uses_anonymous_args = 0
 2369 0000 80B5     		push	{r7, lr}
 2370              	.LCFI87:
 2371              		.cfi_def_cfa_offset 8
 2372              		.cfi_offset 7, -8
 2373              		.cfi_offset 14, -4
 2374 0002 84B0     		sub	sp, sp, #16
 2375              	.LCFI88:
 2376              		.cfi_def_cfa_offset 24
 2377 0004 00AF     		add	r7, sp, #0
 2378              	.LCFI89:
 2379              		.cfi_def_cfa_register 7
 2380 0006 F860     		str	r0, [r7, #12]
 2381 0008 B960     		str	r1, [r7, #8]
 2382 000a 1346     		mov	r3, r2
 2383 000c FB80     		strh	r3, [r7, #6]	@ movhi
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 68


1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2384              		.loc 1 1466 12
 2385 000e FB68     		ldr	r3, [r7, #12]
 2386 0010 93F83E30 		ldrb	r3, [r3, #62]
 2387 0014 DBB2     		uxtb	r3, r3
 2388              		.loc 1 1466 6
 2389 0016 202B     		cmp	r3, #32
 2390 0018 1DD1     		bne	.L152
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2391              		.loc 1 1468 8
 2392 001a BB68     		ldr	r3, [r7, #8]
 2393 001c 002B     		cmp	r3, #0
 2394 001e 02D0     		beq	.L153
 2395              		.loc 1 1468 25 discriminator 1
 2396 0020 FB88     		ldrh	r3, [r7, #6]
 2397 0022 002B     		cmp	r3, #0
 2398 0024 01D1     		bne	.L154
 2399              	.L153:
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 2400              		.loc 1 1470 14
 2401 0026 0123     		movs	r3, #1
 2402 0028 16E0     		b	.L155
 2403              	.L154:
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 2404              		.loc 1 1474 5
 2405 002a FB68     		ldr	r3, [r7, #12]
 2406 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2407 0030 012B     		cmp	r3, #1
 2408 0032 01D1     		bne	.L156
 2409              		.loc 1 1474 5 is_stmt 0 discriminator 1
 2410 0034 0223     		movs	r3, #2
 2411 0036 0FE0     		b	.L155
 2412              	.L156:
 2413              		.loc 1 1474 5 discriminator 2
 2414 0038 FB68     		ldr	r3, [r7, #12]
 2415 003a 0122     		movs	r2, #1
 2416 003c 83F83C20 		strb	r2, [r3, #60]
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2417              		.loc 1 1477 26 is_stmt 1 discriminator 2
 2418 0040 FB68     		ldr	r3, [r7, #12]
 2419 0042 0022     		movs	r2, #0
 2420 0044 1A63     		str	r2, [r3, #48]
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return(UART_Start_Receive_DMA(huart, pData, Size));
 2421              		.loc 1 1479 12 discriminator 2
 2422 0046 FB88     		ldrh	r3, [r7, #6]
 2423 0048 1A46     		mov	r2, r3
 2424 004a B968     		ldr	r1, [r7, #8]
 2425 004c F868     		ldr	r0, [r7, #12]
 2426 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 69


 2427 0052 0346     		mov	r3, r0
 2428 0054 00E0     		b	.L155
 2429              	.L152:
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 2430              		.loc 1 1483 12
 2431 0056 0223     		movs	r3, #2
 2432              	.L155:
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2433              		.loc 1 1485 1
 2434 0058 1846     		mov	r0, r3
 2435 005a 1037     		adds	r7, r7, #16
 2436              	.LCFI90:
 2437              		.cfi_def_cfa_offset 8
 2438 005c BD46     		mov	sp, r7
 2439              	.LCFI91:
 2440              		.cfi_def_cfa_register 13
 2441              		@ sp needed
 2442 005e 80BD     		pop	{r7, pc}
 2443              		.cfi_endproc
 2444              	.LFE81:
 2446              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2447              		.align	1
 2448              		.global	HAL_UART_DMAPause
 2449              		.syntax unified
 2450              		.thumb
 2451              		.thumb_func
 2453              	HAL_UART_DMAPause:
 2454              	.LFB82:
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2455              		.loc 1 1494 1
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 16
 2458              		@ frame_needed = 1, uses_anonymous_args = 0
 2459              		@ link register save eliminated.
 2460 0000 80B4     		push	{r7}
 2461              	.LCFI92:
 2462              		.cfi_def_cfa_offset 4
 2463              		.cfi_offset 7, -4
 2464 0002 85B0     		sub	sp, sp, #20
 2465              	.LCFI93:
 2466              		.cfi_def_cfa_offset 24
 2467 0004 00AF     		add	r7, sp, #0
 2468              	.LCFI94:
 2469              		.cfi_def_cfa_register 7
 2470 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 70


1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2471              		.loc 1 1495 12
 2472 0008 0023     		movs	r3, #0
 2473 000a FB60     		str	r3, [r7, #12]
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 2474              		.loc 1 1498 3
 2475 000c 7B68     		ldr	r3, [r7, #4]
 2476 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2477 0012 012B     		cmp	r3, #1
 2478 0014 01D1     		bne	.L158
 2479              		.loc 1 1498 3 is_stmt 0 discriminator 1
 2480 0016 0223     		movs	r3, #2
 2481 0018 50E0     		b	.L159
 2482              	.L158:
 2483              		.loc 1 1498 3 discriminator 2
 2484 001a 7B68     		ldr	r3, [r7, #4]
 2485 001c 0122     		movs	r2, #1
 2486 001e 83F83C20 		strb	r2, [r3, #60]
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2487              		.loc 1 1500 16 is_stmt 1 discriminator 2
 2488 0022 7B68     		ldr	r3, [r7, #4]
 2489 0024 1B68     		ldr	r3, [r3]
 2490 0026 5B69     		ldr	r3, [r3, #20]
 2491 0028 03F08003 		and	r3, r3, #128
 2492 002c 002B     		cmp	r3, #0
 2493 002e 14BF     		ite	ne
 2494 0030 0123     		movne	r3, #1
 2495 0032 0023     		moveq	r3, #0
 2496 0034 DBB2     		uxtb	r3, r3
 2497              		.loc 1 1500 14 discriminator 2
 2498 0036 FB60     		str	r3, [r7, #12]
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2499              		.loc 1 1501 13 discriminator 2
 2500 0038 7B68     		ldr	r3, [r7, #4]
 2501 003a 93F83D30 		ldrb	r3, [r3, #61]
 2502 003e DBB2     		uxtb	r3, r3
 2503              		.loc 1 1501 6 discriminator 2
 2504 0040 212B     		cmp	r3, #33
 2505 0042 0AD1     		bne	.L160
 2506              		.loc 1 1501 49 discriminator 1
 2507 0044 FB68     		ldr	r3, [r7, #12]
 2508 0046 002B     		cmp	r3, #0
 2509 0048 07D0     		beq	.L160
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2510              		.loc 1 1504 5
 2511 004a 7B68     		ldr	r3, [r7, #4]
 2512 004c 1B68     		ldr	r3, [r3]
 2513 004e 5A69     		ldr	r2, [r3, #20]
 2514 0050 7B68     		ldr	r3, [r7, #4]
 2515 0052 1B68     		ldr	r3, [r3]
 2516 0054 22F08002 		bic	r2, r2, #128
 2517 0058 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 71


 2518              	.L160:
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2519              		.loc 1 1507 16
 2520 005a 7B68     		ldr	r3, [r7, #4]
 2521 005c 1B68     		ldr	r3, [r3]
 2522 005e 5B69     		ldr	r3, [r3, #20]
 2523 0060 03F04003 		and	r3, r3, #64
 2524 0064 002B     		cmp	r3, #0
 2525 0066 14BF     		ite	ne
 2526 0068 0123     		movne	r3, #1
 2527 006a 0023     		moveq	r3, #0
 2528 006c DBB2     		uxtb	r3, r3
 2529              		.loc 1 1507 14
 2530 006e FB60     		str	r3, [r7, #12]
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2531              		.loc 1 1508 13
 2532 0070 7B68     		ldr	r3, [r7, #4]
 2533 0072 93F83E30 		ldrb	r3, [r3, #62]
 2534 0076 DBB2     		uxtb	r3, r3
 2535              		.loc 1 1508 6
 2536 0078 222B     		cmp	r3, #34
 2537 007a 1AD1     		bne	.L161
 2538              		.loc 1 1508 50 discriminator 1
 2539 007c FB68     		ldr	r3, [r7, #12]
 2540 007e 002B     		cmp	r3, #0
 2541 0080 17D0     		beq	.L161
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2542              		.loc 1 1511 5
 2543 0082 7B68     		ldr	r3, [r7, #4]
 2544 0084 1B68     		ldr	r3, [r3]
 2545 0086 DA68     		ldr	r2, [r3, #12]
 2546 0088 7B68     		ldr	r3, [r7, #4]
 2547 008a 1B68     		ldr	r3, [r3]
 2548 008c 22F48072 		bic	r2, r2, #256
 2549 0090 DA60     		str	r2, [r3, #12]
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2550              		.loc 1 1512 5
 2551 0092 7B68     		ldr	r3, [r7, #4]
 2552 0094 1B68     		ldr	r3, [r3]
 2553 0096 5A69     		ldr	r2, [r3, #20]
 2554 0098 7B68     		ldr	r3, [r7, #4]
 2555 009a 1B68     		ldr	r3, [r3]
 2556 009c 22F00102 		bic	r2, r2, #1
 2557 00a0 5A61     		str	r2, [r3, #20]
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2558              		.loc 1 1515 5
 2559 00a2 7B68     		ldr	r3, [r7, #4]
 2560 00a4 1B68     		ldr	r3, [r3]
 2561 00a6 5A69     		ldr	r2, [r3, #20]
 2562 00a8 7B68     		ldr	r3, [r7, #4]
 2563 00aa 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 72


 2564 00ac 22F04002 		bic	r2, r2, #64
 2565 00b0 5A61     		str	r2, [r3, #20]
 2566              	.L161:
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2567              		.loc 1 1519 3
 2568 00b2 7B68     		ldr	r3, [r7, #4]
 2569 00b4 0022     		movs	r2, #0
 2570 00b6 83F83C20 		strb	r2, [r3, #60]
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2571              		.loc 1 1521 10
 2572 00ba 0023     		movs	r3, #0
 2573              	.L159:
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2574              		.loc 1 1522 1
 2575 00bc 1846     		mov	r0, r3
 2576 00be 1437     		adds	r7, r7, #20
 2577              	.LCFI95:
 2578              		.cfi_def_cfa_offset 4
 2579 00c0 BD46     		mov	sp, r7
 2580              	.LCFI96:
 2581              		.cfi_def_cfa_register 13
 2582              		@ sp needed
 2583 00c2 80BC     		pop	{r7}
 2584              	.LCFI97:
 2585              		.cfi_restore 7
 2586              		.cfi_def_cfa_offset 0
 2587 00c4 7047     		bx	lr
 2588              		.cfi_endproc
 2589              	.LFE82:
 2591              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2592              		.align	1
 2593              		.global	HAL_UART_DMAResume
 2594              		.syntax unified
 2595              		.thumb
 2596              		.thumb_func
 2598              	HAL_UART_DMAResume:
 2599              	.LFB83:
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2600              		.loc 1 1531 1
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 16
 2603              		@ frame_needed = 1, uses_anonymous_args = 0
 2604              		@ link register save eliminated.
 2605 0000 80B4     		push	{r7}
 2606              	.LCFI98:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 73


 2607              		.cfi_def_cfa_offset 4
 2608              		.cfi_offset 7, -4
 2609 0002 85B0     		sub	sp, sp, #20
 2610              	.LCFI99:
 2611              		.cfi_def_cfa_offset 24
 2612 0004 00AF     		add	r7, sp, #0
 2613              	.LCFI100:
 2614              		.cfi_def_cfa_register 7
 2615 0006 7860     		str	r0, [r7, #4]
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 2616              		.loc 1 1533 3
 2617 0008 7B68     		ldr	r3, [r7, #4]
 2618 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2619 000e 012B     		cmp	r3, #1
 2620 0010 01D1     		bne	.L163
 2621              		.loc 1 1533 3 is_stmt 0 discriminator 1
 2622 0012 0223     		movs	r3, #2
 2623 0014 3FE0     		b	.L164
 2624              	.L163:
 2625              		.loc 1 1533 3 discriminator 2
 2626 0016 7B68     		ldr	r3, [r7, #4]
 2627 0018 0122     		movs	r2, #1
 2628 001a 83F83C20 		strb	r2, [r3, #60]
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2629              		.loc 1 1535 12 is_stmt 1 discriminator 2
 2630 001e 7B68     		ldr	r3, [r7, #4]
 2631 0020 93F83D30 		ldrb	r3, [r3, #61]
 2632 0024 DBB2     		uxtb	r3, r3
 2633              		.loc 1 1535 6 discriminator 2
 2634 0026 212B     		cmp	r3, #33
 2635 0028 07D1     		bne	.L165
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2636              		.loc 1 1538 5
 2637 002a 7B68     		ldr	r3, [r7, #4]
 2638 002c 1B68     		ldr	r3, [r3]
 2639 002e 5A69     		ldr	r2, [r3, #20]
 2640 0030 7B68     		ldr	r3, [r7, #4]
 2641 0032 1B68     		ldr	r3, [r3]
 2642 0034 42F08002 		orr	r2, r2, #128
 2643 0038 5A61     		str	r2, [r3, #20]
 2644              	.L165:
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2645              		.loc 1 1541 12
 2646 003a 7B68     		ldr	r3, [r7, #4]
 2647 003c 93F83E30 		ldrb	r3, [r3, #62]
 2648 0040 DBB2     		uxtb	r3, r3
 2649              		.loc 1 1541 6
 2650 0042 222B     		cmp	r3, #34
 2651 0044 22D1     		bne	.L166
 2652              	.LBB2:
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 74


1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2653              		.loc 1 1544 5
 2654 0046 0023     		movs	r3, #0
 2655 0048 FB60     		str	r3, [r7, #12]
 2656 004a 7B68     		ldr	r3, [r7, #4]
 2657 004c 1B68     		ldr	r3, [r3]
 2658 004e 1B68     		ldr	r3, [r3]
 2659 0050 FB60     		str	r3, [r7, #12]
 2660 0052 7B68     		ldr	r3, [r7, #4]
 2661 0054 1B68     		ldr	r3, [r3]
 2662 0056 5B68     		ldr	r3, [r3, #4]
 2663 0058 FB60     		str	r3, [r7, #12]
 2664 005a FB68     		ldr	r3, [r7, #12]
 2665              	.LBE2:
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2666              		.loc 1 1547 5
 2667 005c 7B68     		ldr	r3, [r7, #4]
 2668 005e 1B68     		ldr	r3, [r3]
 2669 0060 DA68     		ldr	r2, [r3, #12]
 2670 0062 7B68     		ldr	r3, [r7, #4]
 2671 0064 1B68     		ldr	r3, [r3]
 2672 0066 42F48072 		orr	r2, r2, #256
 2673 006a DA60     		str	r2, [r3, #12]
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2674              		.loc 1 1548 5
 2675 006c 7B68     		ldr	r3, [r7, #4]
 2676 006e 1B68     		ldr	r3, [r3]
 2677 0070 5A69     		ldr	r2, [r3, #20]
 2678 0072 7B68     		ldr	r3, [r7, #4]
 2679 0074 1B68     		ldr	r3, [r3]
 2680 0076 42F00102 		orr	r2, r2, #1
 2681 007a 5A61     		str	r2, [r3, #20]
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2682              		.loc 1 1551 5
 2683 007c 7B68     		ldr	r3, [r7, #4]
 2684 007e 1B68     		ldr	r3, [r3]
 2685 0080 5A69     		ldr	r2, [r3, #20]
 2686 0082 7B68     		ldr	r3, [r7, #4]
 2687 0084 1B68     		ldr	r3, [r3]
 2688 0086 42F04002 		orr	r2, r2, #64
 2689 008a 5A61     		str	r2, [r3, #20]
 2690              	.L166:
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2691              		.loc 1 1555 3
 2692 008c 7B68     		ldr	r3, [r7, #4]
 2693 008e 0022     		movs	r2, #0
 2694 0090 83F83C20 		strb	r2, [r3, #60]
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 75


 2695              		.loc 1 1557 10
 2696 0094 0023     		movs	r3, #0
 2697              	.L164:
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2698              		.loc 1 1558 1
 2699 0096 1846     		mov	r0, r3
 2700 0098 1437     		adds	r7, r7, #20
 2701              	.LCFI101:
 2702              		.cfi_def_cfa_offset 4
 2703 009a BD46     		mov	sp, r7
 2704              	.LCFI102:
 2705              		.cfi_def_cfa_register 13
 2706              		@ sp needed
 2707 009c 80BC     		pop	{r7}
 2708              	.LCFI103:
 2709              		.cfi_restore 7
 2710              		.cfi_def_cfa_offset 0
 2711 009e 7047     		bx	lr
 2712              		.cfi_endproc
 2713              	.LFE83:
 2715              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2716              		.align	1
 2717              		.global	HAL_UART_DMAStop
 2718              		.syntax unified
 2719              		.thumb
 2720              		.thumb_func
 2722              	HAL_UART_DMAStop:
 2723              	.LFB84:
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2724              		.loc 1 1567 1
 2725              		.cfi_startproc
 2726              		@ args = 0, pretend = 0, frame = 16
 2727              		@ frame_needed = 1, uses_anonymous_args = 0
 2728 0000 80B5     		push	{r7, lr}
 2729              	.LCFI104:
 2730              		.cfi_def_cfa_offset 8
 2731              		.cfi_offset 7, -8
 2732              		.cfi_offset 14, -4
 2733 0002 84B0     		sub	sp, sp, #16
 2734              	.LCFI105:
 2735              		.cfi_def_cfa_offset 24
 2736 0004 00AF     		add	r7, sp, #0
 2737              	.LCFI106:
 2738              		.cfi_def_cfa_register 7
 2739 0006 7860     		str	r0, [r7, #4]
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2740              		.loc 1 1568 12
 2741 0008 0023     		movs	r3, #0
 2742 000a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 76


1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2743              		.loc 1 1576 16
 2744 000c 7B68     		ldr	r3, [r7, #4]
 2745 000e 1B68     		ldr	r3, [r3]
 2746 0010 5B69     		ldr	r3, [r3, #20]
 2747 0012 03F08003 		and	r3, r3, #128
 2748 0016 002B     		cmp	r3, #0
 2749 0018 14BF     		ite	ne
 2750 001a 0123     		movne	r3, #1
 2751 001c 0023     		moveq	r3, #0
 2752 001e DBB2     		uxtb	r3, r3
 2753              		.loc 1 1576 14
 2754 0020 FB60     		str	r3, [r7, #12]
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2755              		.loc 1 1577 13
 2756 0022 7B68     		ldr	r3, [r7, #4]
 2757 0024 93F83D30 		ldrb	r3, [r3, #61]
 2758 0028 DBB2     		uxtb	r3, r3
 2759              		.loc 1 1577 6
 2760 002a 212B     		cmp	r3, #33
 2761 002c 16D1     		bne	.L168
 2762              		.loc 1 1577 49 discriminator 1
 2763 002e FB68     		ldr	r3, [r7, #12]
 2764 0030 002B     		cmp	r3, #0
 2765 0032 13D0     		beq	.L168
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2766              		.loc 1 1579 5
 2767 0034 7B68     		ldr	r3, [r7, #4]
 2768 0036 1B68     		ldr	r3, [r3]
 2769 0038 5A69     		ldr	r2, [r3, #20]
 2770 003a 7B68     		ldr	r3, [r7, #4]
 2771 003c 1B68     		ldr	r3, [r3]
 2772 003e 22F08002 		bic	r2, r2, #128
 2773 0042 5A61     		str	r2, [r3, #20]
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2774              		.loc 1 1582 14
 2775 0044 7B68     		ldr	r3, [r7, #4]
 2776 0046 5B6B     		ldr	r3, [r3, #52]
 2777              		.loc 1 1582 8
 2778 0048 002B     		cmp	r3, #0
 2779 004a 04D0     		beq	.L169
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2780              		.loc 1 1584 7
 2781 004c 7B68     		ldr	r3, [r7, #4]
 2782 004e 5B6B     		ldr	r3, [r3, #52]
 2783 0050 1846     		mov	r0, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 77


 2784 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 2785              	.L169:
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2786              		.loc 1 1586 5
 2787 0056 7868     		ldr	r0, [r7, #4]
 2788 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 2789              	.L168:
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2790              		.loc 1 1590 16
 2791 005c 7B68     		ldr	r3, [r7, #4]
 2792 005e 1B68     		ldr	r3, [r3]
 2793 0060 5B69     		ldr	r3, [r3, #20]
 2794 0062 03F04003 		and	r3, r3, #64
 2795 0066 002B     		cmp	r3, #0
 2796 0068 14BF     		ite	ne
 2797 006a 0123     		movne	r3, #1
 2798 006c 0023     		moveq	r3, #0
 2799 006e DBB2     		uxtb	r3, r3
 2800              		.loc 1 1590 14
 2801 0070 FB60     		str	r3, [r7, #12]
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2802              		.loc 1 1591 13
 2803 0072 7B68     		ldr	r3, [r7, #4]
 2804 0074 93F83E30 		ldrb	r3, [r3, #62]
 2805 0078 DBB2     		uxtb	r3, r3
 2806              		.loc 1 1591 6
 2807 007a 222B     		cmp	r3, #34
 2808 007c 16D1     		bne	.L170
 2809              		.loc 1 1591 50 discriminator 1
 2810 007e FB68     		ldr	r3, [r7, #12]
 2811 0080 002B     		cmp	r3, #0
 2812 0082 13D0     		beq	.L170
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2813              		.loc 1 1593 5
 2814 0084 7B68     		ldr	r3, [r7, #4]
 2815 0086 1B68     		ldr	r3, [r3]
 2816 0088 5A69     		ldr	r2, [r3, #20]
 2817 008a 7B68     		ldr	r3, [r7, #4]
 2818 008c 1B68     		ldr	r3, [r3]
 2819 008e 22F04002 		bic	r2, r2, #64
 2820 0092 5A61     		str	r2, [r3, #20]
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2821              		.loc 1 1596 14
 2822 0094 7B68     		ldr	r3, [r7, #4]
 2823 0096 9B6B     		ldr	r3, [r3, #56]
 2824              		.loc 1 1596 8
 2825 0098 002B     		cmp	r3, #0
 2826 009a 04D0     		beq	.L171
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 78


 2827              		.loc 1 1598 7
 2828 009c 7B68     		ldr	r3, [r7, #4]
 2829 009e 9B6B     		ldr	r3, [r3, #56]
 2830 00a0 1846     		mov	r0, r3
 2831 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2832              	.L171:
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2833              		.loc 1 1600 5
 2834 00a6 7868     		ldr	r0, [r7, #4]
 2835 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 2836              	.L170:
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2837              		.loc 1 1603 10
 2838 00ac 0023     		movs	r3, #0
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2839              		.loc 1 1604 1
 2840 00ae 1846     		mov	r0, r3
 2841 00b0 1037     		adds	r7, r7, #16
 2842              	.LCFI107:
 2843              		.cfi_def_cfa_offset 8
 2844 00b2 BD46     		mov	sp, r7
 2845              	.LCFI108:
 2846              		.cfi_def_cfa_register 13
 2847              		@ sp needed
 2848 00b4 80BD     		pop	{r7, pc}
 2849              		.cfi_endproc
 2850              	.LFE84:
 2852              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 2853              		.align	1
 2854              		.global	HAL_UARTEx_ReceiveToIdle
 2855              		.syntax unified
 2856              		.thumb
 2857              		.thumb_func
 2859              	HAL_UARTEx_ReceiveToIdle:
 2860              	.LFB85:
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart   UART handle.
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2861              		.loc 1 1622 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 79


 2862              		.cfi_startproc
 2863              		@ args = 4, pretend = 0, frame = 32
 2864              		@ frame_needed = 1, uses_anonymous_args = 0
 2865 0000 80B5     		push	{r7, lr}
 2866              	.LCFI109:
 2867              		.cfi_def_cfa_offset 8
 2868              		.cfi_offset 7, -8
 2869              		.cfi_offset 14, -4
 2870 0002 88B0     		sub	sp, sp, #32
 2871              	.LCFI110:
 2872              		.cfi_def_cfa_offset 40
 2873 0004 00AF     		add	r7, sp, #0
 2874              	.LCFI111:
 2875              		.cfi_def_cfa_register 7
 2876 0006 F860     		str	r0, [r7, #12]
 2877 0008 B960     		str	r1, [r7, #8]
 2878 000a 3B60     		str	r3, [r7]
 2879 000c 1346     		mov	r3, r2	@ movhi
 2880 000e FB80     		strh	r3, [r7, #6]	@ movhi
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart;
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2881              		.loc 1 1628 12
 2882 0010 FB68     		ldr	r3, [r7, #12]
 2883 0012 93F83E30 		ldrb	r3, [r3, #62]
 2884 0016 DBB2     		uxtb	r3, r3
 2885              		.loc 1 1628 6
 2886 0018 202B     		cmp	r3, #32
 2887 001a 40F0C980 		bne	.L174
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2888              		.loc 1 1630 8
 2889 001e BB68     		ldr	r3, [r7, #8]
 2890 0020 002B     		cmp	r3, #0
 2891 0022 02D0     		beq	.L175
 2892              		.loc 1 1630 25 discriminator 1
 2893 0024 FB88     		ldrh	r3, [r7, #6]
 2894 0026 002B     		cmp	r3, #0
 2895 0028 01D1     		bne	.L176
 2896              	.L175:
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 2897              		.loc 1 1632 15
 2898 002a 0123     		movs	r3, #1
 2899 002c C1E0     		b	.L177
 2900              	.L176:
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 2901              		.loc 1 1635 5
 2902 002e FB68     		ldr	r3, [r7, #12]
 2903 0030 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2904 0034 012B     		cmp	r3, #1
 2905 0036 01D1     		bne	.L178
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 80


 2906              		.loc 1 1635 5 is_stmt 0 discriminator 1
 2907 0038 0223     		movs	r3, #2
 2908 003a BAE0     		b	.L177
 2909              	.L178:
 2910              		.loc 1 1635 5 discriminator 2
 2911 003c FB68     		ldr	r3, [r7, #12]
 2912 003e 0122     		movs	r2, #1
 2913 0040 83F83C20 		strb	r2, [r3, #60]
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2914              		.loc 1 1637 22 is_stmt 1 discriminator 2
 2915 0044 FB68     		ldr	r3, [r7, #12]
 2916 0046 0022     		movs	r2, #0
 2917 0048 1A64     		str	r2, [r3, #64]
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2918              		.loc 1 1638 20 discriminator 2
 2919 004a FB68     		ldr	r3, [r7, #12]
 2920 004c 2222     		movs	r2, #34
 2921 004e 83F83E20 		strb	r2, [r3, #62]
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2922              		.loc 1 1639 26 discriminator 2
 2923 0052 FB68     		ldr	r3, [r7, #12]
 2924 0054 0122     		movs	r2, #1
 2925 0056 1A63     		str	r2, [r3, #48]
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 2926              		.loc 1 1642 17 discriminator 2
 2927 0058 FFF7FEFF 		bl	HAL_GetTick
 2928 005c 7861     		str	r0, [r7, #20]
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize  = Size;
 2929              		.loc 1 1644 24 discriminator 2
 2930 005e FB68     		ldr	r3, [r7, #12]
 2931 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2932 0062 9A85     		strh	r2, [r3, #44]	@ movhi
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 2933              		.loc 1 1645 24 discriminator 2
 2934 0064 FB68     		ldr	r3, [r7, #12]
 2935 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2936 0068 DA85     		strh	r2, [r3, #46]	@ movhi
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2937              		.loc 1 1648 21 discriminator 2
 2938 006a FB68     		ldr	r3, [r7, #12]
 2939 006c 9B68     		ldr	r3, [r3, #8]
 2940              		.loc 1 1648 8 discriminator 2
 2941 006e B3F5805F 		cmp	r3, #4096
 2942 0072 08D1     		bne	.L179
 2943              		.loc 1 1648 71 discriminator 1
 2944 0074 FB68     		ldr	r3, [r7, #12]
 2945 0076 1B69     		ldr	r3, [r3, #16]
 2946              		.loc 1 1648 56 discriminator 1
 2947 0078 002B     		cmp	r3, #0
 2948 007a 04D1     		bne	.L179
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 81


1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
 2949              		.loc 1 1650 19
 2950 007c 0023     		movs	r3, #0
 2951 007e FB61     		str	r3, [r7, #28]
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2952              		.loc 1 1651 19
 2953 0080 BB68     		ldr	r3, [r7, #8]
 2954 0082 BB61     		str	r3, [r7, #24]
 2955 0084 03E0     		b	.L180
 2956              	.L179:
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
 2957              		.loc 1 1655 19
 2958 0086 BB68     		ldr	r3, [r7, #8]
 2959 0088 FB61     		str	r3, [r7, #28]
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
 2960              		.loc 1 1656 19
 2961 008a 0023     		movs	r3, #0
 2962 008c BB61     		str	r3, [r7, #24]
 2963              	.L180:
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2964              		.loc 1 1659 5
 2965 008e FB68     		ldr	r3, [r7, #12]
 2966 0090 0022     		movs	r2, #0
 2967 0092 83F83C20 		strb	r2, [r3, #60]
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Initialize output number of received elements */
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     *RxLen = 0U;
 2968              		.loc 1 1662 12
 2969 0096 3B68     		ldr	r3, [r7]
 2970 0098 0022     		movs	r2, #0
 2971 009a 1A80     		strh	r2, [r3]	@ movhi
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* as long as data have to be received */
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 2972              		.loc 1 1665 11
 2973 009c 74E0     		b	.L181
 2974              	.L190:
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check if IDLE flag is set */
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 2975              		.loc 1 1668 11
 2976 009e FB68     		ldr	r3, [r7, #12]
 2977 00a0 1B68     		ldr	r3, [r3]
 2978 00a2 1B68     		ldr	r3, [r3]
 2979 00a4 03F01003 		and	r3, r3, #16
 2980              		.loc 1 1668 10
 2981 00a8 102B     		cmp	r3, #16
 2982 00aa 14D1     		bne	.L182
 2983              	.LBB3:
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 82


 2984              		.loc 1 1671 9
 2985 00ac 0023     		movs	r3, #0
 2986 00ae 3B61     		str	r3, [r7, #16]
 2987 00b0 FB68     		ldr	r3, [r7, #12]
 2988 00b2 1B68     		ldr	r3, [r3]
 2989 00b4 1B68     		ldr	r3, [r3]
 2990 00b6 3B61     		str	r3, [r7, #16]
 2991 00b8 FB68     		ldr	r3, [r7, #12]
 2992 00ba 1B68     		ldr	r3, [r3]
 2993 00bc 5B68     		ldr	r3, [r3, #4]
 2994 00be 3B61     		str	r3, [r7, #16]
 2995 00c0 3B69     		ldr	r3, [r7, #16]
 2996              	.LBE3:
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (*RxLen > 0U)
 2997              		.loc 1 1675 13
 2998 00c2 3B68     		ldr	r3, [r7]
 2999 00c4 1B88     		ldrh	r3, [r3]
 3000              		.loc 1 1675 12
 3001 00c6 002B     		cmp	r3, #0
 3002 00c8 05D0     		beq	.L182
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 3003              		.loc 1 1677 26
 3004 00ca FB68     		ldr	r3, [r7, #12]
 3005 00cc 2022     		movs	r2, #32
 3006 00ce 83F83E20 		strb	r2, [r3, #62]
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_OK;
 3007              		.loc 1 1679 18
 3008 00d2 0023     		movs	r3, #0
 3009 00d4 6DE0     		b	.L177
 3010              	.L182:
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check if RXNE flag is set */
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 3011              		.loc 1 1684 11
 3012 00d6 FB68     		ldr	r3, [r7, #12]
 3013 00d8 1B68     		ldr	r3, [r3]
 3014 00da 1B68     		ldr	r3, [r3]
 3015 00dc 03F02003 		and	r3, r3, #32
 3016              		.loc 1 1684 10
 3017 00e0 202B     		cmp	r3, #32
 3018 00e2 3CD1     		bne	.L183
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (pdata8bits == NULL)
 3019              		.loc 1 1686 12
 3020 00e4 FB69     		ldr	r3, [r7, #28]
 3021 00e6 002B     		cmp	r3, #0
 3022 00e8 0CD1     		bne	.L184
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 3023              		.loc 1 1688 42
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 83


 3024 00ea FB68     		ldr	r3, [r7, #12]
 3025 00ec 1B68     		ldr	r3, [r3]
 3026              		.loc 1 1688 52
 3027 00ee 5B68     		ldr	r3, [r3, #4]
 3028              		.loc 1 1688 26
 3029 00f0 9BB2     		uxth	r3, r3
 3030 00f2 C3F30803 		ubfx	r3, r3, #0, #9
 3031 00f6 9AB2     		uxth	r2, r3
 3032              		.loc 1 1688 24
 3033 00f8 BB69     		ldr	r3, [r7, #24]
 3034 00fa 1A80     		strh	r2, [r3]	@ movhi
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pdata16bits++;
 3035              		.loc 1 1689 22
 3036 00fc BB69     		ldr	r3, [r7, #24]
 3037 00fe 0233     		adds	r3, r3, #2
 3038 0100 BB61     		str	r3, [r7, #24]
 3039 0102 1FE0     		b	.L185
 3040              	.L184:
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_W
 3041              		.loc 1 1693 28
 3042 0104 FB68     		ldr	r3, [r7, #12]
 3043 0106 9B68     		ldr	r3, [r3, #8]
 3044              		.loc 1 1693 15
 3045 0108 B3F5805F 		cmp	r3, #4096
 3046 010c 07D0     		beq	.L186
 3047              		.loc 1 1693 79 discriminator 1
 3048 010e FB68     		ldr	r3, [r7, #12]
 3049 0110 9B68     		ldr	r3, [r3, #8]
 3050              		.loc 1 1693 63 discriminator 1
 3051 0112 002B     		cmp	r3, #0
 3052 0114 0AD1     		bne	.L187
 3053              		.loc 1 1693 129 discriminator 2
 3054 0116 FB68     		ldr	r3, [r7, #12]
 3055 0118 1B69     		ldr	r3, [r3, #16]
 3056              		.loc 1 1693 114 discriminator 2
 3057 011a 002B     		cmp	r3, #0
 3058 011c 06D1     		bne	.L187
 3059              	.L186:
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            {
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 3060              		.loc 1 1695 43
 3061 011e FB68     		ldr	r3, [r7, #12]
 3062 0120 1B68     		ldr	r3, [r3]
 3063              		.loc 1 1695 53
 3064 0122 5B68     		ldr	r3, [r3, #4]
 3065              		.loc 1 1695 28
 3066 0124 DAB2     		uxtb	r2, r3
 3067              		.loc 1 1695 26
 3068 0126 FB69     		ldr	r3, [r7, #28]
 3069 0128 1A70     		strb	r2, [r3]
 3070 012a 08E0     		b	.L188
 3071              	.L187:
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            }
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            else
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 84


1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            {
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 3072              		.loc 1 1699 43
 3073 012c FB68     		ldr	r3, [r7, #12]
 3074 012e 1B68     		ldr	r3, [r3]
 3075              		.loc 1 1699 53
 3076 0130 5B68     		ldr	r3, [r3, #4]
 3077              		.loc 1 1699 28
 3078 0132 DBB2     		uxtb	r3, r3
 3079 0134 03F07F03 		and	r3, r3, #127
 3080 0138 DAB2     		uxtb	r2, r3
 3081              		.loc 1 1699 26
 3082 013a FB69     		ldr	r3, [r7, #28]
 3083 013c 1A70     		strb	r2, [r3]
 3084              	.L188:
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            }
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pdata8bits++;
 3085              		.loc 1 1702 21
 3086 013e FB69     		ldr	r3, [r7, #28]
 3087 0140 0133     		adds	r3, r3, #1
 3088 0142 FB61     		str	r3, [r7, #28]
 3089              	.L185:
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Increment number of received elements */
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *RxLen += 1U;
 3090              		.loc 1 1705 16
 3091 0144 3B68     		ldr	r3, [r7]
 3092 0146 1B88     		ldrh	r3, [r3]
 3093 0148 0133     		adds	r3, r3, #1
 3094 014a 9AB2     		uxth	r2, r3
 3095 014c 3B68     		ldr	r3, [r7]
 3096 014e 1A80     		strh	r2, [r3]	@ movhi
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxXferCount--;
 3097              		.loc 1 1706 14
 3098 0150 FB68     		ldr	r3, [r7, #12]
 3099 0152 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3100 0154 9BB2     		uxth	r3, r3
 3101              		.loc 1 1706 27
 3102 0156 013B     		subs	r3, r3, #1
 3103 0158 9AB2     		uxth	r2, r3
 3104 015a FB68     		ldr	r3, [r7, #12]
 3105 015c DA85     		strh	r2, [r3, #46]	@ movhi
 3106              	.L183:
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check for the Timeout */
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
 3107              		.loc 1 1710 10
 3108 015e BB6A     		ldr	r3, [r7, #40]
 3109 0160 B3F1FF3F 		cmp	r3, #-1
 3110 0164 10D0     		beq	.L181
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 3111              		.loc 1 1712 15
 3112 0166 FFF7FEFF 		bl	HAL_GetTick
 3113 016a 0246     		mov	r2, r0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 85


 3114              		.loc 1 1712 29
 3115 016c 7B69     		ldr	r3, [r7, #20]
 3116 016e D31A     		subs	r3, r2, r3
 3117              		.loc 1 1712 12
 3118 0170 BA6A     		ldr	r2, [r7, #40]
 3119 0172 9A42     		cmp	r2, r3
 3120 0174 02D3     		bcc	.L189
 3121              		.loc 1 1712 53 discriminator 1
 3122 0176 BB6A     		ldr	r3, [r7, #40]
 3123 0178 002B     		cmp	r3, #0
 3124 017a 05D1     		bne	.L181
 3125              	.L189:
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 3126              		.loc 1 1714 26
 3127 017c FB68     		ldr	r3, [r7, #12]
 3128 017e 2022     		movs	r2, #32
 3129 0180 83F83E20 		strb	r2, [r3, #62]
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 3130              		.loc 1 1716 18
 3131 0184 0323     		movs	r3, #3
 3132 0186 14E0     		b	.L177
 3133              	.L181:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3134              		.loc 1 1665 17
 3135 0188 FB68     		ldr	r3, [r7, #12]
 3136 018a DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3137 018c 9BB2     		uxth	r3, r3
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3138              		.loc 1 1665 11
 3139 018e 002B     		cmp	r3, #0
 3140 0190 85D1     		bne	.L190
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 3141              		.loc 1 1722 19
 3142 0192 FB68     		ldr	r3, [r7, #12]
 3143 0194 9A8D     		ldrh	r2, [r3, #44]
 3144              		.loc 1 1722 39
 3145 0196 FB68     		ldr	r3, [r7, #12]
 3146 0198 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3147 019a 9BB2     		uxth	r3, r3
 3148              		.loc 1 1722 32
 3149 019c D31A     		subs	r3, r2, r3
 3150 019e 9AB2     		uxth	r2, r3
 3151              		.loc 1 1722 12
 3152 01a0 3B68     		ldr	r3, [r7]
 3153 01a2 1A80     		strh	r2, [r3]	@ movhi
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3154              		.loc 1 1724 20
 3155 01a4 FB68     		ldr	r3, [r7, #12]
 3156 01a6 2022     		movs	r2, #32
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 86


 3157 01a8 83F83E20 		strb	r2, [r3, #62]
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 3158              		.loc 1 1726 12
 3159 01ac 0023     		movs	r3, #0
 3160 01ae 00E0     		b	.L177
 3161              	.L174:
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 3162              		.loc 1 1730 12
 3163 01b0 0223     		movs	r3, #2
 3164              	.L177:
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3165              		.loc 1 1732 1
 3166 01b2 1846     		mov	r0, r3
 3167 01b4 2037     		adds	r7, r7, #32
 3168              	.LCFI112:
 3169              		.cfi_def_cfa_offset 8
 3170 01b6 BD46     		mov	sp, r7
 3171              	.LCFI113:
 3172              		.cfi_def_cfa_register 13
 3173              		@ sp needed
 3174 01b8 80BD     		pop	{r7, pc}
 3175              		.cfi_endproc
 3176              	.LFE85:
 3178              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 3179              		.align	1
 3180              		.global	HAL_UARTEx_ReceiveToIdle_IT
 3181              		.syntax unified
 3182              		.thumb
 3183              		.thumb_func
 3185              	HAL_UARTEx_ReceiveToIdle_IT:
 3186              	.LFB86:
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         number of received data elements.
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart UART handle.
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3187              		.loc 1 1748 1
 3188              		.cfi_startproc
 3189              		@ args = 0, pretend = 0, frame = 24
 3190              		@ frame_needed = 1, uses_anonymous_args = 0
 3191 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 87


 3192              	.LCFI114:
 3193              		.cfi_def_cfa_offset 8
 3194              		.cfi_offset 7, -8
 3195              		.cfi_offset 14, -4
 3196 0002 86B0     		sub	sp, sp, #24
 3197              	.LCFI115:
 3198              		.cfi_def_cfa_offset 32
 3199 0004 00AF     		add	r7, sp, #0
 3200              	.LCFI116:
 3201              		.cfi_def_cfa_register 7
 3202 0006 F860     		str	r0, [r7, #12]
 3203 0008 B960     		str	r1, [r7, #8]
 3204 000a 1346     		mov	r3, r2
 3205 000c FB80     		strh	r3, [r7, #6]	@ movhi
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 3206              		.loc 1 1752 12
 3207 000e FB68     		ldr	r3, [r7, #12]
 3208 0010 93F83E30 		ldrb	r3, [r3, #62]
 3209 0014 DBB2     		uxtb	r3, r3
 3210              		.loc 1 1752 6
 3211 0016 202B     		cmp	r3, #32
 3212 0018 3CD1     		bne	.L192
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 3213              		.loc 1 1754 8
 3214 001a BB68     		ldr	r3, [r7, #8]
 3215 001c 002B     		cmp	r3, #0
 3216 001e 02D0     		beq	.L193
 3217              		.loc 1 1754 25 discriminator 1
 3218 0020 FB88     		ldrh	r3, [r7, #6]
 3219 0022 002B     		cmp	r3, #0
 3220 0024 01D1     		bne	.L194
 3221              	.L193:
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 3222              		.loc 1 1756 14
 3223 0026 0123     		movs	r3, #1
 3224 0028 35E0     		b	.L195
 3225              	.L194:
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 3226              		.loc 1 1759 5
 3227 002a FB68     		ldr	r3, [r7, #12]
 3228 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 3229 0030 012B     		cmp	r3, #1
 3230 0032 01D1     		bne	.L196
 3231              		.loc 1 1759 5 is_stmt 0 discriminator 1
 3232 0034 0223     		movs	r3, #2
 3233 0036 2EE0     		b	.L195
 3234              	.L196:
 3235              		.loc 1 1759 5 discriminator 2
 3236 0038 FB68     		ldr	r3, [r7, #12]
 3237 003a 0122     		movs	r2, #1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 88


 3238 003c 83F83C20 		strb	r2, [r3, #60]
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 3239              		.loc 1 1762 26 is_stmt 1 discriminator 2
 3240 0040 FB68     		ldr	r3, [r7, #12]
 3241 0042 0122     		movs	r2, #1
 3242 0044 1A63     		str	r2, [r3, #48]
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 3243              		.loc 1 1764 15 discriminator 2
 3244 0046 FB88     		ldrh	r3, [r7, #6]
 3245 0048 1A46     		mov	r2, r3
 3246 004a B968     		ldr	r1, [r7, #8]
 3247 004c F868     		ldr	r0, [r7, #12]
 3248 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 3249 0052 0346     		mov	r3, r0
 3250 0054 FB75     		strb	r3, [r7, #23]
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (status == HAL_OK)
 3251              		.loc 1 1767 8 discriminator 2
 3252 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3253 0058 002B     		cmp	r3, #0
 3254 005a 19D1     		bne	.L197
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3255              		.loc 1 1769 16
 3256 005c FB68     		ldr	r3, [r7, #12]
 3257 005e 1B6B     		ldr	r3, [r3, #48]
 3258              		.loc 1 1769 10
 3259 0060 012B     		cmp	r3, #1
 3260 0062 13D1     		bne	.L198
 3261              	.LBB4:
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 3262              		.loc 1 1771 9
 3263 0064 0023     		movs	r3, #0
 3264 0066 3B61     		str	r3, [r7, #16]
 3265 0068 FB68     		ldr	r3, [r7, #12]
 3266 006a 1B68     		ldr	r3, [r3]
 3267 006c 1B68     		ldr	r3, [r3]
 3268 006e 3B61     		str	r3, [r7, #16]
 3269 0070 FB68     		ldr	r3, [r7, #12]
 3270 0072 1B68     		ldr	r3, [r3]
 3271 0074 5B68     		ldr	r3, [r3, #4]
 3272 0076 3B61     		str	r3, [r7, #16]
 3273 0078 3B69     		ldr	r3, [r7, #16]
 3274              	.LBE4:
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3275              		.loc 1 1772 9
 3276 007a FB68     		ldr	r3, [r7, #12]
 3277 007c 1B68     		ldr	r3, [r3]
 3278 007e DA68     		ldr	r2, [r3, #12]
 3279 0080 FB68     		ldr	r3, [r7, #12]
 3280 0082 1B68     		ldr	r3, [r3]
 3281 0084 42F01002 		orr	r2, r2, #16
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 89


 3282 0088 DA60     		str	r2, [r3, #12]
 3283 008a 01E0     		b	.L197
 3284              	.L198:
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            (Overrun error for instance).
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status = HAL_ERROR;
 3285              		.loc 1 1780 16
 3286 008c 0123     		movs	r3, #1
 3287 008e FB75     		strb	r3, [r7, #23]
 3288              	.L197:
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return status;
 3289              		.loc 1 1784 12
 3290 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3291 0092 00E0     		b	.L195
 3292              	.L192:
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 3293              		.loc 1 1788 12
 3294 0094 0223     		movs	r3, #2
 3295              	.L195:
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3296              		.loc 1 1790 1
 3297 0096 1846     		mov	r0, r3
 3298 0098 1837     		adds	r7, r7, #24
 3299              	.LCFI117:
 3300              		.cfi_def_cfa_offset 8
 3301 009a BD46     		mov	sp, r7
 3302              	.LCFI118:
 3303              		.cfi_def_cfa_register 13
 3304              		@ sp needed
 3305 009c 80BD     		pop	{r7, pc}
 3306              		.cfi_endproc
 3307              	.LFE86:
 3309              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 3310              		.align	1
 3311              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 3312              		.syntax unified
 3313              		.thumb
 3314              		.thumb_func
 3316              	HAL_UARTEx_ReceiveToIdle_DMA:
 3317              	.LFB87:
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 90


1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the parity bit (MSB position).
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart UART handle.
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3318              		.loc 1 1809 1
 3319              		.cfi_startproc
 3320              		@ args = 0, pretend = 0, frame = 24
 3321              		@ frame_needed = 1, uses_anonymous_args = 0
 3322 0000 80B5     		push	{r7, lr}
 3323              	.LCFI119:
 3324              		.cfi_def_cfa_offset 8
 3325              		.cfi_offset 7, -8
 3326              		.cfi_offset 14, -4
 3327 0002 86B0     		sub	sp, sp, #24
 3328              	.LCFI120:
 3329              		.cfi_def_cfa_offset 32
 3330 0004 00AF     		add	r7, sp, #0
 3331              	.LCFI121:
 3332              		.cfi_def_cfa_register 7
 3333 0006 F860     		str	r0, [r7, #12]
 3334 0008 B960     		str	r1, [r7, #8]
 3335 000a 1346     		mov	r3, r2
 3336 000c FB80     		strh	r3, [r7, #6]	@ movhi
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 3337              		.loc 1 1813 12
 3338 000e FB68     		ldr	r3, [r7, #12]
 3339 0010 93F83E30 		ldrb	r3, [r3, #62]
 3340 0014 DBB2     		uxtb	r3, r3
 3341              		.loc 1 1813 6
 3342 0016 202B     		cmp	r3, #32
 3343 0018 3CD1     		bne	.L200
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 3344              		.loc 1 1815 8
 3345 001a BB68     		ldr	r3, [r7, #8]
 3346 001c 002B     		cmp	r3, #0
 3347 001e 02D0     		beq	.L201
 3348              		.loc 1 1815 25 discriminator 1
 3349 0020 FB88     		ldrh	r3, [r7, #6]
 3350 0022 002B     		cmp	r3, #0
 3351 0024 01D1     		bne	.L202
 3352              	.L201:
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 91


 3353              		.loc 1 1817 14
 3354 0026 0123     		movs	r3, #1
 3355 0028 35E0     		b	.L203
 3356              	.L202:
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 3357              		.loc 1 1820 5
 3358 002a FB68     		ldr	r3, [r7, #12]
 3359 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 3360 0030 012B     		cmp	r3, #1
 3361 0032 01D1     		bne	.L204
 3362              		.loc 1 1820 5 is_stmt 0 discriminator 1
 3363 0034 0223     		movs	r3, #2
 3364 0036 2EE0     		b	.L203
 3365              	.L204:
 3366              		.loc 1 1820 5 discriminator 2
 3367 0038 FB68     		ldr	r3, [r7, #12]
 3368 003a 0122     		movs	r2, #1
 3369 003c 83F83C20 		strb	r2, [r3, #60]
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 3370              		.loc 1 1823 26 is_stmt 1 discriminator 2
 3371 0040 FB68     		ldr	r3, [r7, #12]
 3372 0042 0122     		movs	r2, #1
 3373 0044 1A63     		str	r2, [r3, #48]
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 3374              		.loc 1 1825 15 discriminator 2
 3375 0046 FB88     		ldrh	r3, [r7, #6]
 3376 0048 1A46     		mov	r2, r3
 3377 004a B968     		ldr	r1, [r7, #8]
 3378 004c F868     		ldr	r0, [r7, #12]
 3379 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 3380 0052 0346     		mov	r3, r0
 3381 0054 FB75     		strb	r3, [r7, #23]
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (status == HAL_OK)
 3382              		.loc 1 1828 8 discriminator 2
 3383 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3384 0058 002B     		cmp	r3, #0
 3385 005a 19D1     		bne	.L205
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3386              		.loc 1 1830 16
 3387 005c FB68     		ldr	r3, [r7, #12]
 3388 005e 1B6B     		ldr	r3, [r3, #48]
 3389              		.loc 1 1830 10
 3390 0060 012B     		cmp	r3, #1
 3391 0062 13D1     		bne	.L206
 3392              	.LBB5:
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 3393              		.loc 1 1832 9
 3394 0064 0023     		movs	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 92


 3395 0066 3B61     		str	r3, [r7, #16]
 3396 0068 FB68     		ldr	r3, [r7, #12]
 3397 006a 1B68     		ldr	r3, [r3]
 3398 006c 1B68     		ldr	r3, [r3]
 3399 006e 3B61     		str	r3, [r7, #16]
 3400 0070 FB68     		ldr	r3, [r7, #12]
 3401 0072 1B68     		ldr	r3, [r3]
 3402 0074 5B68     		ldr	r3, [r3, #4]
 3403 0076 3B61     		str	r3, [r7, #16]
 3404 0078 3B69     		ldr	r3, [r7, #16]
 3405              	.LBE5:
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3406              		.loc 1 1833 9
 3407 007a FB68     		ldr	r3, [r7, #12]
 3408 007c 1B68     		ldr	r3, [r3]
 3409 007e DA68     		ldr	r2, [r3, #12]
 3410 0080 FB68     		ldr	r3, [r7, #12]
 3411 0082 1B68     		ldr	r3, [r3]
 3412 0084 42F01002 		orr	r2, r2, #16
 3413 0088 DA60     		str	r2, [r3, #12]
 3414 008a 01E0     		b	.L205
 3415              	.L206:
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            (Overrun error for instance).
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status = HAL_ERROR;
 3416              		.loc 1 1841 16
 3417 008c 0123     		movs	r3, #1
 3418 008e FB75     		strb	r3, [r7, #23]
 3419              	.L205:
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return status;
 3420              		.loc 1 1845 12
 3421 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3422 0092 00E0     		b	.L203
 3423              	.L200:
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 3424              		.loc 1 1849 12
 3425 0094 0223     		movs	r3, #2
 3426              	.L203:
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3427              		.loc 1 1851 1
 3428 0096 1846     		mov	r0, r3
 3429 0098 1837     		adds	r7, r7, #24
 3430              	.LCFI122:
 3431              		.cfi_def_cfa_offset 8
 3432 009a BD46     		mov	sp, r7
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 93


 3433              	.LCFI123:
 3434              		.cfi_def_cfa_register 13
 3435              		@ sp needed
 3436 009c 80BD     		pop	{r7, pc}
 3437              		.cfi_endproc
 3438              	.LFE87:
 3440              		.section	.text.HAL_UART_Abort,"ax",%progbits
 3441              		.align	1
 3442              		.global	HAL_UART_Abort
 3443              		.syntax unified
 3444              		.thumb
 3445              		.thumb_func
 3447              	HAL_UART_Abort:
 3448              	.LFB88:
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3449              		.loc 1 1866 1
 3450              		.cfi_startproc
 3451              		@ args = 0, pretend = 0, frame = 8
 3452              		@ frame_needed = 1, uses_anonymous_args = 0
 3453 0000 80B5     		push	{r7, lr}
 3454              	.LCFI124:
 3455              		.cfi_def_cfa_offset 8
 3456              		.cfi_offset 7, -8
 3457              		.cfi_offset 14, -4
 3458 0002 82B0     		sub	sp, sp, #8
 3459              	.LCFI125:
 3460              		.cfi_def_cfa_offset 16
 3461 0004 00AF     		add	r7, sp, #0
 3462              	.LCFI126:
 3463              		.cfi_def_cfa_register 7
 3464 0006 7860     		str	r0, [r7, #4]
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 3465              		.loc 1 1868 3
 3466 0008 7B68     		ldr	r3, [r7, #4]
 3467 000a 1B68     		ldr	r3, [r3]
 3468 000c DA68     		ldr	r2, [r3, #12]
 3469 000e 7B68     		ldr	r3, [r7, #4]
 3470 0010 1B68     		ldr	r3, [r3]
 3471 0012 22F4F072 		bic	r2, r2, #480
 3472 0016 DA60     		str	r2, [r3, #12]
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3473              		.loc 1 1869 3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 94


 3474 0018 7B68     		ldr	r3, [r7, #4]
 3475 001a 1B68     		ldr	r3, [r3]
 3476 001c 5A69     		ldr	r2, [r3, #20]
 3477 001e 7B68     		ldr	r3, [r7, #4]
 3478 0020 1B68     		ldr	r3, [r3]
 3479 0022 22F00102 		bic	r2, r2, #1
 3480 0026 5A61     		str	r2, [r3, #20]
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3481              		.loc 1 1872 12
 3482 0028 7B68     		ldr	r3, [r7, #4]
 3483 002a 1B6B     		ldr	r3, [r3, #48]
 3484              		.loc 1 1872 6
 3485 002c 012B     		cmp	r3, #1
 3486 002e 07D1     		bne	.L208
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3487              		.loc 1 1874 5
 3488 0030 7B68     		ldr	r3, [r7, #4]
 3489 0032 1B68     		ldr	r3, [r3]
 3490 0034 DA68     		ldr	r2, [r3, #12]
 3491 0036 7B68     		ldr	r3, [r7, #4]
 3492 0038 1B68     		ldr	r3, [r3]
 3493 003a 22F01002 		bic	r2, r2, #16
 3494 003e DA60     		str	r2, [r3, #12]
 3495              	.L208:
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3496              		.loc 1 1878 7
 3497 0040 7B68     		ldr	r3, [r7, #4]
 3498 0042 1B68     		ldr	r3, [r3]
 3499 0044 5B69     		ldr	r3, [r3, #20]
 3500 0046 03F08003 		and	r3, r3, #128
 3501              		.loc 1 1878 6
 3502 004a 002B     		cmp	r3, #0
 3503 004c 24D0     		beq	.L209
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3504              		.loc 1 1880 5
 3505 004e 7B68     		ldr	r3, [r7, #4]
 3506 0050 1B68     		ldr	r3, [r3]
 3507 0052 5A69     		ldr	r2, [r3, #20]
 3508 0054 7B68     		ldr	r3, [r7, #4]
 3509 0056 1B68     		ldr	r3, [r3]
 3510 0058 22F08002 		bic	r2, r2, #128
 3511 005c 5A61     		str	r2, [r3, #20]
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3512              		.loc 1 1883 14
 3513 005e 7B68     		ldr	r3, [r7, #4]
 3514 0060 5B6B     		ldr	r3, [r3, #52]
 3515              		.loc 1 1883 8
 3516 0062 002B     		cmp	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 95


 3517 0064 18D0     		beq	.L209
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3518              		.loc 1 1887 12
 3519 0066 7B68     		ldr	r3, [r7, #4]
 3520 0068 5B6B     		ldr	r3, [r3, #52]
 3521              		.loc 1 1887 40
 3522 006a 0022     		movs	r2, #0
 3523 006c 5A63     		str	r2, [r3, #52]
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3524              		.loc 1 1889 11
 3525 006e 7B68     		ldr	r3, [r7, #4]
 3526 0070 5B6B     		ldr	r3, [r3, #52]
 3527 0072 1846     		mov	r0, r3
 3528 0074 FFF7FEFF 		bl	HAL_DMA_Abort
 3529 0078 0346     		mov	r3, r0
 3530              		.loc 1 1889 10
 3531 007a 002B     		cmp	r3, #0
 3532 007c 0CD0     		beq	.L209
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3533              		.loc 1 1891 13
 3534 007e 7B68     		ldr	r3, [r7, #4]
 3535 0080 5B6B     		ldr	r3, [r3, #52]
 3536 0082 1846     		mov	r0, r3
 3537 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 3538 0088 0346     		mov	r3, r0
 3539              		.loc 1 1891 12
 3540 008a 202B     		cmp	r3, #32
 3541 008c 04D1     		bne	.L209
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3542              		.loc 1 1894 28
 3543 008e 7B68     		ldr	r3, [r7, #4]
 3544 0090 1022     		movs	r2, #16
 3545 0092 1A64     		str	r2, [r3, #64]
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 3546              		.loc 1 1896 18
 3547 0094 0323     		movs	r3, #3
 3548 0096 40E0     		b	.L210
 3549              	.L209:
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3550              		.loc 1 1903 7
 3551 0098 7B68     		ldr	r3, [r7, #4]
 3552 009a 1B68     		ldr	r3, [r3]
 3553 009c 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 96


 3554 009e 03F04003 		and	r3, r3, #64
 3555              		.loc 1 1903 6
 3556 00a2 002B     		cmp	r3, #0
 3557 00a4 24D0     		beq	.L211
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3558              		.loc 1 1905 5
 3559 00a6 7B68     		ldr	r3, [r7, #4]
 3560 00a8 1B68     		ldr	r3, [r3]
 3561 00aa 5A69     		ldr	r2, [r3, #20]
 3562 00ac 7B68     		ldr	r3, [r7, #4]
 3563 00ae 1B68     		ldr	r3, [r3]
 3564 00b0 22F04002 		bic	r2, r2, #64
 3565 00b4 5A61     		str	r2, [r3, #20]
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3566              		.loc 1 1908 14
 3567 00b6 7B68     		ldr	r3, [r7, #4]
 3568 00b8 9B6B     		ldr	r3, [r3, #56]
 3569              		.loc 1 1908 8
 3570 00ba 002B     		cmp	r3, #0
 3571 00bc 18D0     		beq	.L211
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3572              		.loc 1 1912 12
 3573 00be 7B68     		ldr	r3, [r7, #4]
 3574 00c0 9B6B     		ldr	r3, [r3, #56]
 3575              		.loc 1 1912 40
 3576 00c2 0022     		movs	r2, #0
 3577 00c4 5A63     		str	r2, [r3, #52]
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3578              		.loc 1 1914 11
 3579 00c6 7B68     		ldr	r3, [r7, #4]
 3580 00c8 9B6B     		ldr	r3, [r3, #56]
 3581 00ca 1846     		mov	r0, r3
 3582 00cc FFF7FEFF 		bl	HAL_DMA_Abort
 3583 00d0 0346     		mov	r3, r0
 3584              		.loc 1 1914 10
 3585 00d2 002B     		cmp	r3, #0
 3586 00d4 0CD0     		beq	.L211
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3587              		.loc 1 1916 13
 3588 00d6 7B68     		ldr	r3, [r7, #4]
 3589 00d8 9B6B     		ldr	r3, [r3, #56]
 3590 00da 1846     		mov	r0, r3
 3591 00dc FFF7FEFF 		bl	HAL_DMA_GetError
 3592 00e0 0346     		mov	r3, r0
 3593              		.loc 1 1916 12
 3594 00e2 202B     		cmp	r3, #32
 3595 00e4 04D1     		bne	.L211
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 97


1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3596              		.loc 1 1919 28
 3597 00e6 7B68     		ldr	r3, [r7, #4]
 3598 00e8 1022     		movs	r2, #16
 3599 00ea 1A64     		str	r2, [r3, #64]
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 3600              		.loc 1 1921 18
 3601 00ec 0323     		movs	r3, #3
 3602 00ee 14E0     		b	.L210
 3603              	.L211:
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3604              		.loc 1 1928 22
 3605 00f0 7B68     		ldr	r3, [r7, #4]
 3606 00f2 0022     		movs	r2, #0
 3607 00f4 DA84     		strh	r2, [r3, #38]	@ movhi
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3608              		.loc 1 1929 22
 3609 00f6 7B68     		ldr	r3, [r7, #4]
 3610 00f8 0022     		movs	r2, #0
 3611 00fa DA85     		strh	r2, [r3, #46]	@ movhi
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3612              		.loc 1 1932 20
 3613 00fc 7B68     		ldr	r3, [r7, #4]
 3614 00fe 0022     		movs	r2, #0
 3615 0100 1A64     		str	r2, [r3, #64]
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3616              		.loc 1 1935 18
 3617 0102 7B68     		ldr	r3, [r7, #4]
 3618 0104 2022     		movs	r2, #32
 3619 0106 83F83E20 		strb	r2, [r3, #62]
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3620              		.loc 1 1936 17
 3621 010a 7B68     		ldr	r3, [r7, #4]
 3622 010c 2022     		movs	r2, #32
 3623 010e 83F83D20 		strb	r2, [r3, #61]
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3624              		.loc 1 1937 24
 3625 0112 7B68     		ldr	r3, [r7, #4]
 3626 0114 0022     		movs	r2, #0
 3627 0116 1A63     		str	r2, [r3, #48]
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 3628              		.loc 1 1939 10
 3629 0118 0023     		movs	r3, #0
 3630              	.L210:
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 98


 3631              		.loc 1 1940 1
 3632 011a 1846     		mov	r0, r3
 3633 011c 0837     		adds	r7, r7, #8
 3634              	.LCFI127:
 3635              		.cfi_def_cfa_offset 8
 3636 011e BD46     		mov	sp, r7
 3637              	.LCFI128:
 3638              		.cfi_def_cfa_register 13
 3639              		@ sp needed
 3640 0120 80BD     		pop	{r7, pc}
 3641              		.cfi_endproc
 3642              	.LFE88:
 3644              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3645              		.align	1
 3646              		.global	HAL_UART_AbortTransmit
 3647              		.syntax unified
 3648              		.thumb
 3649              		.thumb_func
 3651              	HAL_UART_AbortTransmit:
 3652              	.LFB89:
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3653              		.loc 1 1955 1
 3654              		.cfi_startproc
 3655              		@ args = 0, pretend = 0, frame = 8
 3656              		@ frame_needed = 1, uses_anonymous_args = 0
 3657 0000 80B5     		push	{r7, lr}
 3658              	.LCFI129:
 3659              		.cfi_def_cfa_offset 8
 3660              		.cfi_offset 7, -8
 3661              		.cfi_offset 14, -4
 3662 0002 82B0     		sub	sp, sp, #8
 3663              	.LCFI130:
 3664              		.cfi_def_cfa_offset 16
 3665 0004 00AF     		add	r7, sp, #0
 3666              	.LCFI131:
 3667              		.cfi_def_cfa_register 7
 3668 0006 7860     		str	r0, [r7, #4]
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3669              		.loc 1 1957 3
 3670 0008 7B68     		ldr	r3, [r7, #4]
 3671 000a 1B68     		ldr	r3, [r3]
 3672 000c DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 99


 3673 000e 7B68     		ldr	r3, [r7, #4]
 3674 0010 1B68     		ldr	r3, [r3]
 3675 0012 22F0C002 		bic	r2, r2, #192
 3676 0016 DA60     		str	r2, [r3, #12]
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3677              		.loc 1 1960 7
 3678 0018 7B68     		ldr	r3, [r7, #4]
 3679 001a 1B68     		ldr	r3, [r3]
 3680 001c 5B69     		ldr	r3, [r3, #20]
 3681 001e 03F08003 		and	r3, r3, #128
 3682              		.loc 1 1960 6
 3683 0022 002B     		cmp	r3, #0
 3684 0024 24D0     		beq	.L213
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3685              		.loc 1 1962 5
 3686 0026 7B68     		ldr	r3, [r7, #4]
 3687 0028 1B68     		ldr	r3, [r3]
 3688 002a 5A69     		ldr	r2, [r3, #20]
 3689 002c 7B68     		ldr	r3, [r7, #4]
 3690 002e 1B68     		ldr	r3, [r3]
 3691 0030 22F08002 		bic	r2, r2, #128
 3692 0034 5A61     		str	r2, [r3, #20]
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3693              		.loc 1 1965 14
 3694 0036 7B68     		ldr	r3, [r7, #4]
 3695 0038 5B6B     		ldr	r3, [r3, #52]
 3696              		.loc 1 1965 8
 3697 003a 002B     		cmp	r3, #0
 3698 003c 18D0     		beq	.L213
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3699              		.loc 1 1969 12
 3700 003e 7B68     		ldr	r3, [r7, #4]
 3701 0040 5B6B     		ldr	r3, [r3, #52]
 3702              		.loc 1 1969 40
 3703 0042 0022     		movs	r2, #0
 3704 0044 5A63     		str	r2, [r3, #52]
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3705              		.loc 1 1971 11
 3706 0046 7B68     		ldr	r3, [r7, #4]
 3707 0048 5B6B     		ldr	r3, [r3, #52]
 3708 004a 1846     		mov	r0, r3
 3709 004c FFF7FEFF 		bl	HAL_DMA_Abort
 3710 0050 0346     		mov	r3, r0
 3711              		.loc 1 1971 10
 3712 0052 002B     		cmp	r3, #0
 3713 0054 0CD0     		beq	.L213
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 100


 3714              		.loc 1 1973 13
 3715 0056 7B68     		ldr	r3, [r7, #4]
 3716 0058 5B6B     		ldr	r3, [r3, #52]
 3717 005a 1846     		mov	r0, r3
 3718 005c FFF7FEFF 		bl	HAL_DMA_GetError
 3719 0060 0346     		mov	r3, r0
 3720              		.loc 1 1973 12
 3721 0062 202B     		cmp	r3, #32
 3722 0064 04D1     		bne	.L213
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3723              		.loc 1 1976 28
 3724 0066 7B68     		ldr	r3, [r7, #4]
 3725 0068 1022     		movs	r2, #16
 3726 006a 1A64     		str	r2, [r3, #64]
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 3727              		.loc 1 1978 18
 3728 006c 0323     		movs	r3, #3
 3729 006e 07E0     		b	.L214
 3730              	.L213:
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3731              		.loc 1 1985 22
 3732 0070 7B68     		ldr	r3, [r7, #4]
 3733 0072 0022     		movs	r2, #0
 3734 0074 DA84     		strh	r2, [r3, #38]	@ movhi
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3735              		.loc 1 1988 17
 3736 0076 7B68     		ldr	r3, [r7, #4]
 3737 0078 2022     		movs	r2, #32
 3738 007a 83F83D20 		strb	r2, [r3, #61]
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 3739              		.loc 1 1990 10
 3740 007e 0023     		movs	r3, #0
 3741              	.L214:
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3742              		.loc 1 1991 1
 3743 0080 1846     		mov	r0, r3
 3744 0082 0837     		adds	r7, r7, #8
 3745              	.LCFI132:
 3746              		.cfi_def_cfa_offset 8
 3747 0084 BD46     		mov	sp, r7
 3748              	.LCFI133:
 3749              		.cfi_def_cfa_register 13
 3750              		@ sp needed
 3751 0086 80BD     		pop	{r7, pc}
 3752              		.cfi_endproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 101


 3753              	.LFE89:
 3755              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3756              		.align	1
 3757              		.global	HAL_UART_AbortReceive
 3758              		.syntax unified
 3759              		.thumb
 3760              		.thumb_func
 3762              	HAL_UART_AbortReceive:
 3763              	.LFB90:
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3764              		.loc 1 2006 1
 3765              		.cfi_startproc
 3766              		@ args = 0, pretend = 0, frame = 8
 3767              		@ frame_needed = 1, uses_anonymous_args = 0
 3768 0000 80B5     		push	{r7, lr}
 3769              	.LCFI134:
 3770              		.cfi_def_cfa_offset 8
 3771              		.cfi_offset 7, -8
 3772              		.cfi_offset 14, -4
 3773 0002 82B0     		sub	sp, sp, #8
 3774              	.LCFI135:
 3775              		.cfi_def_cfa_offset 16
 3776 0004 00AF     		add	r7, sp, #0
 3777              	.LCFI136:
 3778              		.cfi_def_cfa_register 7
 3779 0006 7860     		str	r0, [r7, #4]
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3780              		.loc 1 2008 3
 3781 0008 7B68     		ldr	r3, [r7, #4]
 3782 000a 1B68     		ldr	r3, [r3]
 3783 000c DA68     		ldr	r2, [r3, #12]
 3784 000e 7B68     		ldr	r3, [r7, #4]
 3785 0010 1B68     		ldr	r3, [r3]
 3786 0012 22F49072 		bic	r2, r2, #288
 3787 0016 DA60     		str	r2, [r3, #12]
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3788              		.loc 1 2009 3
 3789 0018 7B68     		ldr	r3, [r7, #4]
 3790 001a 1B68     		ldr	r3, [r3]
 3791 001c 5A69     		ldr	r2, [r3, #20]
 3792 001e 7B68     		ldr	r3, [r7, #4]
 3793 0020 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 102


 3794 0022 22F00102 		bic	r2, r2, #1
 3795 0026 5A61     		str	r2, [r3, #20]
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3796              		.loc 1 2012 12
 3797 0028 7B68     		ldr	r3, [r7, #4]
 3798 002a 1B6B     		ldr	r3, [r3, #48]
 3799              		.loc 1 2012 6
 3800 002c 012B     		cmp	r3, #1
 3801 002e 07D1     		bne	.L216
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3802              		.loc 1 2014 5
 3803 0030 7B68     		ldr	r3, [r7, #4]
 3804 0032 1B68     		ldr	r3, [r3]
 3805 0034 DA68     		ldr	r2, [r3, #12]
 3806 0036 7B68     		ldr	r3, [r7, #4]
 3807 0038 1B68     		ldr	r3, [r3]
 3808 003a 22F01002 		bic	r2, r2, #16
 3809 003e DA60     		str	r2, [r3, #12]
 3810              	.L216:
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3811              		.loc 1 2018 7
 3812 0040 7B68     		ldr	r3, [r7, #4]
 3813 0042 1B68     		ldr	r3, [r3]
 3814 0044 5B69     		ldr	r3, [r3, #20]
 3815 0046 03F04003 		and	r3, r3, #64
 3816              		.loc 1 2018 6
 3817 004a 002B     		cmp	r3, #0
 3818 004c 24D0     		beq	.L217
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3819              		.loc 1 2020 5
 3820 004e 7B68     		ldr	r3, [r7, #4]
 3821 0050 1B68     		ldr	r3, [r3]
 3822 0052 5A69     		ldr	r2, [r3, #20]
 3823 0054 7B68     		ldr	r3, [r7, #4]
 3824 0056 1B68     		ldr	r3, [r3]
 3825 0058 22F04002 		bic	r2, r2, #64
 3826 005c 5A61     		str	r2, [r3, #20]
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3827              		.loc 1 2023 14
 3828 005e 7B68     		ldr	r3, [r7, #4]
 3829 0060 9B6B     		ldr	r3, [r3, #56]
 3830              		.loc 1 2023 8
 3831 0062 002B     		cmp	r3, #0
 3832 0064 18D0     		beq	.L217
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 103


 3833              		.loc 1 2027 12
 3834 0066 7B68     		ldr	r3, [r7, #4]
 3835 0068 9B6B     		ldr	r3, [r3, #56]
 3836              		.loc 1 2027 40
 3837 006a 0022     		movs	r2, #0
 3838 006c 5A63     		str	r2, [r3, #52]
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3839              		.loc 1 2029 11
 3840 006e 7B68     		ldr	r3, [r7, #4]
 3841 0070 9B6B     		ldr	r3, [r3, #56]
 3842 0072 1846     		mov	r0, r3
 3843 0074 FFF7FEFF 		bl	HAL_DMA_Abort
 3844 0078 0346     		mov	r3, r0
 3845              		.loc 1 2029 10
 3846 007a 002B     		cmp	r3, #0
 3847 007c 0CD0     		beq	.L217
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3848              		.loc 1 2031 13
 3849 007e 7B68     		ldr	r3, [r7, #4]
 3850 0080 9B6B     		ldr	r3, [r3, #56]
 3851 0082 1846     		mov	r0, r3
 3852 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 3853 0088 0346     		mov	r3, r0
 3854              		.loc 1 2031 12
 3855 008a 202B     		cmp	r3, #32
 3856 008c 04D1     		bne	.L217
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3857              		.loc 1 2034 28
 3858 008e 7B68     		ldr	r3, [r7, #4]
 3859 0090 1022     		movs	r2, #16
 3860 0092 1A64     		str	r2, [r3, #64]
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 3861              		.loc 1 2036 18
 3862 0094 0323     		movs	r3, #3
 3863 0096 0AE0     		b	.L218
 3864              	.L217:
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Rx transfer counter */
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3865              		.loc 1 2043 22
 3866 0098 7B68     		ldr	r3, [r7, #4]
 3867 009a 0022     		movs	r2, #0
 3868 009c DA85     		strh	r2, [r3, #46]	@ movhi
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3869              		.loc 1 2046 18
 3870 009e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 104


 3871 00a0 2022     		movs	r2, #32
 3872 00a2 83F83E20 		strb	r2, [r3, #62]
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3873              		.loc 1 2047 24
 3874 00a6 7B68     		ldr	r3, [r7, #4]
 3875 00a8 0022     		movs	r2, #0
 3876 00aa 1A63     		str	r2, [r3, #48]
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 3877              		.loc 1 2049 10
 3878 00ac 0023     		movs	r3, #0
 3879              	.L218:
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3880              		.loc 1 2050 1
 3881 00ae 1846     		mov	r0, r3
 3882 00b0 0837     		adds	r7, r7, #8
 3883              	.LCFI137:
 3884              		.cfi_def_cfa_offset 8
 3885 00b2 BD46     		mov	sp, r7
 3886              	.LCFI138:
 3887              		.cfi_def_cfa_register 13
 3888              		@ sp needed
 3889 00b4 80BD     		pop	{r7, pc}
 3890              		.cfi_endproc
 3891              	.LFE90:
 3893              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3894              		.align	1
 3895              		.global	HAL_UART_Abort_IT
 3896              		.syntax unified
 3897              		.thumb
 3898              		.thumb_func
 3900              	HAL_UART_Abort_IT:
 3901              	.LFB91:
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3902              		.loc 1 2067 1
 3903              		.cfi_startproc
 3904              		@ args = 0, pretend = 0, frame = 16
 3905              		@ frame_needed = 1, uses_anonymous_args = 0
 3906 0000 80B5     		push	{r7, lr}
 3907              	.LCFI139:
 3908              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 105


 3909              		.cfi_offset 7, -8
 3910              		.cfi_offset 14, -4
 3911 0002 84B0     		sub	sp, sp, #16
 3912              	.LCFI140:
 3913              		.cfi_def_cfa_offset 24
 3914 0004 00AF     		add	r7, sp, #0
 3915              	.LCFI141:
 3916              		.cfi_def_cfa_register 7
 3917 0006 7860     		str	r0, [r7, #4]
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3918              		.loc 1 2068 12
 3919 0008 0123     		movs	r3, #1
 3920 000a FB60     		str	r3, [r7, #12]
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 3921              		.loc 1 2071 3
 3922 000c 7B68     		ldr	r3, [r7, #4]
 3923 000e 1B68     		ldr	r3, [r3]
 3924 0010 DA68     		ldr	r2, [r3, #12]
 3925 0012 7B68     		ldr	r3, [r7, #4]
 3926 0014 1B68     		ldr	r3, [r3]
 3927 0016 22F4F072 		bic	r2, r2, #480
 3928 001a DA60     		str	r2, [r3, #12]
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3929              		.loc 1 2072 3
 3930 001c 7B68     		ldr	r3, [r7, #4]
 3931 001e 1B68     		ldr	r3, [r3]
 3932 0020 5A69     		ldr	r2, [r3, #20]
 3933 0022 7B68     		ldr	r3, [r7, #4]
 3934 0024 1B68     		ldr	r3, [r3]
 3935 0026 22F00102 		bic	r2, r2, #1
 3936 002a 5A61     		str	r2, [r3, #20]
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3937              		.loc 1 2075 12
 3938 002c 7B68     		ldr	r3, [r7, #4]
 3939 002e 1B6B     		ldr	r3, [r3, #48]
 3940              		.loc 1 2075 6
 3941 0030 012B     		cmp	r3, #1
 3942 0032 07D1     		bne	.L220
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3943              		.loc 1 2077 5
 3944 0034 7B68     		ldr	r3, [r7, #4]
 3945 0036 1B68     		ldr	r3, [r3]
 3946 0038 DA68     		ldr	r2, [r3, #12]
 3947 003a 7B68     		ldr	r3, [r7, #4]
 3948 003c 1B68     		ldr	r3, [r3]
 3949 003e 22F01002 		bic	r2, r2, #16
 3950 0042 DA60     		str	r2, [r3, #12]
 3951              	.L220:
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      before any call to DMA Abort functions */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 106


2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 3952              		.loc 1 2083 12
 3953 0044 7B68     		ldr	r3, [r7, #4]
 3954 0046 5B6B     		ldr	r3, [r3, #52]
 3955              		.loc 1 2083 6
 3956 0048 002B     		cmp	r3, #0
 3957 004a 0FD0     		beq	.L221
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3958              		.loc 1 2087 9
 3959 004c 7B68     		ldr	r3, [r7, #4]
 3960 004e 1B68     		ldr	r3, [r3]
 3961 0050 5B69     		ldr	r3, [r3, #20]
 3962 0052 03F08003 		and	r3, r3, #128
 3963              		.loc 1 2087 8
 3964 0056 002B     		cmp	r3, #0
 3965 0058 04D0     		beq	.L222
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 3966              		.loc 1 2089 12
 3967 005a 7B68     		ldr	r3, [r7, #4]
 3968 005c 5B6B     		ldr	r3, [r3, #52]
 3969              		.loc 1 2089 40
 3970 005e 404A     		ldr	r2, .L231
 3971 0060 5A63     		str	r2, [r3, #52]
 3972 0062 03E0     		b	.L221
 3973              	.L222:
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3974              		.loc 1 2093 12
 3975 0064 7B68     		ldr	r3, [r7, #4]
 3976 0066 5B6B     		ldr	r3, [r3, #52]
 3977              		.loc 1 2093 40
 3978 0068 0022     		movs	r2, #0
 3979 006a 5A63     		str	r2, [r3, #52]
 3980              	.L221:
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 3981              		.loc 1 2097 12
 3982 006c 7B68     		ldr	r3, [r7, #4]
 3983 006e 9B6B     		ldr	r3, [r3, #56]
 3984              		.loc 1 2097 6
 3985 0070 002B     		cmp	r3, #0
 3986 0072 0FD0     		beq	.L223
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3987              		.loc 1 2101 9
 3988 0074 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 107


 3989 0076 1B68     		ldr	r3, [r3]
 3990 0078 5B69     		ldr	r3, [r3, #20]
 3991 007a 03F04003 		and	r3, r3, #64
 3992              		.loc 1 2101 8
 3993 007e 002B     		cmp	r3, #0
 3994 0080 04D0     		beq	.L224
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 3995              		.loc 1 2103 12
 3996 0082 7B68     		ldr	r3, [r7, #4]
 3997 0084 9B6B     		ldr	r3, [r3, #56]
 3998              		.loc 1 2103 40
 3999 0086 374A     		ldr	r2, .L231+4
 4000 0088 5A63     		str	r2, [r3, #52]
 4001 008a 03E0     		b	.L223
 4002              	.L224:
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4003              		.loc 1 2107 12
 4004 008c 7B68     		ldr	r3, [r7, #4]
 4005 008e 9B6B     		ldr	r3, [r3, #56]
 4006              		.loc 1 2107 40
 4007 0090 0022     		movs	r2, #0
 4008 0092 5A63     		str	r2, [r3, #52]
 4009              	.L223:
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4010              		.loc 1 2112 7
 4011 0094 7B68     		ldr	r3, [r7, #4]
 4012 0096 1B68     		ldr	r3, [r3]
 4013 0098 5B69     		ldr	r3, [r3, #20]
 4014 009a 03F08003 		and	r3, r3, #128
 4015              		.loc 1 2112 6
 4016 009e 002B     		cmp	r3, #0
 4017 00a0 1AD0     		beq	.L225
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4018              		.loc 1 2115 5
 4019 00a2 7B68     		ldr	r3, [r7, #4]
 4020 00a4 1B68     		ldr	r3, [r3]
 4021 00a6 5A69     		ldr	r2, [r3, #20]
 4022 00a8 7B68     		ldr	r3, [r7, #4]
 4023 00aa 1B68     		ldr	r3, [r3]
 4024 00ac 22F08002 		bic	r2, r2, #128
 4025 00b0 5A61     		str	r2, [r3, #20]
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4026              		.loc 1 2118 14
 4027 00b2 7B68     		ldr	r3, [r7, #4]
 4028 00b4 5B6B     		ldr	r3, [r3, #52]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 108


 4029              		.loc 1 2118 8
 4030 00b6 002B     		cmp	r3, #0
 4031 00b8 0ED0     		beq	.L225
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4032              		.loc 1 2124 11
 4033 00ba 7B68     		ldr	r3, [r7, #4]
 4034 00bc 5B6B     		ldr	r3, [r3, #52]
 4035 00be 1846     		mov	r0, r3
 4036 00c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4037 00c4 0346     		mov	r3, r0
 4038              		.loc 1 2124 10
 4039 00c6 002B     		cmp	r3, #0
 4040 00c8 04D0     		beq	.L226
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4041              		.loc 1 2126 14
 4042 00ca 7B68     		ldr	r3, [r7, #4]
 4043 00cc 5B6B     		ldr	r3, [r3, #52]
 4044              		.loc 1 2126 42
 4045 00ce 0022     		movs	r2, #0
 4046 00d0 5A63     		str	r2, [r3, #52]
 4047 00d2 01E0     		b	.L225
 4048              	.L226:
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
 4049              		.loc 1 2130 19
 4050 00d4 0023     		movs	r3, #0
 4051 00d6 FB60     		str	r3, [r7, #12]
 4052              	.L225:
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4053              		.loc 1 2136 7
 4054 00d8 7B68     		ldr	r3, [r7, #4]
 4055 00da 1B68     		ldr	r3, [r3]
 4056 00dc 5B69     		ldr	r3, [r3, #20]
 4057 00de 03F04003 		and	r3, r3, #64
 4058              		.loc 1 2136 6
 4059 00e2 002B     		cmp	r3, #0
 4060 00e4 1CD0     		beq	.L227
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4061              		.loc 1 2138 5
 4062 00e6 7B68     		ldr	r3, [r7, #4]
 4063 00e8 1B68     		ldr	r3, [r3]
 4064 00ea 5A69     		ldr	r2, [r3, #20]
 4065 00ec 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 109


 4066 00ee 1B68     		ldr	r3, [r3]
 4067 00f0 22F04002 		bic	r2, r2, #64
 4068 00f4 5A61     		str	r2, [r3, #20]
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4069              		.loc 1 2141 14
 4070 00f6 7B68     		ldr	r3, [r7, #4]
 4071 00f8 9B6B     		ldr	r3, [r3, #56]
 4072              		.loc 1 2141 8
 4073 00fa 002B     		cmp	r3, #0
 4074 00fc 10D0     		beq	.L227
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4075              		.loc 1 2147 11
 4076 00fe 7B68     		ldr	r3, [r7, #4]
 4077 0100 9B6B     		ldr	r3, [r3, #56]
 4078 0102 1846     		mov	r0, r3
 4079 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4080 0108 0346     		mov	r3, r0
 4081              		.loc 1 2147 10
 4082 010a 002B     		cmp	r3, #0
 4083 010c 06D0     		beq	.L228
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4084              		.loc 1 2149 14
 4085 010e 7B68     		ldr	r3, [r7, #4]
 4086 0110 9B6B     		ldr	r3, [r3, #56]
 4087              		.loc 1 2149 42
 4088 0112 0022     		movs	r2, #0
 4089 0114 5A63     		str	r2, [r3, #52]
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
 4090              		.loc 1 2150 19
 4091 0116 0123     		movs	r3, #1
 4092 0118 FB60     		str	r3, [r7, #12]
 4093 011a 01E0     		b	.L227
 4094              	.L228:
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
 4095              		.loc 1 2154 19
 4096 011c 0023     		movs	r3, #0
 4097 011e FB60     		str	r3, [r7, #12]
 4098              	.L227:
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 4099              		.loc 1 2160 6
 4100 0120 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 110


 4101 0122 012B     		cmp	r3, #1
 4102 0124 17D1     		bne	.L229
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4103              		.loc 1 2163 24
 4104 0126 7B68     		ldr	r3, [r7, #4]
 4105 0128 0022     		movs	r2, #0
 4106 012a DA84     		strh	r2, [r3, #38]	@ movhi
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4107              		.loc 1 2164 24
 4108 012c 7B68     		ldr	r3, [r7, #4]
 4109 012e 0022     		movs	r2, #0
 4110 0130 DA85     		strh	r2, [r3, #46]	@ movhi
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset ErrorCode */
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4111              		.loc 1 2167 22
 4112 0132 7B68     		ldr	r3, [r7, #4]
 4113 0134 0022     		movs	r2, #0
 4114 0136 1A64     		str	r2, [r3, #64]
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4115              		.loc 1 2170 20
 4116 0138 7B68     		ldr	r3, [r7, #4]
 4117 013a 2022     		movs	r2, #32
 4118 013c 83F83D20 		strb	r2, [r3, #61]
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4119              		.loc 1 2171 20
 4120 0140 7B68     		ldr	r3, [r7, #4]
 4121 0142 2022     		movs	r2, #32
 4122 0144 83F83E20 		strb	r2, [r3, #62]
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4123              		.loc 1 2172 26
 4124 0148 7B68     		ldr	r3, [r7, #4]
 4125 014a 0022     		movs	r2, #0
 4126 014c 1A63     		str	r2, [r3, #48]
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort complete callback */
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
 4127              		.loc 1 2177 10
 4128 014e 7B68     		ldr	r3, [r7, #4]
 4129 0150 9B6D     		ldr	r3, [r3, #88]
 4130              		.loc 1 2177 5
 4131 0152 7868     		ldr	r0, [r7, #4]
 4132 0154 9847     		blx	r3
 4133              	.LVL5:
 4134              	.L229:
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 111


2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4135              		.loc 1 2184 10
 4136 0156 0023     		movs	r3, #0
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4137              		.loc 1 2185 1
 4138 0158 1846     		mov	r0, r3
 4139 015a 1037     		adds	r7, r7, #16
 4140              	.LCFI142:
 4141              		.cfi_def_cfa_offset 8
 4142 015c BD46     		mov	sp, r7
 4143              	.LCFI143:
 4144              		.cfi_def_cfa_register 13
 4145              		@ sp needed
 4146 015e 80BD     		pop	{r7, pc}
 4147              	.L232:
 4148              		.align	2
 4149              	.L231:
 4150 0160 00000000 		.word	UART_DMATxAbortCallback
 4151 0164 00000000 		.word	UART_DMARxAbortCallback
 4152              		.cfi_endproc
 4153              	.LFE91:
 4155              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4156              		.align	1
 4157              		.global	HAL_UART_AbortTransmit_IT
 4158              		.syntax unified
 4159              		.thumb
 4160              		.thumb_func
 4162              	HAL_UART_AbortTransmit_IT:
 4163              	.LFB92:
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4164              		.loc 1 2202 1
 4165              		.cfi_startproc
 4166              		@ args = 0, pretend = 0, frame = 8
 4167              		@ frame_needed = 1, uses_anonymous_args = 0
 4168 0000 80B5     		push	{r7, lr}
 4169              	.LCFI144:
 4170              		.cfi_def_cfa_offset 8
 4171              		.cfi_offset 7, -8
 4172              		.cfi_offset 14, -4
 4173 0002 82B0     		sub	sp, sp, #8
 4174              	.LCFI145:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 112


 4175              		.cfi_def_cfa_offset 16
 4176 0004 00AF     		add	r7, sp, #0
 4177              	.LCFI146:
 4178              		.cfi_def_cfa_register 7
 4179 0006 7860     		str	r0, [r7, #4]
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4180              		.loc 1 2204 3
 4181 0008 7B68     		ldr	r3, [r7, #4]
 4182 000a 1B68     		ldr	r3, [r3]
 4183 000c DA68     		ldr	r2, [r3, #12]
 4184 000e 7B68     		ldr	r3, [r7, #4]
 4185 0010 1B68     		ldr	r3, [r3]
 4186 0012 22F0C002 		bic	r2, r2, #192
 4187 0016 DA60     		str	r2, [r3, #12]
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4188              		.loc 1 2207 7
 4189 0018 7B68     		ldr	r3, [r7, #4]
 4190 001a 1B68     		ldr	r3, [r3]
 4191 001c 5B69     		ldr	r3, [r3, #20]
 4192 001e 03F08003 		and	r3, r3, #128
 4193              		.loc 1 2207 6
 4194 0022 002B     		cmp	r3, #0
 4195 0024 2BD0     		beq	.L234
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4196              		.loc 1 2209 5
 4197 0026 7B68     		ldr	r3, [r7, #4]
 4198 0028 1B68     		ldr	r3, [r3]
 4199 002a 5A69     		ldr	r2, [r3, #20]
 4200 002c 7B68     		ldr	r3, [r7, #4]
 4201 002e 1B68     		ldr	r3, [r3]
 4202 0030 22F08002 		bic	r2, r2, #128
 4203 0034 5A61     		str	r2, [r3, #20]
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4204              		.loc 1 2212 14
 4205 0036 7B68     		ldr	r3, [r7, #4]
 4206 0038 5B6B     		ldr	r3, [r3, #52]
 4207              		.loc 1 2212 8
 4208 003a 002B     		cmp	r3, #0
 4209 003c 13D0     		beq	.L235
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4210              		.loc 1 2216 12
 4211 003e 7B68     		ldr	r3, [r7, #4]
 4212 0040 5B6B     		ldr	r3, [r3, #52]
 4213              		.loc 1 2216 40
 4214 0042 174A     		ldr	r2, .L238
 4215 0044 5A63     		str	r2, [r3, #52]
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 113


2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4216              		.loc 1 2219 11
 4217 0046 7B68     		ldr	r3, [r7, #4]
 4218 0048 5B6B     		ldr	r3, [r3, #52]
 4219 004a 1846     		mov	r0, r3
 4220 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4221 0050 0346     		mov	r3, r0
 4222              		.loc 1 2219 10
 4223 0052 002B     		cmp	r3, #0
 4224 0054 1ED0     		beq	.L236
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4225              		.loc 1 2222 14
 4226 0056 7B68     		ldr	r3, [r7, #4]
 4227 0058 5B6B     		ldr	r3, [r3, #52]
 4228              		.loc 1 2222 22
 4229 005a 5B6B     		ldr	r3, [r3, #52]
 4230              		.loc 1 2222 47
 4231 005c 7A68     		ldr	r2, [r7, #4]
 4232 005e 526B     		ldr	r2, [r2, #52]
 4233              		.loc 1 2222 9
 4234 0060 1046     		mov	r0, r2
 4235 0062 9847     		blx	r3
 4236              	.LVL6:
 4237 0064 16E0     		b	.L236
 4238              	.L235:
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Tx transfer counter */
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 4239              		.loc 1 2228 26
 4240 0066 7B68     		ldr	r3, [r7, #4]
 4241 0068 0022     		movs	r2, #0
 4242 006a DA84     		strh	r2, [r3, #38]	@ movhi
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4243              		.loc 1 2231 21
 4244 006c 7B68     		ldr	r3, [r7, #4]
 4245 006e 2022     		movs	r2, #32
 4246 0070 83F83D20 		strb	r2, [r3, #61]
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
 4247              		.loc 1 2236 12
 4248 0074 7B68     		ldr	r3, [r7, #4]
 4249 0076 DB6D     		ldr	r3, [r3, #92]
 4250              		.loc 1 2236 7
 4251 0078 7868     		ldr	r0, [r7, #4]
 4252 007a 9847     		blx	r3
 4253              	.LVL7:
 4254 007c 0AE0     		b	.L236
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 114


 4255              	.L234:
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx transfer counter */
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4256              		.loc 1 2246 24
 4257 007e 7B68     		ldr	r3, [r7, #4]
 4258 0080 0022     		movs	r2, #0
 4259 0082 DA84     		strh	r2, [r3, #38]	@ movhi
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4260              		.loc 1 2249 19
 4261 0084 7B68     		ldr	r3, [r7, #4]
 4262 0086 2022     		movs	r2, #32
 4263 0088 83F83D20 		strb	r2, [r3, #61]
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
 4264              		.loc 1 2254 10
 4265 008c 7B68     		ldr	r3, [r7, #4]
 4266 008e DB6D     		ldr	r3, [r3, #92]
 4267              		.loc 1 2254 5
 4268 0090 7868     		ldr	r0, [r7, #4]
 4269 0092 9847     		blx	r3
 4270              	.LVL8:
 4271              	.L236:
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4272              		.loc 1 2261 10
 4273 0094 0023     		movs	r3, #0
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4274              		.loc 1 2262 1
 4275 0096 1846     		mov	r0, r3
 4276 0098 0837     		adds	r7, r7, #8
 4277              	.LCFI147:
 4278              		.cfi_def_cfa_offset 8
 4279 009a BD46     		mov	sp, r7
 4280              	.LCFI148:
 4281              		.cfi_def_cfa_register 13
 4282              		@ sp needed
 4283 009c 80BD     		pop	{r7, pc}
 4284              	.L239:
 4285 009e 00BF     		.align	2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 115


 4286              	.L238:
 4287 00a0 00000000 		.word	UART_DMATxOnlyAbortCallback
 4288              		.cfi_endproc
 4289              	.LFE92:
 4291              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4292              		.align	1
 4293              		.global	HAL_UART_AbortReceive_IT
 4294              		.syntax unified
 4295              		.thumb
 4296              		.thumb_func
 4298              	HAL_UART_AbortReceive_IT:
 4299              	.LFB93:
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4300              		.loc 1 2279 1
 4301              		.cfi_startproc
 4302              		@ args = 0, pretend = 0, frame = 8
 4303              		@ frame_needed = 1, uses_anonymous_args = 0
 4304 0000 80B5     		push	{r7, lr}
 4305              	.LCFI149:
 4306              		.cfi_def_cfa_offset 8
 4307              		.cfi_offset 7, -8
 4308              		.cfi_offset 14, -4
 4309 0002 82B0     		sub	sp, sp, #8
 4310              	.LCFI150:
 4311              		.cfi_def_cfa_offset 16
 4312 0004 00AF     		add	r7, sp, #0
 4313              	.LCFI151:
 4314              		.cfi_def_cfa_register 7
 4315 0006 7860     		str	r0, [r7, #4]
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4316              		.loc 1 2281 3
 4317 0008 7B68     		ldr	r3, [r7, #4]
 4318 000a 1B68     		ldr	r3, [r3]
 4319 000c DA68     		ldr	r2, [r3, #12]
 4320 000e 7B68     		ldr	r3, [r7, #4]
 4321 0010 1B68     		ldr	r3, [r3]
 4322 0012 22F49072 		bic	r2, r2, #288
 4323 0016 DA60     		str	r2, [r3, #12]
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4324              		.loc 1 2282 3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 116


 4325 0018 7B68     		ldr	r3, [r7, #4]
 4326 001a 1B68     		ldr	r3, [r3]
 4327 001c 5A69     		ldr	r2, [r3, #20]
 4328 001e 7B68     		ldr	r3, [r7, #4]
 4329 0020 1B68     		ldr	r3, [r3]
 4330 0022 22F00102 		bic	r2, r2, #1
 4331 0026 5A61     		str	r2, [r3, #20]
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4332              		.loc 1 2285 12
 4333 0028 7B68     		ldr	r3, [r7, #4]
 4334 002a 1B6B     		ldr	r3, [r3, #48]
 4335              		.loc 1 2285 6
 4336 002c 012B     		cmp	r3, #1
 4337 002e 07D1     		bne	.L241
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4338              		.loc 1 2287 5
 4339 0030 7B68     		ldr	r3, [r7, #4]
 4340 0032 1B68     		ldr	r3, [r3]
 4341 0034 DA68     		ldr	r2, [r3, #12]
 4342 0036 7B68     		ldr	r3, [r7, #4]
 4343 0038 1B68     		ldr	r3, [r3]
 4344 003a 22F01002 		bic	r2, r2, #16
 4345 003e DA60     		str	r2, [r3, #12]
 4346              	.L241:
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4347              		.loc 1 2291 7
 4348 0040 7B68     		ldr	r3, [r7, #4]
 4349 0042 1B68     		ldr	r3, [r3]
 4350 0044 5B69     		ldr	r3, [r3, #20]
 4351 0046 03F04003 		and	r3, r3, #64
 4352              		.loc 1 2291 6
 4353 004a 002B     		cmp	r3, #0
 4354 004c 2ED0     		beq	.L242
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4355              		.loc 1 2293 5
 4356 004e 7B68     		ldr	r3, [r7, #4]
 4357 0050 1B68     		ldr	r3, [r3]
 4358 0052 5A69     		ldr	r2, [r3, #20]
 4359 0054 7B68     		ldr	r3, [r7, #4]
 4360 0056 1B68     		ldr	r3, [r3]
 4361 0058 22F04002 		bic	r2, r2, #64
 4362 005c 5A61     		str	r2, [r3, #20]
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4363              		.loc 1 2296 14
 4364 005e 7B68     		ldr	r3, [r7, #4]
 4365 0060 9B6B     		ldr	r3, [r3, #56]
 4366              		.loc 1 2296 8
 4367 0062 002B     		cmp	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 117


 4368 0064 13D0     		beq	.L243
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 4369              		.loc 1 2300 12
 4370 0066 7B68     		ldr	r3, [r7, #4]
 4371 0068 9B6B     		ldr	r3, [r3, #56]
 4372              		.loc 1 2300 40
 4373 006a 1A4A     		ldr	r2, .L246
 4374 006c 5A63     		str	r2, [r3, #52]
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4375              		.loc 1 2303 11
 4376 006e 7B68     		ldr	r3, [r7, #4]
 4377 0070 9B6B     		ldr	r3, [r3, #56]
 4378 0072 1846     		mov	r0, r3
 4379 0074 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4380 0078 0346     		mov	r3, r0
 4381              		.loc 1 2303 10
 4382 007a 002B     		cmp	r3, #0
 4383 007c 24D0     		beq	.L244
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 4384              		.loc 1 2306 14
 4385 007e 7B68     		ldr	r3, [r7, #4]
 4386 0080 9B6B     		ldr	r3, [r3, #56]
 4387              		.loc 1 2306 22
 4388 0082 5B6B     		ldr	r3, [r3, #52]
 4389              		.loc 1 2306 47
 4390 0084 7A68     		ldr	r2, [r7, #4]
 4391 0086 926B     		ldr	r2, [r2, #56]
 4392              		.loc 1 2306 9
 4393 0088 1046     		mov	r0, r2
 4394 008a 9847     		blx	r3
 4395              	.LVL9:
 4396 008c 1CE0     		b	.L244
 4397              	.L243:
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Rx transfer counter */
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 4398              		.loc 1 2312 26
 4399 008e 7B68     		ldr	r3, [r7, #4]
 4400 0090 0022     		movs	r2, #0
 4401 0092 DA85     		strh	r2, [r3, #46]	@ movhi
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4402              		.loc 1 2315 22
 4403 0094 7B68     		ldr	r3, [r7, #4]
 4404 0096 2022     		movs	r2, #32
 4405 0098 83F83E20 		strb	r2, [r3, #62]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 118


2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4406              		.loc 1 2316 28
 4407 009c 7B68     		ldr	r3, [r7, #4]
 4408 009e 0022     		movs	r2, #0
 4409 00a0 1A63     		str	r2, [r3, #48]
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
 4410              		.loc 1 2321 12
 4411 00a2 7B68     		ldr	r3, [r7, #4]
 4412 00a4 1B6E     		ldr	r3, [r3, #96]
 4413              		.loc 1 2321 7
 4414 00a6 7868     		ldr	r0, [r7, #4]
 4415 00a8 9847     		blx	r3
 4416              	.LVL10:
 4417 00aa 0DE0     		b	.L244
 4418              	.L242:
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Rx transfer counter */
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4419              		.loc 1 2331 24
 4420 00ac 7B68     		ldr	r3, [r7, #4]
 4421 00ae 0022     		movs	r2, #0
 4422 00b0 DA85     		strh	r2, [r3, #46]	@ movhi
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4423              		.loc 1 2334 20
 4424 00b2 7B68     		ldr	r3, [r7, #4]
 4425 00b4 2022     		movs	r2, #32
 4426 00b6 83F83E20 		strb	r2, [r3, #62]
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4427              		.loc 1 2335 26
 4428 00ba 7B68     		ldr	r3, [r7, #4]
 4429 00bc 0022     		movs	r2, #0
 4430 00be 1A63     		str	r2, [r3, #48]
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
 4431              		.loc 1 2340 10
 4432 00c0 7B68     		ldr	r3, [r7, #4]
 4433 00c2 1B6E     		ldr	r3, [r3, #96]
 4434              		.loc 1 2340 5
 4435 00c4 7868     		ldr	r0, [r7, #4]
 4436 00c6 9847     		blx	r3
 4437              	.LVL11:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 119


 4438              	.L244:
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4439              		.loc 1 2347 10
 4440 00c8 0023     		movs	r3, #0
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4441              		.loc 1 2348 1
 4442 00ca 1846     		mov	r0, r3
 4443 00cc 0837     		adds	r7, r7, #8
 4444              	.LCFI152:
 4445              		.cfi_def_cfa_offset 8
 4446 00ce BD46     		mov	sp, r7
 4447              	.LCFI153:
 4448              		.cfi_def_cfa_register 13
 4449              		@ sp needed
 4450 00d0 80BD     		pop	{r7, pc}
 4451              	.L247:
 4452 00d2 00BF     		.align	2
 4453              	.L246:
 4454 00d4 00000000 		.word	UART_DMARxOnlyAbortCallback
 4455              		.cfi_endproc
 4456              	.LFE93:
 4458              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4459              		.align	1
 4460              		.global	HAL_UART_IRQHandler
 4461              		.syntax unified
 4462              		.thumb
 4463              		.thumb_func
 4465              	HAL_UART_IRQHandler:
 4466              	.LFB94:
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4467              		.loc 1 2357 1
 4468              		.cfi_startproc
 4469              		@ args = 0, pretend = 0, frame = 40
 4470              		@ frame_needed = 1, uses_anonymous_args = 0
 4471 0000 80B5     		push	{r7, lr}
 4472              	.LCFI154:
 4473              		.cfi_def_cfa_offset 8
 4474              		.cfi_offset 7, -8
 4475              		.cfi_offset 14, -4
 4476 0002 8AB0     		sub	sp, sp, #40
 4477              	.LCFI155:
 4478              		.cfi_def_cfa_offset 48
 4479 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 120


 4480              	.LCFI156:
 4481              		.cfi_def_cfa_register 7
 4482 0006 7860     		str	r0, [r7, #4]
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 4483              		.loc 1 2358 25
 4484 0008 7B68     		ldr	r3, [r7, #4]
 4485 000a 1B68     		ldr	r3, [r3]
 4486              		.loc 1 2358 12
 4487 000c 1B68     		ldr	r3, [r3]
 4488 000e 7B62     		str	r3, [r7, #36]
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4489              		.loc 1 2359 25
 4490 0010 7B68     		ldr	r3, [r7, #4]
 4491 0012 1B68     		ldr	r3, [r3]
 4492              		.loc 1 2359 12
 4493 0014 DB68     		ldr	r3, [r3, #12]
 4494 0016 3B62     		str	r3, [r7, #32]
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 4495              		.loc 1 2360 25
 4496 0018 7B68     		ldr	r3, [r7, #4]
 4497 001a 1B68     		ldr	r3, [r3]
 4498              		.loc 1 2360 12
 4499 001c 5B69     		ldr	r3, [r3, #20]
 4500 001e FB61     		str	r3, [r7, #28]
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 4501              		.loc 1 2361 12
 4502 0020 0023     		movs	r3, #0
 4503 0022 BB61     		str	r3, [r7, #24]
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 4504              		.loc 1 2362 12
 4505 0024 0023     		movs	r3, #0
 4506 0026 7B61     		str	r3, [r7, #20]
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If no error occurs */
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 4507              		.loc 1 2365 14
 4508 0028 7B6A     		ldr	r3, [r7, #36]
 4509 002a 03F00F03 		and	r3, r3, #15
 4510 002e BB61     		str	r3, [r7, #24]
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (errorflags == RESET)
 4511              		.loc 1 2366 6
 4512 0030 BB69     		ldr	r3, [r7, #24]
 4513 0032 002B     		cmp	r3, #0
 4514 0034 0DD1     		bne	.L249
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 4515              		.loc 1 2369 20
 4516 0036 7B6A     		ldr	r3, [r7, #36]
 4517 0038 03F02003 		and	r3, r3, #32
 4518              		.loc 1 2369 8
 4519 003c 002B     		cmp	r3, #0
 4520 003e 08D0     		beq	.L249
 4521              		.loc 1 2369 59 discriminator 1
 4522 0040 3B6A     		ldr	r3, [r7, #32]
 4523 0042 03F02003 		and	r3, r3, #32
 4524              		.loc 1 2369 47 discriminator 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 121


 4525 0046 002B     		cmp	r3, #0
 4526 0048 03D0     		beq	.L249
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       UART_Receive_IT(huart);
 4527              		.loc 1 2371 7
 4528 004a 7868     		ldr	r0, [r7, #4]
 4529 004c FFF7FEFF 		bl	UART_Receive_IT
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 4530              		.loc 1 2372 7
 4531 0050 80E1     		b	.L248
 4532              	.L249:
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If some errors occur */
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
 4533              		.loc 1 2377 6
 4534 0052 BB69     		ldr	r3, [r7, #24]
 4535 0054 002B     		cmp	r3, #0
 4536 0056 00F0B480 		beq	.L251
 4537              		.loc 1 2377 42 discriminator 1
 4538 005a FB69     		ldr	r3, [r7, #28]
 4539 005c 03F00103 		and	r3, r3, #1
 4540              		.loc 1 2377 29 discriminator 1
 4541 0060 002B     		cmp	r3, #0
 4542 0062 05D1     		bne	.L252
 4543              		.loc 1 2377 81 discriminator 2
 4544 0064 3B6A     		ldr	r3, [r7, #32]
 4545 0066 03F49073 		and	r3, r3, #288
 4546              		.loc 1 2377 69 discriminator 2
 4547 006a 002B     		cmp	r3, #0
 4548 006c 00F0A980 		beq	.L251
 4549              	.L252:
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 4550              		.loc 1 2380 20
 4551 0070 7B6A     		ldr	r3, [r7, #36]
 4552 0072 03F00103 		and	r3, r3, #1
 4553              		.loc 1 2380 8
 4554 0076 002B     		cmp	r3, #0
 4555 0078 0AD0     		beq	.L253
 4556              		.loc 1 2380 57 discriminator 1
 4557 007a 3B6A     		ldr	r3, [r7, #32]
 4558 007c 03F48073 		and	r3, r3, #256
 4559              		.loc 1 2380 45 discriminator 1
 4560 0080 002B     		cmp	r3, #0
 4561 0082 05D0     		beq	.L253
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 4562              		.loc 1 2382 24
 4563 0084 7B68     		ldr	r3, [r7, #4]
 4564 0086 1B6C     		ldr	r3, [r3, #64]
 4565 0088 43F00102 		orr	r2, r3, #1
 4566 008c 7B68     		ldr	r3, [r7, #4]
 4567 008e 1A64     		str	r2, [r3, #64]
 4568              	.L253:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 122


2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 4569              		.loc 1 2386 20
 4570 0090 7B6A     		ldr	r3, [r7, #36]
 4571 0092 03F00403 		and	r3, r3, #4
 4572              		.loc 1 2386 8
 4573 0096 002B     		cmp	r3, #0
 4574 0098 0AD0     		beq	.L254
 4575              		.loc 1 2386 57 discriminator 1
 4576 009a FB69     		ldr	r3, [r7, #28]
 4577 009c 03F00103 		and	r3, r3, #1
 4578              		.loc 1 2386 45 discriminator 1
 4579 00a0 002B     		cmp	r3, #0
 4580 00a2 05D0     		beq	.L254
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 4581              		.loc 1 2388 24
 4582 00a4 7B68     		ldr	r3, [r7, #4]
 4583 00a6 1B6C     		ldr	r3, [r3, #64]
 4584 00a8 43F00202 		orr	r2, r3, #2
 4585 00ac 7B68     		ldr	r3, [r7, #4]
 4586 00ae 1A64     		str	r2, [r3, #64]
 4587              	.L254:
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 4588              		.loc 1 2392 20
 4589 00b0 7B6A     		ldr	r3, [r7, #36]
 4590 00b2 03F00203 		and	r3, r3, #2
 4591              		.loc 1 2392 8
 4592 00b6 002B     		cmp	r3, #0
 4593 00b8 0AD0     		beq	.L255
 4594              		.loc 1 2392 57 discriminator 1
 4595 00ba FB69     		ldr	r3, [r7, #28]
 4596 00bc 03F00103 		and	r3, r3, #1
 4597              		.loc 1 2392 45 discriminator 1
 4598 00c0 002B     		cmp	r3, #0
 4599 00c2 05D0     		beq	.L255
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 4600              		.loc 1 2394 24
 4601 00c4 7B68     		ldr	r3, [r7, #4]
 4602 00c6 1B6C     		ldr	r3, [r3, #64]
 4603 00c8 43F00402 		orr	r2, r3, #4
 4604 00cc 7B68     		ldr	r3, [r7, #4]
 4605 00ce 1A64     		str	r2, [r3, #64]
 4606              	.L255:
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its
 4607              		.loc 1 2398 20
 4608 00d0 7B6A     		ldr	r3, [r7, #36]
 4609 00d2 03F00803 		and	r3, r3, #8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 123


 4610              		.loc 1 2398 8
 4611 00d6 002B     		cmp	r3, #0
 4612 00d8 0FD0     		beq	.L256
 4613              		.loc 1 2398 59 discriminator 1
 4614 00da 3B6A     		ldr	r3, [r7, #32]
 4615 00dc 03F02003 		and	r3, r3, #32
 4616              		.loc 1 2398 46 discriminator 1
 4617 00e0 002B     		cmp	r3, #0
 4618 00e2 04D1     		bne	.L257
 4619              		.loc 1 2398 101 discriminator 2
 4620 00e4 FB69     		ldr	r3, [r7, #28]
 4621 00e6 03F00103 		and	r3, r3, #1
 4622              		.loc 1 2398 89 discriminator 2
 4623 00ea 002B     		cmp	r3, #0
 4624 00ec 05D0     		beq	.L256
 4625              	.L257:
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 4626              		.loc 1 2400 24
 4627 00ee 7B68     		ldr	r3, [r7, #4]
 4628 00f0 1B6C     		ldr	r3, [r3, #64]
 4629 00f2 43F00802 		orr	r2, r3, #8
 4630 00f6 7B68     		ldr	r3, [r7, #4]
 4631 00f8 1A64     		str	r2, [r3, #64]
 4632              	.L256:
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 4633              		.loc 1 2404 14
 4634 00fa 7B68     		ldr	r3, [r7, #4]
 4635 00fc 1B6C     		ldr	r3, [r3, #64]
 4636              		.loc 1 2404 8
 4637 00fe 002B     		cmp	r3, #0
 4638 0100 00F02381 		beq	.L271
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 4639              		.loc 1 2407 22
 4640 0104 7B6A     		ldr	r3, [r7, #36]
 4641 0106 03F02003 		and	r3, r3, #32
 4642              		.loc 1 2407 10
 4643 010a 002B     		cmp	r3, #0
 4644 010c 07D0     		beq	.L259
 4645              		.loc 1 2407 61 discriminator 1
 4646 010e 3B6A     		ldr	r3, [r7, #32]
 4647 0110 03F02003 		and	r3, r3, #32
 4648              		.loc 1 2407 49 discriminator 1
 4649 0114 002B     		cmp	r3, #0
 4650 0116 02D0     		beq	.L259
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_Receive_IT(huart);
 4651              		.loc 1 2409 9
 4652 0118 7868     		ldr	r0, [r7, #4]
 4653 011a FFF7FEFF 		bl	UART_Receive_IT
 4654              	.L259:
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 124


2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          consider error as blocking */
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 4655              		.loc 1 2414 20
 4656 011e 7B68     		ldr	r3, [r7, #4]
 4657 0120 1B68     		ldr	r3, [r3]
 4658 0122 5B69     		ldr	r3, [r3, #20]
 4659 0124 03F04003 		and	r3, r3, #64
 4660 0128 002B     		cmp	r3, #0
 4661 012a 14BF     		ite	ne
 4662 012c 0123     		movne	r3, #1
 4663 012e 0023     		moveq	r3, #0
 4664 0130 DBB2     		uxtb	r3, r3
 4665              		.loc 1 2414 18
 4666 0132 7B61     		str	r3, [r7, #20]
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 4667              		.loc 1 2415 18
 4668 0134 7B68     		ldr	r3, [r7, #4]
 4669 0136 1B6C     		ldr	r3, [r3, #64]
 4670              		.loc 1 2415 30
 4671 0138 03F00803 		and	r3, r3, #8
 4672              		.loc 1 2415 10
 4673 013c 002B     		cmp	r3, #0
 4674 013e 02D1     		bne	.L260
 4675              		.loc 1 2415 62 discriminator 1
 4676 0140 7B69     		ldr	r3, [r7, #20]
 4677 0142 002B     		cmp	r3, #0
 4678 0144 33D0     		beq	.L261
 4679              	.L260:
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 4680              		.loc 1 2420 9
 4681 0146 7868     		ldr	r0, [r7, #4]
 4682 0148 FFF7FEFF 		bl	UART_EndRxTransfer
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4683              		.loc 1 2423 13
 4684 014c 7B68     		ldr	r3, [r7, #4]
 4685 014e 1B68     		ldr	r3, [r3]
 4686 0150 5B69     		ldr	r3, [r3, #20]
 4687 0152 03F04003 		and	r3, r3, #64
 4688              		.loc 1 2423 12
 4689 0156 002B     		cmp	r3, #0
 4690 0158 24D0     		beq	.L262
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4691              		.loc 1 2425 11
 4692 015a 7B68     		ldr	r3, [r7, #4]
 4693 015c 1B68     		ldr	r3, [r3]
 4694 015e 5A69     		ldr	r2, [r3, #20]
 4695 0160 7B68     		ldr	r3, [r7, #4]
 4696 0162 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 125


 4697 0164 22F04002 		bic	r2, r2, #64
 4698 0168 5A61     		str	r2, [r3, #20]
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 4699              		.loc 1 2428 20
 4700 016a 7B68     		ldr	r3, [r7, #4]
 4701 016c 9B6B     		ldr	r3, [r3, #56]
 4702              		.loc 1 2428 14
 4703 016e 002B     		cmp	r3, #0
 4704 0170 13D0     		beq	.L263
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 4705              		.loc 1 2432 18
 4706 0172 7B68     		ldr	r3, [r7, #4]
 4707 0174 9B6B     		ldr	r3, [r3, #56]
 4708              		.loc 1 2432 46
 4709 0176 794A     		ldr	r2, .L275
 4710 0178 5A63     		str	r2, [r3, #52]
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4711              		.loc 1 2433 17
 4712 017a 7B68     		ldr	r3, [r7, #4]
 4713 017c 9B6B     		ldr	r3, [r3, #56]
 4714 017e 1846     		mov	r0, r3
 4715 0180 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4716 0184 0346     		mov	r3, r0
 4717              		.loc 1 2433 16
 4718 0186 002B     		cmp	r3, #0
 4719 0188 19D0     		beq	.L272
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 4720              		.loc 1 2436 20
 4721 018a 7B68     		ldr	r3, [r7, #4]
 4722 018c 9B6B     		ldr	r3, [r3, #56]
 4723              		.loc 1 2436 28
 4724 018e 5B6B     		ldr	r3, [r3, #52]
 4725              		.loc 1 2436 53
 4726 0190 7A68     		ldr	r2, [r7, #4]
 4727 0192 926B     		ldr	r2, [r2, #56]
 4728              		.loc 1 2436 15
 4729 0194 1046     		mov	r0, r2
 4730 0196 9847     		blx	r3
 4731              	.LVL12:
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 4732              		.loc 1 2423 12
 4733 0198 11E0     		b	.L272
 4734              	.L263:
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           else
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Call user error callback */
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /*Call registered error callback*/
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 126


2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->ErrorCallback(huart);
 4735              		.loc 1 2444 18
 4736 019a 7B68     		ldr	r3, [r7, #4]
 4737 019c 5B6D     		ldr	r3, [r3, #84]
 4738              		.loc 1 2444 13
 4739 019e 7868     		ldr	r0, [r7, #4]
 4740 01a0 9847     		blx	r3
 4741              	.LVL13:
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 4742              		.loc 1 2423 12
 4743 01a2 0CE0     		b	.L272
 4744              	.L262:
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /*Call legacy weak error callback*/
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Call user error callback */
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /*Call registered error callback*/
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCallback(huart);
 4745              		.loc 1 2456 16
 4746 01a4 7B68     		ldr	r3, [r7, #4]
 4747 01a6 5B6D     		ldr	r3, [r3, #84]
 4748              		.loc 1 2456 11
 4749 01a8 7868     		ldr	r0, [r7, #4]
 4750 01aa 9847     		blx	r3
 4751              	.LVL14:
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 4752              		.loc 1 2423 12
 4753 01ac 07E0     		b	.L272
 4754              	.L261:
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /*Call legacy weak error callback*/
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error is notified to user through user error callback */
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered error callback*/
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback(huart);
 4755              		.loc 1 2469 14
 4756 01ae 7B68     		ldr	r3, [r7, #4]
 4757 01b0 5B6D     		ldr	r3, [r3, #84]
 4758              		.loc 1 2469 9
 4759 01b2 7868     		ldr	r0, [r7, #4]
 4760 01b4 9847     		blx	r3
 4761              	.LVL15:
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak error callback*/
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 127


2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 4762              		.loc 1 2475 26
 4763 01b6 7B68     		ldr	r3, [r7, #4]
 4764 01b8 0022     		movs	r2, #0
 4765 01ba 1A64     		str	r2, [r3, #64]
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 4766              		.loc 1 2478 5
 4767 01bc C5E0     		b	.L271
 4768              	.L272:
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 4769              		.loc 1 2423 12
 4770 01be 00BF     		nop
 4771              		.loc 1 2478 5
 4772 01c0 C3E0     		b	.L271
 4773              	.L251:
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (  (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4774              		.loc 1 2483 15
 4775 01c2 7B68     		ldr	r3, [r7, #4]
 4776 01c4 1B6B     		ldr	r3, [r3, #48]
 4777              		.loc 1 2483 6
 4778 01c6 012B     		cmp	r3, #1
 4779 01c8 40F0A380 		bne	.L265
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       &&((isrflags & USART_SR_IDLE) != 0U)
 4780              		.loc 1 2484 20
 4781 01cc 7B6A     		ldr	r3, [r7, #36]
 4782 01ce 03F01003 		and	r3, r3, #16
 4783              		.loc 1 2484 7
 4784 01d2 002B     		cmp	r3, #0
 4785 01d4 00F09D80 		beq	.L265
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       &&((cr1its & USART_SR_IDLE) != 0U))
 4786              		.loc 1 2485 18
 4787 01d8 3B6A     		ldr	r3, [r7, #32]
 4788 01da 03F01003 		and	r3, r3, #16
 4789              		.loc 1 2485 7
 4790 01de 002B     		cmp	r3, #0
 4791 01e0 00F09780 		beq	.L265
 4792              	.LBB6:
2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 4793              		.loc 1 2487 5
 4794 01e4 0023     		movs	r3, #0
 4795 01e6 FB60     		str	r3, [r7, #12]
 4796 01e8 7B68     		ldr	r3, [r7, #4]
 4797 01ea 1B68     		ldr	r3, [r3]
 4798 01ec 1B68     		ldr	r3, [r3]
 4799 01ee FB60     		str	r3, [r7, #12]
 4800 01f0 7B68     		ldr	r3, [r7, #4]
 4801 01f2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 128


 4802 01f4 5B68     		ldr	r3, [r3, #4]
 4803 01f6 FB60     		str	r3, [r7, #12]
 4804 01f8 FB68     		ldr	r3, [r7, #12]
 4805              	.LBE6:
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4806              		.loc 1 2490 9
 4807 01fa 7B68     		ldr	r3, [r7, #4]
 4808 01fc 1B68     		ldr	r3, [r3]
 4809 01fe 5B69     		ldr	r3, [r3, #20]
 4810 0200 03F04003 		and	r3, r3, #64
 4811              		.loc 1 2490 8
 4812 0204 002B     		cmp	r3, #0
 4813 0206 4FD0     		beq	.L266
 4814              	.LBB7:
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* DMA mode enabled */
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          (DMA cplt callback will be called).
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 4815              		.loc 1 2496 50
 4816 0208 7B68     		ldr	r3, [r7, #4]
 4817 020a 9B6B     		ldr	r3, [r3, #56]
 4818 020c 1B68     		ldr	r3, [r3]
 4819 020e 5B68     		ldr	r3, [r3, #4]
 4820              		.loc 1 2496 16
 4821 0210 3B82     		strh	r3, [r7, #16]	@ movhi
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (  (nb_remaining_rx_data > 0U)
 4822              		.loc 1 2497 10
 4823 0212 3B8A     		ldrh	r3, [r7, #16]
 4824 0214 002B     		cmp	r3, #0
 4825 0216 00F09A80 		beq	.L273
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           &&(nb_remaining_rx_data < huart->RxXferSize))
 4826              		.loc 1 2498 42
 4827 021a 7B68     		ldr	r3, [r7, #4]
 4828 021c 9B8D     		ldrh	r3, [r3, #44]
 4829              		.loc 1 2498 11
 4830 021e 3A8A     		ldrh	r2, [r7, #16]
 4831 0220 9A42     		cmp	r2, r3
 4832 0222 80F09480 		bcs	.L273
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Reception is not complete */
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 4833              		.loc 1 2501 28
 4834 0226 7B68     		ldr	r3, [r7, #4]
 4835 0228 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 4836 022a DA85     		strh	r2, [r3, #46]	@ movhi
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 4837              		.loc 1 2504 18
 4838 022c 7B68     		ldr	r3, [r7, #4]
 4839 022e 9B6B     		ldr	r3, [r3, #56]
 4840              		.loc 1 2504 32
 4841 0230 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 129


 4842              		.loc 1 2504 12
 4843 0232 202B     		cmp	r3, #32
 4844 0234 2BD0     		beq	.L268
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 4845              		.loc 1 2507 11
 4846 0236 7B68     		ldr	r3, [r7, #4]
 4847 0238 1B68     		ldr	r3, [r3]
 4848 023a DA68     		ldr	r2, [r3, #12]
 4849 023c 7B68     		ldr	r3, [r7, #4]
 4850 023e 1B68     		ldr	r3, [r3]
 4851 0240 22F48072 		bic	r2, r2, #256
 4852 0244 DA60     		str	r2, [r3, #12]
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4853              		.loc 1 2508 11
 4854 0246 7B68     		ldr	r3, [r7, #4]
 4855 0248 1B68     		ldr	r3, [r3]
 4856 024a 5A69     		ldr	r2, [r3, #20]
 4857 024c 7B68     		ldr	r3, [r7, #4]
 4858 024e 1B68     		ldr	r3, [r3]
 4859 0250 22F00102 		bic	r2, r2, #1
 4860 0254 5A61     		str	r2, [r3, #20]
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the UART CR3 register */
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4861              		.loc 1 2512 11
 4862 0256 7B68     		ldr	r3, [r7, #4]
 4863 0258 1B68     		ldr	r3, [r3]
 4864 025a 5A69     		ldr	r2, [r3, #20]
 4865 025c 7B68     		ldr	r3, [r7, #4]
 4866 025e 1B68     		ldr	r3, [r3]
 4867 0260 22F04002 		bic	r2, r2, #64
 4868 0264 5A61     		str	r2, [r3, #20]
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 4869              		.loc 1 2515 26
 4870 0266 7B68     		ldr	r3, [r7, #4]
 4871 0268 2022     		movs	r2, #32
 4872 026a 83F83E20 		strb	r2, [r3, #62]
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4873              		.loc 1 2516 32
 4874 026e 7B68     		ldr	r3, [r7, #4]
 4875 0270 0022     		movs	r2, #0
 4876 0272 1A63     		str	r2, [r3, #48]
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 4877              		.loc 1 2518 11
 4878 0274 7B68     		ldr	r3, [r7, #4]
 4879 0276 1B68     		ldr	r3, [r3]
 4880 0278 DA68     		ldr	r2, [r3, #12]
 4881 027a 7B68     		ldr	r3, [r7, #4]
 4882 027c 1B68     		ldr	r3, [r3]
 4883 027e 22F01002 		bic	r2, r2, #16
 4884 0282 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 130


2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 4885              		.loc 1 2521 17
 4886 0284 7B68     		ldr	r3, [r7, #4]
 4887 0286 9B6B     		ldr	r3, [r3, #56]
 4888 0288 1846     		mov	r0, r3
 4889 028a FFF7FEFF 		bl	HAL_DMA_Abort
 4890              	.L268:
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 4891              		.loc 1 2525 14
 4892 028e 7B68     		ldr	r3, [r7, #4]
 4893 0290 9B6E     		ldr	r3, [r3, #104]
 4894              		.loc 1 2525 45
 4895 0292 7A68     		ldr	r2, [r7, #4]
 4896 0294 918D     		ldrh	r1, [r2, #44]
 4897              		.loc 1 2525 65
 4898 0296 7A68     		ldr	r2, [r7, #4]
 4899 0298 D28D     		ldrh	r2, [r2, #46]	@ movhi
 4900 029a 92B2     		uxth	r2, r2
 4901              		.loc 1 2525 9
 4902 029c 8A1A     		subs	r2, r1, r2
 4903 029e 92B2     		uxth	r2, r2
 4904 02a0 1146     		mov	r1, r2
 4905 02a2 7868     		ldr	r0, [r7, #4]
 4906 02a4 9847     		blx	r3
 4907              	.LVL16:
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 4908              		.loc 1 2531 7
 4909 02a6 52E0     		b	.L273
 4910              	.L266:
 4911              	.LBE7:
 4912              	.LBB8:
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* DMA mode not enabled */
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 4913              		.loc 1 2538 34
 4914 02a8 7B68     		ldr	r3, [r7, #4]
 4915 02aa 9A8D     		ldrh	r2, [r3, #44]
 4916              		.loc 1 2538 54
 4917 02ac 7B68     		ldr	r3, [r7, #4]
 4918 02ae DB8D     		ldrh	r3, [r3, #46]	@ movhi
 4919 02b0 9BB2     		uxth	r3, r3
 4920              		.loc 1 2538 16
 4921 02b2 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 131


 4922 02b4 7B82     		strh	r3, [r7, #18]	@ movhi
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (  (huart->RxXferCount > 0U)
 4923              		.loc 1 2539 19
 4924 02b6 7B68     		ldr	r3, [r7, #4]
 4925 02b8 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 4926 02ba 9BB2     		uxth	r3, r3
 4927              		.loc 1 2539 10
 4928 02bc 002B     		cmp	r3, #0
 4929 02be 48D0     		beq	.L274
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           &&(nb_rx_data > 0U) )
 4930              		.loc 1 2540 11
 4931 02c0 7B8A     		ldrh	r3, [r7, #18]
 4932 02c2 002B     		cmp	r3, #0
 4933 02c4 45D0     		beq	.L274
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4934              		.loc 1 2543 9
 4935 02c6 7B68     		ldr	r3, [r7, #4]
 4936 02c8 1B68     		ldr	r3, [r3]
 4937 02ca DA68     		ldr	r2, [r3, #12]
 4938 02cc 7B68     		ldr	r3, [r7, #4]
 4939 02ce 1B68     		ldr	r3, [r3]
 4940 02d0 22F49072 		bic	r2, r2, #288
 4941 02d4 DA60     		str	r2, [r3, #12]
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4942              		.loc 1 2546 9
 4943 02d6 7B68     		ldr	r3, [r7, #4]
 4944 02d8 1B68     		ldr	r3, [r3]
 4945 02da 5A69     		ldr	r2, [r3, #20]
 4946 02dc 7B68     		ldr	r3, [r7, #4]
 4947 02de 1B68     		ldr	r3, [r3]
 4948 02e0 22F00102 		bic	r2, r2, #1
 4949 02e4 5A61     		str	r2, [r3, #20]
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4950              		.loc 1 2549 24
 4951 02e6 7B68     		ldr	r3, [r7, #4]
 4952 02e8 2022     		movs	r2, #32
 4953 02ea 83F83E20 		strb	r2, [r3, #62]
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4954              		.loc 1 2550 30
 4955 02ee 7B68     		ldr	r3, [r7, #4]
 4956 02f0 0022     		movs	r2, #0
 4957 02f2 1A63     		str	r2, [r3, #48]
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 4958              		.loc 1 2552 9
 4959 02f4 7B68     		ldr	r3, [r7, #4]
 4960 02f6 1B68     		ldr	r3, [r3]
 4961 02f8 DA68     		ldr	r2, [r3, #12]
 4962 02fa 7B68     		ldr	r3, [r7, #4]
 4963 02fc 1B68     		ldr	r3, [r3]
 4964 02fe 22F01002 		bic	r2, r2, #16
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 132


 4965 0302 DA60     		str	r2, [r3, #12]
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
 4966              		.loc 1 2555 14
 4967 0304 7B68     		ldr	r3, [r7, #4]
 4968 0306 9B6E     		ldr	r3, [r3, #104]
 4969              		.loc 1 2555 9
 4970 0308 7A8A     		ldrh	r2, [r7, #18]
 4971 030a 1146     		mov	r1, r2
 4972 030c 7868     		ldr	r0, [r7, #4]
 4973 030e 9847     		blx	r3
 4974              	.LVL17:
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 4975              		.loc 1 2561 7
 4976 0310 1FE0     		b	.L274
 4977              	.L265:
 4978              	.LBE8:
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 4979              		.loc 1 2566 18
 4980 0312 7B6A     		ldr	r3, [r7, #36]
 4981 0314 03F08003 		and	r3, r3, #128
 4982              		.loc 1 2566 6
 4983 0318 002B     		cmp	r3, #0
 4984 031a 08D0     		beq	.L270
 4985              		.loc 1 2566 56 discriminator 1
 4986 031c 3B6A     		ldr	r3, [r7, #32]
 4987 031e 03F08003 		and	r3, r3, #128
 4988              		.loc 1 2566 44 discriminator 1
 4989 0322 002B     		cmp	r3, #0
 4990 0324 03D0     		beq	.L270
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
 4991              		.loc 1 2568 5
 4992 0326 7868     		ldr	r0, [r7, #4]
 4993 0328 FFF7FEFF 		bl	UART_Transmit_IT
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 4994              		.loc 1 2569 5
 4995 032c 12E0     		b	.L248
 4996              	.L270:
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 4997              		.loc 1 2573 18
 4998 032e 7B6A     		ldr	r3, [r7, #36]
 4999 0330 03F04003 		and	r3, r3, #64
 5000              		.loc 1 2573 6
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 133


 5001 0334 002B     		cmp	r3, #0
 5002 0336 0DD0     		beq	.L248
 5003              		.loc 1 2573 55 discriminator 1
 5004 0338 3B6A     		ldr	r3, [r7, #32]
 5005 033a 03F04003 		and	r3, r3, #64
 5006              		.loc 1 2573 43 discriminator 1
 5007 033e 002B     		cmp	r3, #0
 5008 0340 08D0     		beq	.L248
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 5009              		.loc 1 2575 5
 5010 0342 7868     		ldr	r0, [r7, #4]
 5011 0344 FFF7FEFF 		bl	UART_EndTransmit_IT
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 5012              		.loc 1 2576 5
 5013 0348 04E0     		b	.L248
 5014              	.L271:
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
 5015              		.loc 1 2478 5
 5016 034a 00BF     		nop
 5017 034c 02E0     		b	.L248
 5018              	.L273:
 5019              	.LBB9:
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5020              		.loc 1 2531 7
 5021 034e 00BF     		nop
 5022 0350 00E0     		b	.L248
 5023              	.L274:
 5024              	.LBE9:
 5025              	.LBB10:
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5026              		.loc 1 2561 7
 5027 0352 00BF     		nop
 5028              	.L248:
 5029              	.LBE10:
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5030              		.loc 1 2578 1
 5031 0354 2837     		adds	r7, r7, #40
 5032              	.LCFI157:
 5033              		.cfi_def_cfa_offset 8
 5034 0356 BD46     		mov	sp, r7
 5035              	.LCFI158:
 5036              		.cfi_def_cfa_register 13
 5037              		@ sp needed
 5038 0358 80BD     		pop	{r7, pc}
 5039              	.L276:
 5040 035a 00BF     		.align	2
 5041              	.L275:
 5042 035c 00000000 		.word	UART_DMAAbortOnError
 5043              		.cfi_endproc
 5044              	.LFE94:
 5046              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 5047              		.align	1
 5048              		.weak	HAL_UART_TxCpltCallback
 5049              		.syntax unified
 5050              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 134


 5051              		.thumb_func
 5053              	HAL_UART_TxCpltCallback:
 5054              	.LFB95:
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5055              		.loc 1 2587 1
 5056              		.cfi_startproc
 5057              		@ args = 0, pretend = 0, frame = 8
 5058              		@ frame_needed = 1, uses_anonymous_args = 0
 5059              		@ link register save eliminated.
 5060 0000 80B4     		push	{r7}
 5061              	.LCFI159:
 5062              		.cfi_def_cfa_offset 4
 5063              		.cfi_offset 7, -4
 5064 0002 83B0     		sub	sp, sp, #12
 5065              	.LCFI160:
 5066              		.cfi_def_cfa_offset 16
 5067 0004 00AF     		add	r7, sp, #0
 5068              	.LCFI161:
 5069              		.cfi_def_cfa_register 7
 5070 0006 7860     		str	r0, [r7, #4]
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5071              		.loc 1 2593 1
 5072 0008 00BF     		nop
 5073 000a 0C37     		adds	r7, r7, #12
 5074              	.LCFI162:
 5075              		.cfi_def_cfa_offset 4
 5076 000c BD46     		mov	sp, r7
 5077              	.LCFI163:
 5078              		.cfi_def_cfa_register 13
 5079              		@ sp needed
 5080 000e 80BC     		pop	{r7}
 5081              	.LCFI164:
 5082              		.cfi_restore 7
 5083              		.cfi_def_cfa_offset 0
 5084 0010 7047     		bx	lr
 5085              		.cfi_endproc
 5086              	.LFE95:
 5088              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 5089              		.align	1
 5090              		.weak	HAL_UART_TxHalfCpltCallback
 5091              		.syntax unified
 5092              		.thumb
 5093              		.thumb_func
 5095              	HAL_UART_TxHalfCpltCallback:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 135


 5096              	.LFB96:
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5097              		.loc 1 2602 1
 5098              		.cfi_startproc
 5099              		@ args = 0, pretend = 0, frame = 8
 5100              		@ frame_needed = 1, uses_anonymous_args = 0
 5101              		@ link register save eliminated.
 5102 0000 80B4     		push	{r7}
 5103              	.LCFI165:
 5104              		.cfi_def_cfa_offset 4
 5105              		.cfi_offset 7, -4
 5106 0002 83B0     		sub	sp, sp, #12
 5107              	.LCFI166:
 5108              		.cfi_def_cfa_offset 16
 5109 0004 00AF     		add	r7, sp, #0
 5110              	.LCFI167:
 5111              		.cfi_def_cfa_register 7
 5112 0006 7860     		str	r0, [r7, #4]
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5113              		.loc 1 2608 1
 5114 0008 00BF     		nop
 5115 000a 0C37     		adds	r7, r7, #12
 5116              	.LCFI168:
 5117              		.cfi_def_cfa_offset 4
 5118 000c BD46     		mov	sp, r7
 5119              	.LCFI169:
 5120              		.cfi_def_cfa_register 13
 5121              		@ sp needed
 5122 000e 80BC     		pop	{r7}
 5123              	.LCFI170:
 5124              		.cfi_restore 7
 5125              		.cfi_def_cfa_offset 0
 5126 0010 7047     		bx	lr
 5127              		.cfi_endproc
 5128              	.LFE96:
 5130              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 5131              		.align	1
 5132              		.weak	HAL_UART_RxCpltCallback
 5133              		.syntax unified
 5134              		.thumb
 5135              		.thumb_func
 5137              	HAL_UART_RxCpltCallback:
 5138              	.LFB97:
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 136


2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5139              		.loc 1 2617 1
 5140              		.cfi_startproc
 5141              		@ args = 0, pretend = 0, frame = 8
 5142              		@ frame_needed = 1, uses_anonymous_args = 0
 5143              		@ link register save eliminated.
 5144 0000 80B4     		push	{r7}
 5145              	.LCFI171:
 5146              		.cfi_def_cfa_offset 4
 5147              		.cfi_offset 7, -4
 5148 0002 83B0     		sub	sp, sp, #12
 5149              	.LCFI172:
 5150              		.cfi_def_cfa_offset 16
 5151 0004 00AF     		add	r7, sp, #0
 5152              	.LCFI173:
 5153              		.cfi_def_cfa_register 7
 5154 0006 7860     		str	r0, [r7, #4]
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5155              		.loc 1 2623 1
 5156 0008 00BF     		nop
 5157 000a 0C37     		adds	r7, r7, #12
 5158              	.LCFI174:
 5159              		.cfi_def_cfa_offset 4
 5160 000c BD46     		mov	sp, r7
 5161              	.LCFI175:
 5162              		.cfi_def_cfa_register 13
 5163              		@ sp needed
 5164 000e 80BC     		pop	{r7}
 5165              	.LCFI176:
 5166              		.cfi_restore 7
 5167              		.cfi_def_cfa_offset 0
 5168 0010 7047     		bx	lr
 5169              		.cfi_endproc
 5170              	.LFE97:
 5172              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 5173              		.align	1
 5174              		.weak	HAL_UART_RxHalfCpltCallback
 5175              		.syntax unified
 5176              		.thumb
 5177              		.thumb_func
 5179              	HAL_UART_RxHalfCpltCallback:
 5180              	.LFB98:
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 137


2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5181              		.loc 1 2632 1
 5182              		.cfi_startproc
 5183              		@ args = 0, pretend = 0, frame = 8
 5184              		@ frame_needed = 1, uses_anonymous_args = 0
 5185              		@ link register save eliminated.
 5186 0000 80B4     		push	{r7}
 5187              	.LCFI177:
 5188              		.cfi_def_cfa_offset 4
 5189              		.cfi_offset 7, -4
 5190 0002 83B0     		sub	sp, sp, #12
 5191              	.LCFI178:
 5192              		.cfi_def_cfa_offset 16
 5193 0004 00AF     		add	r7, sp, #0
 5194              	.LCFI179:
 5195              		.cfi_def_cfa_register 7
 5196 0006 7860     		str	r0, [r7, #4]
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5197              		.loc 1 2638 1
 5198 0008 00BF     		nop
 5199 000a 0C37     		adds	r7, r7, #12
 5200              	.LCFI180:
 5201              		.cfi_def_cfa_offset 4
 5202 000c BD46     		mov	sp, r7
 5203              	.LCFI181:
 5204              		.cfi_def_cfa_register 13
 5205              		@ sp needed
 5206 000e 80BC     		pop	{r7}
 5207              	.LCFI182:
 5208              		.cfi_restore 7
 5209              		.cfi_def_cfa_offset 0
 5210 0010 7047     		bx	lr
 5211              		.cfi_endproc
 5212              	.LFE98:
 5214              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 5215              		.align	1
 5216              		.weak	HAL_UART_ErrorCallback
 5217              		.syntax unified
 5218              		.thumb
 5219              		.thumb_func
 5221              	HAL_UART_ErrorCallback:
 5222              	.LFB99:
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 138


2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5223              		.loc 1 2647 1
 5224              		.cfi_startproc
 5225              		@ args = 0, pretend = 0, frame = 8
 5226              		@ frame_needed = 1, uses_anonymous_args = 0
 5227              		@ link register save eliminated.
 5228 0000 80B4     		push	{r7}
 5229              	.LCFI183:
 5230              		.cfi_def_cfa_offset 4
 5231              		.cfi_offset 7, -4
 5232 0002 83B0     		sub	sp, sp, #12
 5233              	.LCFI184:
 5234              		.cfi_def_cfa_offset 16
 5235 0004 00AF     		add	r7, sp, #0
 5236              	.LCFI185:
 5237              		.cfi_def_cfa_register 7
 5238 0006 7860     		str	r0, [r7, #4]
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5239              		.loc 1 2653 1
 5240 0008 00BF     		nop
 5241 000a 0C37     		adds	r7, r7, #12
 5242              	.LCFI186:
 5243              		.cfi_def_cfa_offset 4
 5244 000c BD46     		mov	sp, r7
 5245              	.LCFI187:
 5246              		.cfi_def_cfa_register 13
 5247              		@ sp needed
 5248 000e 80BC     		pop	{r7}
 5249              	.LCFI188:
 5250              		.cfi_restore 7
 5251              		.cfi_def_cfa_offset 0
 5252 0010 7047     		bx	lr
 5253              		.cfi_endproc
 5254              	.LFE99:
 5256              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 5257              		.align	1
 5258              		.weak	HAL_UART_AbortCpltCallback
 5259              		.syntax unified
 5260              		.thumb
 5261              		.thumb_func
 5263              	HAL_UART_AbortCpltCallback:
 5264              	.LFB100:
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 139


2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5265              		.loc 1 2661 1
 5266              		.cfi_startproc
 5267              		@ args = 0, pretend = 0, frame = 8
 5268              		@ frame_needed = 1, uses_anonymous_args = 0
 5269              		@ link register save eliminated.
 5270 0000 80B4     		push	{r7}
 5271              	.LCFI189:
 5272              		.cfi_def_cfa_offset 4
 5273              		.cfi_offset 7, -4
 5274 0002 83B0     		sub	sp, sp, #12
 5275              	.LCFI190:
 5276              		.cfi_def_cfa_offset 16
 5277 0004 00AF     		add	r7, sp, #0
 5278              	.LCFI191:
 5279              		.cfi_def_cfa_register 7
 5280 0006 7860     		str	r0, [r7, #4]
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5281              		.loc 1 2668 1
 5282 0008 00BF     		nop
 5283 000a 0C37     		adds	r7, r7, #12
 5284              	.LCFI192:
 5285              		.cfi_def_cfa_offset 4
 5286 000c BD46     		mov	sp, r7
 5287              	.LCFI193:
 5288              		.cfi_def_cfa_register 13
 5289              		@ sp needed
 5290 000e 80BC     		pop	{r7}
 5291              	.LCFI194:
 5292              		.cfi_restore 7
 5293              		.cfi_def_cfa_offset 0
 5294 0010 7047     		bx	lr
 5295              		.cfi_endproc
 5296              	.LFE100:
 5298              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 5299              		.align	1
 5300              		.weak	HAL_UART_AbortTransmitCpltCallback
 5301              		.syntax unified
 5302              		.thumb
 5303              		.thumb_func
 5305              	HAL_UART_AbortTransmitCpltCallback:
 5306              	.LFB101:
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5307              		.loc 1 2676 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 140


 5308              		.cfi_startproc
 5309              		@ args = 0, pretend = 0, frame = 8
 5310              		@ frame_needed = 1, uses_anonymous_args = 0
 5311              		@ link register save eliminated.
 5312 0000 80B4     		push	{r7}
 5313              	.LCFI195:
 5314              		.cfi_def_cfa_offset 4
 5315              		.cfi_offset 7, -4
 5316 0002 83B0     		sub	sp, sp, #12
 5317              	.LCFI196:
 5318              		.cfi_def_cfa_offset 16
 5319 0004 00AF     		add	r7, sp, #0
 5320              	.LCFI197:
 5321              		.cfi_def_cfa_register 7
 5322 0006 7860     		str	r0, [r7, #4]
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5323              		.loc 1 2683 1
 5324 0008 00BF     		nop
 5325 000a 0C37     		adds	r7, r7, #12
 5326              	.LCFI198:
 5327              		.cfi_def_cfa_offset 4
 5328 000c BD46     		mov	sp, r7
 5329              	.LCFI199:
 5330              		.cfi_def_cfa_register 13
 5331              		@ sp needed
 5332 000e 80BC     		pop	{r7}
 5333              	.LCFI200:
 5334              		.cfi_restore 7
 5335              		.cfi_def_cfa_offset 0
 5336 0010 7047     		bx	lr
 5337              		.cfi_endproc
 5338              	.LFE101:
 5340              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 5341              		.align	1
 5342              		.weak	HAL_UART_AbortReceiveCpltCallback
 5343              		.syntax unified
 5344              		.thumb
 5345              		.thumb_func
 5347              	HAL_UART_AbortReceiveCpltCallback:
 5348              	.LFB102:
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5349              		.loc 1 2691 1
 5350              		.cfi_startproc
 5351              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 141


 5352              		@ frame_needed = 1, uses_anonymous_args = 0
 5353              		@ link register save eliminated.
 5354 0000 80B4     		push	{r7}
 5355              	.LCFI201:
 5356              		.cfi_def_cfa_offset 4
 5357              		.cfi_offset 7, -4
 5358 0002 83B0     		sub	sp, sp, #12
 5359              	.LCFI202:
 5360              		.cfi_def_cfa_offset 16
 5361 0004 00AF     		add	r7, sp, #0
 5362              	.LCFI203:
 5363              		.cfi_def_cfa_register 7
 5364 0006 7860     		str	r0, [r7, #4]
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5365              		.loc 1 2698 1
 5366 0008 00BF     		nop
 5367 000a 0C37     		adds	r7, r7, #12
 5368              	.LCFI204:
 5369              		.cfi_def_cfa_offset 4
 5370 000c BD46     		mov	sp, r7
 5371              	.LCFI205:
 5372              		.cfi_def_cfa_register 13
 5373              		@ sp needed
 5374 000e 80BC     		pop	{r7}
 5375              	.LCFI206:
 5376              		.cfi_restore 7
 5377              		.cfi_def_cfa_offset 0
 5378 0010 7047     		bx	lr
 5379              		.cfi_endproc
 5380              	.LFE102:
 5382              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 5383              		.align	1
 5384              		.weak	HAL_UARTEx_RxEventCallback
 5385              		.syntax unified
 5386              		.thumb
 5387              		.thumb_func
 5389              	HAL_UARTEx_RxEventCallback:
 5390              	.LFB103:
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               reception buffer until which, data are available)
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5391              		.loc 1 2708 1
 5392              		.cfi_startproc
 5393              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 142


 5394              		@ frame_needed = 1, uses_anonymous_args = 0
 5395              		@ link register save eliminated.
 5396 0000 80B4     		push	{r7}
 5397              	.LCFI207:
 5398              		.cfi_def_cfa_offset 4
 5399              		.cfi_offset 7, -4
 5400 0002 83B0     		sub	sp, sp, #12
 5401              	.LCFI208:
 5402              		.cfi_def_cfa_offset 16
 5403 0004 00AF     		add	r7, sp, #0
 5404              	.LCFI209:
 5405              		.cfi_def_cfa_register 7
 5406 0006 7860     		str	r0, [r7, #4]
 5407 0008 0B46     		mov	r3, r1
 5408 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(Size);
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5409              		.loc 1 2716 1
 5410 000c 00BF     		nop
 5411 000e 0C37     		adds	r7, r7, #12
 5412              	.LCFI210:
 5413              		.cfi_def_cfa_offset 4
 5414 0010 BD46     		mov	sp, r7
 5415              	.LCFI211:
 5416              		.cfi_def_cfa_register 13
 5417              		@ sp needed
 5418 0012 80BC     		pop	{r7}
 5419              	.LCFI212:
 5420              		.cfi_restore 7
 5421              		.cfi_def_cfa_offset 0
 5422 0014 7047     		bx	lr
 5423              		.cfi_endproc
 5424              	.LFE103:
 5426              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5427              		.align	1
 5428              		.global	HAL_LIN_SendBreak
 5429              		.syntax unified
 5430              		.thumb
 5431              		.thumb_func
 5433              	HAL_LIN_SendBreak:
 5434              	.LFB104:
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 143


2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5435              		.loc 1 2748 1
 5436              		.cfi_startproc
 5437              		@ args = 0, pretend = 0, frame = 8
 5438              		@ frame_needed = 1, uses_anonymous_args = 0
 5439              		@ link register save eliminated.
 5440 0000 80B4     		push	{r7}
 5441              	.LCFI213:
 5442              		.cfi_def_cfa_offset 4
 5443              		.cfi_offset 7, -4
 5444 0002 83B0     		sub	sp, sp, #12
 5445              	.LCFI214:
 5446              		.cfi_def_cfa_offset 16
 5447 0004 00AF     		add	r7, sp, #0
 5448              	.LCFI215:
 5449              		.cfi_def_cfa_register 7
 5450 0006 7860     		str	r0, [r7, #4]
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 5451              		.loc 1 2753 3
 5452 0008 7B68     		ldr	r3, [r7, #4]
 5453 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 5454 000e 012B     		cmp	r3, #1
 5455 0010 01D1     		bne	.L287
 5456              		.loc 1 2753 3 is_stmt 0 discriminator 1
 5457 0012 0223     		movs	r3, #2
 5458 0014 18E0     		b	.L288
 5459              	.L287:
 5460              		.loc 1 2753 3 discriminator 2
 5461 0016 7B68     		ldr	r3, [r7, #4]
 5462 0018 0122     		movs	r2, #1
 5463 001a 83F83C20 		strb	r2, [r3, #60]
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 144


2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5464              		.loc 1 2755 17 is_stmt 1 discriminator 2
 5465 001e 7B68     		ldr	r3, [r7, #4]
 5466 0020 2422     		movs	r2, #36
 5467 0022 83F83D20 		strb	r2, [r3, #61]
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 5468              		.loc 1 2758 3 discriminator 2
 5469 0026 7B68     		ldr	r3, [r7, #4]
 5470 0028 1B68     		ldr	r3, [r3]
 5471 002a DA68     		ldr	r2, [r3, #12]
 5472 002c 7B68     		ldr	r3, [r7, #4]
 5473 002e 1B68     		ldr	r3, [r3]
 5474 0030 42F00102 		orr	r2, r2, #1
 5475 0034 DA60     		str	r2, [r3, #12]
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5476              		.loc 1 2760 17 discriminator 2
 5477 0036 7B68     		ldr	r3, [r7, #4]
 5478 0038 2022     		movs	r2, #32
 5479 003a 83F83D20 		strb	r2, [r3, #61]
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5480              		.loc 1 2763 3 discriminator 2
 5481 003e 7B68     		ldr	r3, [r7, #4]
 5482 0040 0022     		movs	r2, #0
 5483 0042 83F83C20 		strb	r2, [r3, #60]
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5484              		.loc 1 2765 10 discriminator 2
 5485 0046 0023     		movs	r3, #0
 5486              	.L288:
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5487              		.loc 1 2766 1
 5488 0048 1846     		mov	r0, r3
 5489 004a 0C37     		adds	r7, r7, #12
 5490              	.LCFI216:
 5491              		.cfi_def_cfa_offset 4
 5492 004c BD46     		mov	sp, r7
 5493              	.LCFI217:
 5494              		.cfi_def_cfa_register 13
 5495              		@ sp needed
 5496 004e 80BC     		pop	{r7}
 5497              	.LCFI218:
 5498              		.cfi_restore 7
 5499              		.cfi_def_cfa_offset 0
 5500 0050 7047     		bx	lr
 5501              		.cfi_endproc
 5502              	.LFE104:
 5504              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 5505              		.align	1
 5506              		.global	HAL_MultiProcessor_EnterMuteMode
 5507              		.syntax unified
 5508              		.thumb
 5509              		.thumb_func
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 145


 5511              	HAL_MultiProcessor_EnterMuteMode:
 5512              	.LFB105:
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5513              		.loc 1 2775 1
 5514              		.cfi_startproc
 5515              		@ args = 0, pretend = 0, frame = 8
 5516              		@ frame_needed = 1, uses_anonymous_args = 0
 5517              		@ link register save eliminated.
 5518 0000 80B4     		push	{r7}
 5519              	.LCFI219:
 5520              		.cfi_def_cfa_offset 4
 5521              		.cfi_offset 7, -4
 5522 0002 83B0     		sub	sp, sp, #12
 5523              	.LCFI220:
 5524              		.cfi_def_cfa_offset 16
 5525 0004 00AF     		add	r7, sp, #0
 5526              	.LCFI221:
 5527              		.cfi_def_cfa_register 7
 5528 0006 7860     		str	r0, [r7, #4]
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 5529              		.loc 1 2780 3
 5530 0008 7B68     		ldr	r3, [r7, #4]
 5531 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 5532 000e 012B     		cmp	r3, #1
 5533 0010 01D1     		bne	.L290
 5534              		.loc 1 2780 3 is_stmt 0 discriminator 1
 5535 0012 0223     		movs	r3, #2
 5536 0014 18E0     		b	.L291
 5537              	.L290:
 5538              		.loc 1 2780 3 discriminator 2
 5539 0016 7B68     		ldr	r3, [r7, #4]
 5540 0018 0122     		movs	r2, #1
 5541 001a 83F83C20 		strb	r2, [r3, #60]
2781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5542              		.loc 1 2782 17 is_stmt 1 discriminator 2
 5543 001e 7B68     		ldr	r3, [r7, #4]
 5544 0020 2422     		movs	r2, #36
 5545 0022 83F83D20 		strb	r2, [r3, #61]
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 5546              		.loc 1 2785 3 discriminator 2
 5547 0026 7B68     		ldr	r3, [r7, #4]
 5548 0028 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 146


 5549 002a DA68     		ldr	r2, [r3, #12]
 5550 002c 7B68     		ldr	r3, [r7, #4]
 5551 002e 1B68     		ldr	r3, [r3]
 5552 0030 42F00202 		orr	r2, r2, #2
 5553 0034 DA60     		str	r2, [r3, #12]
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5554              		.loc 1 2787 17 discriminator 2
 5555 0036 7B68     		ldr	r3, [r7, #4]
 5556 0038 2022     		movs	r2, #32
 5557 003a 83F83D20 		strb	r2, [r3, #61]
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5558              		.loc 1 2790 3 discriminator 2
 5559 003e 7B68     		ldr	r3, [r7, #4]
 5560 0040 0022     		movs	r2, #0
 5561 0042 83F83C20 		strb	r2, [r3, #60]
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5562              		.loc 1 2792 10 discriminator 2
 5563 0046 0023     		movs	r3, #0
 5564              	.L291:
2793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5565              		.loc 1 2793 1
 5566 0048 1846     		mov	r0, r3
 5567 004a 0C37     		adds	r7, r7, #12
 5568              	.LCFI222:
 5569              		.cfi_def_cfa_offset 4
 5570 004c BD46     		mov	sp, r7
 5571              	.LCFI223:
 5572              		.cfi_def_cfa_register 13
 5573              		@ sp needed
 5574 004e 80BC     		pop	{r7}
 5575              	.LCFI224:
 5576              		.cfi_restore 7
 5577              		.cfi_def_cfa_offset 0
 5578 0050 7047     		bx	lr
 5579              		.cfi_endproc
 5580              	.LFE105:
 5582              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 5583              		.align	1
 5584              		.global	HAL_MultiProcessor_ExitMuteMode
 5585              		.syntax unified
 5586              		.thumb
 5587              		.thumb_func
 5589              	HAL_MultiProcessor_ExitMuteMode:
 5590              	.LFB106:
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 147


 5591              		.loc 1 2802 1
 5592              		.cfi_startproc
 5593              		@ args = 0, pretend = 0, frame = 8
 5594              		@ frame_needed = 1, uses_anonymous_args = 0
 5595              		@ link register save eliminated.
 5596 0000 80B4     		push	{r7}
 5597              	.LCFI225:
 5598              		.cfi_def_cfa_offset 4
 5599              		.cfi_offset 7, -4
 5600 0002 83B0     		sub	sp, sp, #12
 5601              	.LCFI226:
 5602              		.cfi_def_cfa_offset 16
 5603 0004 00AF     		add	r7, sp, #0
 5604              	.LCFI227:
 5605              		.cfi_def_cfa_register 7
 5606 0006 7860     		str	r0, [r7, #4]
2803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 5607              		.loc 1 2807 3
 5608 0008 7B68     		ldr	r3, [r7, #4]
 5609 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 5610 000e 012B     		cmp	r3, #1
 5611 0010 01D1     		bne	.L293
 5612              		.loc 1 2807 3 is_stmt 0 discriminator 1
 5613 0012 0223     		movs	r3, #2
 5614 0014 18E0     		b	.L294
 5615              	.L293:
 5616              		.loc 1 2807 3 discriminator 2
 5617 0016 7B68     		ldr	r3, [r7, #4]
 5618 0018 0122     		movs	r2, #1
 5619 001a 83F83C20 		strb	r2, [r3, #60]
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5620              		.loc 1 2809 17 is_stmt 1 discriminator 2
 5621 001e 7B68     		ldr	r3, [r7, #4]
 5622 0020 2422     		movs	r2, #36
 5623 0022 83F83D20 		strb	r2, [r3, #61]
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 5624              		.loc 1 2812 3 discriminator 2
 5625 0026 7B68     		ldr	r3, [r7, #4]
 5626 0028 1B68     		ldr	r3, [r3]
 5627 002a DA68     		ldr	r2, [r3, #12]
 5628 002c 7B68     		ldr	r3, [r7, #4]
 5629 002e 1B68     		ldr	r3, [r3]
 5630 0030 22F00202 		bic	r2, r2, #2
 5631 0034 DA60     		str	r2, [r3, #12]
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5632              		.loc 1 2814 17 discriminator 2
 5633 0036 7B68     		ldr	r3, [r7, #4]
 5634 0038 2022     		movs	r2, #32
 5635 003a 83F83D20 		strb	r2, [r3, #61]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 148


2815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5636              		.loc 1 2817 3 discriminator 2
 5637 003e 7B68     		ldr	r3, [r7, #4]
 5638 0040 0022     		movs	r2, #0
 5639 0042 83F83C20 		strb	r2, [r3, #60]
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5640              		.loc 1 2819 10 discriminator 2
 5641 0046 0023     		movs	r3, #0
 5642              	.L294:
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5643              		.loc 1 2820 1
 5644 0048 1846     		mov	r0, r3
 5645 004a 0C37     		adds	r7, r7, #12
 5646              	.LCFI228:
 5647              		.cfi_def_cfa_offset 4
 5648 004c BD46     		mov	sp, r7
 5649              	.LCFI229:
 5650              		.cfi_def_cfa_register 13
 5651              		@ sp needed
 5652 004e 80BC     		pop	{r7}
 5653              	.LCFI230:
 5654              		.cfi_restore 7
 5655              		.cfi_def_cfa_offset 0
 5656 0050 7047     		bx	lr
 5657              		.cfi_endproc
 5658              	.LFE106:
 5660              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 5661              		.align	1
 5662              		.global	HAL_HalfDuplex_EnableTransmitter
 5663              		.syntax unified
 5664              		.thumb
 5665              		.thumb_func
 5667              	HAL_HalfDuplex_EnableTransmitter:
 5668              	.LFB107:
2821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5669              		.loc 1 2829 1
 5670              		.cfi_startproc
 5671              		@ args = 0, pretend = 0, frame = 16
 5672              		@ frame_needed = 1, uses_anonymous_args = 0
 5673              		@ link register save eliminated.
 5674 0000 80B4     		push	{r7}
 5675              	.LCFI231:
 5676              		.cfi_def_cfa_offset 4
 5677              		.cfi_offset 7, -4
 5678 0002 85B0     		sub	sp, sp, #20
 5679              	.LCFI232:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 149


 5680              		.cfi_def_cfa_offset 24
 5681 0004 00AF     		add	r7, sp, #0
 5682              	.LCFI233:
 5683              		.cfi_def_cfa_register 7
 5684 0006 7860     		str	r0, [r7, #4]
2830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 5685              		.loc 1 2830 12
 5686 0008 0023     		movs	r3, #0
 5687 000a FB60     		str	r3, [r7, #12]
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 5688              		.loc 1 2833 3
 5689 000c 7B68     		ldr	r3, [r7, #4]
 5690 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 5691 0012 012B     		cmp	r3, #1
 5692 0014 01D1     		bne	.L296
 5693              		.loc 1 2833 3 is_stmt 0 discriminator 1
 5694 0016 0223     		movs	r3, #2
 5695 0018 20E0     		b	.L297
 5696              	.L296:
 5697              		.loc 1 2833 3 discriminator 2
 5698 001a 7B68     		ldr	r3, [r7, #4]
 5699 001c 0122     		movs	r2, #1
 5700 001e 83F83C20 		strb	r2, [r3, #60]
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5701              		.loc 1 2835 17 is_stmt 1 discriminator 2
 5702 0022 7B68     		ldr	r3, [r7, #4]
 5703 0024 2422     		movs	r2, #36
 5704 0026 83F83D20 		strb	r2, [r3, #61]
2836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 5705              		.loc 1 2838 17 discriminator 2
 5706 002a 7B68     		ldr	r3, [r7, #4]
 5707 002c 1B68     		ldr	r3, [r3]
 5708              		.loc 1 2838 10 discriminator 2
 5709 002e DB68     		ldr	r3, [r3, #12]
 5710 0030 FB60     		str	r3, [r7, #12]
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
2841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 5711              		.loc 1 2841 10 discriminator 2
 5712 0032 FB68     		ldr	r3, [r7, #12]
 5713 0034 23F00C03 		bic	r3, r3, #12
 5714 0038 FB60     		str	r3, [r7, #12]
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 5715              		.loc 1 2844 10 discriminator 2
 5716 003a FB68     		ldr	r3, [r7, #12]
 5717 003c 43F00803 		orr	r3, r3, #8
 5718 0040 FB60     		str	r3, [r7, #12]
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
2847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 150


 5719              		.loc 1 2847 3 discriminator 2
 5720 0042 7B68     		ldr	r3, [r7, #4]
 5721 0044 1B68     		ldr	r3, [r3]
 5722 0046 FA68     		ldr	r2, [r7, #12]
 5723 0048 DA60     		str	r2, [r3, #12]
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5724              		.loc 1 2849 17 discriminator 2
 5725 004a 7B68     		ldr	r3, [r7, #4]
 5726 004c 2022     		movs	r2, #32
 5727 004e 83F83D20 		strb	r2, [r3, #61]
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5728              		.loc 1 2852 3 discriminator 2
 5729 0052 7B68     		ldr	r3, [r7, #4]
 5730 0054 0022     		movs	r2, #0
 5731 0056 83F83C20 		strb	r2, [r3, #60]
2853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5732              		.loc 1 2854 10 discriminator 2
 5733 005a 0023     		movs	r3, #0
 5734              	.L297:
2855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5735              		.loc 1 2855 1
 5736 005c 1846     		mov	r0, r3
 5737 005e 1437     		adds	r7, r7, #20
 5738              	.LCFI234:
 5739              		.cfi_def_cfa_offset 4
 5740 0060 BD46     		mov	sp, r7
 5741              	.LCFI235:
 5742              		.cfi_def_cfa_register 13
 5743              		@ sp needed
 5744 0062 80BC     		pop	{r7}
 5745              	.LCFI236:
 5746              		.cfi_restore 7
 5747              		.cfi_def_cfa_offset 0
 5748 0064 7047     		bx	lr
 5749              		.cfi_endproc
 5750              	.LFE107:
 5752              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 5753              		.align	1
 5754              		.global	HAL_HalfDuplex_EnableReceiver
 5755              		.syntax unified
 5756              		.thumb
 5757              		.thumb_func
 5759              	HAL_HalfDuplex_EnableReceiver:
 5760              	.LFB108:
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 151


 5761              		.loc 1 2864 1
 5762              		.cfi_startproc
 5763              		@ args = 0, pretend = 0, frame = 16
 5764              		@ frame_needed = 1, uses_anonymous_args = 0
 5765              		@ link register save eliminated.
 5766 0000 80B4     		push	{r7}
 5767              	.LCFI237:
 5768              		.cfi_def_cfa_offset 4
 5769              		.cfi_offset 7, -4
 5770 0002 85B0     		sub	sp, sp, #20
 5771              	.LCFI238:
 5772              		.cfi_def_cfa_offset 24
 5773 0004 00AF     		add	r7, sp, #0
 5774              	.LCFI239:
 5775              		.cfi_def_cfa_register 7
 5776 0006 7860     		str	r0, [r7, #4]
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 5777              		.loc 1 2865 12
 5778 0008 0023     		movs	r3, #0
 5779 000a FB60     		str	r3, [r7, #12]
2866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 5780              		.loc 1 2868 3
 5781 000c 7B68     		ldr	r3, [r7, #4]
 5782 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 5783 0012 012B     		cmp	r3, #1
 5784 0014 01D1     		bne	.L299
 5785              		.loc 1 2868 3 is_stmt 0 discriminator 1
 5786 0016 0223     		movs	r3, #2
 5787 0018 20E0     		b	.L300
 5788              	.L299:
 5789              		.loc 1 2868 3 discriminator 2
 5790 001a 7B68     		ldr	r3, [r7, #4]
 5791 001c 0122     		movs	r2, #1
 5792 001e 83F83C20 		strb	r2, [r3, #60]
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 5793              		.loc 1 2870 17 is_stmt 1 discriminator 2
 5794 0022 7B68     		ldr	r3, [r7, #4]
 5795 0024 2422     		movs	r2, #36
 5796 0026 83F83D20 		strb	r2, [r3, #61]
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 5797              		.loc 1 2873 17 discriminator 2
 5798 002a 7B68     		ldr	r3, [r7, #4]
 5799 002c 1B68     		ldr	r3, [r3]
 5800              		.loc 1 2873 10 discriminator 2
 5801 002e DB68     		ldr	r3, [r3, #12]
 5802 0030 FB60     		str	r3, [r7, #12]
2874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 5803              		.loc 1 2876 10 discriminator 2
 5804 0032 FB68     		ldr	r3, [r7, #12]
 5805 0034 23F00C03 		bic	r3, r3, #12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 152


 5806 0038 FB60     		str	r3, [r7, #12]
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 5807              		.loc 1 2879 10 discriminator 2
 5808 003a FB68     		ldr	r3, [r7, #12]
 5809 003c 43F00403 		orr	r3, r3, #4
 5810 0040 FB60     		str	r3, [r7, #12]
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
2882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 5811              		.loc 1 2882 3 discriminator 2
 5812 0042 7B68     		ldr	r3, [r7, #4]
 5813 0044 1B68     		ldr	r3, [r3]
 5814 0046 FA68     		ldr	r2, [r7, #12]
 5815 0048 DA60     		str	r2, [r3, #12]
2883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5816              		.loc 1 2884 17 discriminator 2
 5817 004a 7B68     		ldr	r3, [r7, #4]
 5818 004c 2022     		movs	r2, #32
 5819 004e 83F83D20 		strb	r2, [r3, #61]
2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5820              		.loc 1 2887 3 discriminator 2
 5821 0052 7B68     		ldr	r3, [r7, #4]
 5822 0054 0022     		movs	r2, #0
 5823 0056 83F83C20 		strb	r2, [r3, #60]
2888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5824              		.loc 1 2889 10 discriminator 2
 5825 005a 0023     		movs	r3, #0
 5826              	.L300:
2890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5827              		.loc 1 2890 1
 5828 005c 1846     		mov	r0, r3
 5829 005e 1437     		adds	r7, r7, #20
 5830              	.LCFI240:
 5831              		.cfi_def_cfa_offset 4
 5832 0060 BD46     		mov	sp, r7
 5833              	.LCFI241:
 5834              		.cfi_def_cfa_register 13
 5835              		@ sp needed
 5836 0062 80BC     		pop	{r7}
 5837              	.LCFI242:
 5838              		.cfi_restore 7
 5839              		.cfi_def_cfa_offset 0
 5840 0064 7047     		bx	lr
 5841              		.cfi_endproc
 5842              	.LFE108:
 5844              		.section	.text.HAL_UART_GetState,"ax",%progbits
 5845              		.align	1
 5846              		.global	HAL_UART_GetState
 5847              		.syntax unified
 5848              		.thumb
 5849              		.thumb_func
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 153


 5851              	HAL_UART_GetState:
 5852              	.LFB109:
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
2899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
2907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
2911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
2919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5853              		.loc 1 2921 1
 5854              		.cfi_startproc
 5855              		@ args = 0, pretend = 0, frame = 16
 5856              		@ frame_needed = 1, uses_anonymous_args = 0
 5857              		@ link register save eliminated.
 5858 0000 80B4     		push	{r7}
 5859              	.LCFI243:
 5860              		.cfi_def_cfa_offset 4
 5861              		.cfi_offset 7, -4
 5862 0002 85B0     		sub	sp, sp, #20
 5863              	.LCFI244:
 5864              		.cfi_def_cfa_offset 24
 5865 0004 00AF     		add	r7, sp, #0
 5866              	.LCFI245:
 5867              		.cfi_def_cfa_register 7
 5868 0006 7860     		str	r0, [r7, #4]
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 5869              		.loc 1 2922 12
 5870 0008 0023     		movs	r3, #0
 5871 000a FB60     		str	r3, [r7, #12]
 5872              		.loc 1 2922 27
 5873 000c 0023     		movs	r3, #0
 5874 000e BB60     		str	r3, [r7, #8]
2923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp1 = huart->gState;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 154


 5875              		.loc 1 2923 16
 5876 0010 7B68     		ldr	r3, [r7, #4]
 5877 0012 93F83D30 		ldrb	r3, [r3, #61]
 5878 0016 DBB2     		uxtb	r3, r3
 5879              		.loc 1 2923 9
 5880 0018 FB60     		str	r3, [r7, #12]
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
 5881              		.loc 1 2924 16
 5882 001a 7B68     		ldr	r3, [r7, #4]
 5883 001c 93F83E30 		ldrb	r3, [r3, #62]
 5884 0020 DBB2     		uxtb	r3, r3
 5885              		.loc 1 2924 9
 5886 0022 BB60     		str	r3, [r7, #8]
2925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 5887              		.loc 1 2926 10
 5888 0024 FB68     		ldr	r3, [r7, #12]
 5889 0026 DAB2     		uxtb	r2, r3
 5890 0028 BB68     		ldr	r3, [r7, #8]
 5891 002a DBB2     		uxtb	r3, r3
 5892 002c 1343     		orrs	r3, r3, r2
 5893 002e DBB2     		uxtb	r3, r3
2927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5894              		.loc 1 2927 1
 5895 0030 1846     		mov	r0, r3
 5896 0032 1437     		adds	r7, r7, #20
 5897              	.LCFI246:
 5898              		.cfi_def_cfa_offset 4
 5899 0034 BD46     		mov	sp, r7
 5900              	.LCFI247:
 5901              		.cfi_def_cfa_register 13
 5902              		@ sp needed
 5903 0036 80BC     		pop	{r7}
 5904              	.LCFI248:
 5905              		.cfi_restore 7
 5906              		.cfi_def_cfa_offset 0
 5907 0038 7047     		bx	lr
 5908              		.cfi_endproc
 5909              	.LFE109:
 5911              		.section	.text.HAL_UART_GetError,"ax",%progbits
 5912              		.align	1
 5913              		.global	HAL_UART_GetError
 5914              		.syntax unified
 5915              		.thumb
 5916              		.thumb_func
 5918              	HAL_UART_GetError:
 5919              	.LFB110:
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Return the UART error code
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART.
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval UART Error Code
2934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5920              		.loc 1 2936 1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 155


 5921              		.cfi_startproc
 5922              		@ args = 0, pretend = 0, frame = 8
 5923              		@ frame_needed = 1, uses_anonymous_args = 0
 5924              		@ link register save eliminated.
 5925 0000 80B4     		push	{r7}
 5926              	.LCFI249:
 5927              		.cfi_def_cfa_offset 4
 5928              		.cfi_offset 7, -4
 5929 0002 83B0     		sub	sp, sp, #12
 5930              	.LCFI250:
 5931              		.cfi_def_cfa_offset 16
 5932 0004 00AF     		add	r7, sp, #0
 5933              	.LCFI251:
 5934              		.cfi_def_cfa_register 7
 5935 0006 7860     		str	r0, [r7, #4]
2937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 5936              		.loc 1 2937 15
 5937 0008 7B68     		ldr	r3, [r7, #4]
 5938 000a 1B6C     		ldr	r3, [r3, #64]
2938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5939              		.loc 1 2938 1
 5940 000c 1846     		mov	r0, r3
 5941 000e 0C37     		adds	r7, r7, #12
 5942              	.LCFI252:
 5943              		.cfi_def_cfa_offset 4
 5944 0010 BD46     		mov	sp, r7
 5945              	.LCFI253:
 5946              		.cfi_def_cfa_register 13
 5947              		@ sp needed
 5948 0012 80BC     		pop	{r7}
 5949              	.LCFI254:
 5950              		.cfi_restore 7
 5951              		.cfi_def_cfa_offset 0
 5952 0014 7047     		bx	lr
 5953              		.cfi_endproc
 5954              	.LFE110:
 5956              		.section	.text.UART_InitCallbacksToDefault,"ax",%progbits
 5957              		.align	1
 5958              		.global	UART_InitCallbacksToDefault
 5959              		.syntax unified
 5960              		.thumb
 5961              		.thumb_func
 5963              	UART_InitCallbacksToDefault:
 5964              	.LFB111:
2939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 156


2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval none
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5965              		.loc 1 2959 1
 5966              		.cfi_startproc
 5967              		@ args = 0, pretend = 0, frame = 8
 5968              		@ frame_needed = 1, uses_anonymous_args = 0
 5969              		@ link register save eliminated.
 5970 0000 80B4     		push	{r7}
 5971              	.LCFI255:
 5972              		.cfi_def_cfa_offset 4
 5973              		.cfi_offset 7, -4
 5974 0002 83B0     		sub	sp, sp, #12
 5975              	.LCFI256:
 5976              		.cfi_def_cfa_offset 16
 5977 0004 00AF     		add	r7, sp, #0
 5978              	.LCFI257:
 5979              		.cfi_def_cfa_register 7
 5980 0006 7860     		str	r0, [r7, #4]
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Init the UART Callback settings */
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
 5981              		.loc 1 2961 36
 5982 0008 7B68     		ldr	r3, [r7, #4]
 5983 000a 0F4A     		ldr	r2, .L306
 5984 000c 5A64     		str	r2, [r3, #68]
2962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
 5985              		.loc 1 2962 36
 5986 000e 7B68     		ldr	r3, [r7, #4]
 5987 0010 0E4A     		ldr	r2, .L306+4
 5988 0012 9A64     		str	r2, [r3, #72]
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
 5989              		.loc 1 2963 36
 5990 0014 7B68     		ldr	r3, [r7, #4]
 5991 0016 0E4A     		ldr	r2, .L306+8
 5992 0018 DA64     		str	r2, [r3, #76]
2964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
 5993              		.loc 1 2964 36
 5994 001a 7B68     		ldr	r3, [r7, #4]
 5995 001c 0D4A     		ldr	r2, .L306+12
 5996 001e 1A65     		str	r2, [r3, #80]
2965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
 5997              		.loc 1 2965 36
 5998 0020 7B68     		ldr	r3, [r7, #4]
 5999 0022 0D4A     		ldr	r2, .L306+16
 6000 0024 5A65     		str	r2, [r3, #84]
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
 6001              		.loc 1 2966 36
 6002 0026 7B68     		ldr	r3, [r7, #4]
 6003 0028 0C4A     		ldr	r2, .L306+20
 6004 002a 9A65     		str	r2, [r3, #88]
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
 6005              		.loc 1 2967 36
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 157


 6006 002c 7B68     		ldr	r3, [r7, #4]
 6007 002e 0C4A     		ldr	r2, .L306+24
 6008 0030 DA65     		str	r2, [r3, #92]
2968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
 6009              		.loc 1 2968 36
 6010 0032 7B68     		ldr	r3, [r7, #4]
 6011 0034 0B4A     		ldr	r2, .L306+28
 6012 0036 1A66     		str	r2, [r3, #96]
2969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
 6013              		.loc 1 2969 36
 6014 0038 7B68     		ldr	r3, [r7, #4]
 6015 003a 0B4A     		ldr	r2, .L306+32
 6016 003c 9A66     		str	r2, [r3, #104]
2970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6017              		.loc 1 2971 1
 6018 003e 00BF     		nop
 6019 0040 0C37     		adds	r7, r7, #12
 6020              	.LCFI258:
 6021              		.cfi_def_cfa_offset 4
 6022 0042 BD46     		mov	sp, r7
 6023              	.LCFI259:
 6024              		.cfi_def_cfa_register 13
 6025              		@ sp needed
 6026 0044 80BC     		pop	{r7}
 6027              	.LCFI260:
 6028              		.cfi_restore 7
 6029              		.cfi_def_cfa_offset 0
 6030 0046 7047     		bx	lr
 6031              	.L307:
 6032              		.align	2
 6033              	.L306:
 6034 0048 00000000 		.word	HAL_UART_TxHalfCpltCallback
 6035 004c 00000000 		.word	HAL_UART_TxCpltCallback
 6036 0050 00000000 		.word	HAL_UART_RxHalfCpltCallback
 6037 0054 00000000 		.word	HAL_UART_RxCpltCallback
 6038 0058 00000000 		.word	HAL_UART_ErrorCallback
 6039 005c 00000000 		.word	HAL_UART_AbortCpltCallback
 6040 0060 00000000 		.word	HAL_UART_AbortTransmitCpltCallback
 6041 0064 00000000 		.word	HAL_UART_AbortReceiveCpltCallback
 6042 0068 00000000 		.word	HAL_UARTEx_RxEventCallback
 6043              		.cfi_endproc
 6044              	.LFE111:
 6046              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 6047              		.align	1
 6048              		.syntax unified
 6049              		.thumb
 6050              		.thumb_func
 6052              	UART_DMATransmitCplt:
 6053              	.LFB112:
2972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 158


2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6054              		.loc 1 2981 1
 6055              		.cfi_startproc
 6056              		@ args = 0, pretend = 0, frame = 16
 6057              		@ frame_needed = 1, uses_anonymous_args = 0
 6058 0000 80B5     		push	{r7, lr}
 6059              	.LCFI261:
 6060              		.cfi_def_cfa_offset 8
 6061              		.cfi_offset 7, -8
 6062              		.cfi_offset 14, -4
 6063 0002 84B0     		sub	sp, sp, #16
 6064              	.LCFI262:
 6065              		.cfi_def_cfa_offset 24
 6066 0004 00AF     		add	r7, sp, #0
 6067              	.LCFI263:
 6068              		.cfi_def_cfa_register 7
 6069 0006 7860     		str	r0, [r7, #4]
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 6070              		.loc 1 2982 23
 6071 0008 7B68     		ldr	r3, [r7, #4]
 6072 000a 5B6A     		ldr	r3, [r3, #36]
 6073 000c FB60     		str	r3, [r7, #12]
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 6074              		.loc 1 2984 12
 6075 000e 7B68     		ldr	r3, [r7, #4]
 6076 0010 1B68     		ldr	r3, [r3]
 6077              		.loc 1 2984 22
 6078 0012 1B68     		ldr	r3, [r3]
 6079              		.loc 1 2984 28
 6080 0014 03F02003 		and	r3, r3, #32
 6081              		.loc 1 2984 6
 6082 0018 002B     		cmp	r3, #0
 6083 001a 13D1     		bne	.L309
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 6084              		.loc 1 2986 24
 6085 001c FB68     		ldr	r3, [r7, #12]
 6086 001e 0022     		movs	r2, #0
 6087 0020 DA84     		strh	r2, [r3, #38]	@ movhi
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 6088              		.loc 1 2990 5
 6089 0022 FB68     		ldr	r3, [r7, #12]
 6090 0024 1B68     		ldr	r3, [r3]
 6091 0026 5A69     		ldr	r2, [r3, #20]
 6092 0028 FB68     		ldr	r3, [r7, #12]
 6093 002a 1B68     		ldr	r3, [r3]
 6094 002c 22F08002 		bic	r2, r2, #128
 6095 0030 5A61     		str	r2, [r3, #20]
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 159


 6096              		.loc 1 2993 5
 6097 0032 FB68     		ldr	r3, [r7, #12]
 6098 0034 1B68     		ldr	r3, [r3]
 6099 0036 DA68     		ldr	r2, [r3, #12]
 6100 0038 FB68     		ldr	r3, [r7, #12]
 6101 003a 1B68     		ldr	r3, [r3]
 6102 003c 42F04002 		orr	r2, r2, #64
 6103 0040 DA60     		str	r2, [r3, #12]
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6104              		.loc 1 3007 1
 6105 0042 03E0     		b	.L311
 6106              	.L309:
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 6107              		.loc 1 3001 10
 6108 0044 FB68     		ldr	r3, [r7, #12]
 6109 0046 9B6C     		ldr	r3, [r3, #72]
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 6110              		.loc 1 3001 5
 6111 0048 F868     		ldr	r0, [r7, #12]
 6112 004a 9847     		blx	r3
 6113              	.LVL18:
 6114              	.L311:
 6115              		.loc 1 3007 1
 6116 004c 00BF     		nop
 6117 004e 1037     		adds	r7, r7, #16
 6118              	.LCFI264:
 6119              		.cfi_def_cfa_offset 8
 6120 0050 BD46     		mov	sp, r7
 6121              	.LCFI265:
 6122              		.cfi_def_cfa_register 13
 6123              		@ sp needed
 6124 0052 80BD     		pop	{r7, pc}
 6125              		.cfi_endproc
 6126              	.LFE112:
 6128              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 6129              		.align	1
 6130              		.syntax unified
 6131              		.thumb
 6132              		.thumb_func
 6134              	UART_DMATxHalfCplt:
 6135              	.LFB113:
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 160


3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6136              		.loc 1 3016 1
 6137              		.cfi_startproc
 6138              		@ args = 0, pretend = 0, frame = 16
 6139              		@ frame_needed = 1, uses_anonymous_args = 0
 6140 0000 80B5     		push	{r7, lr}
 6141              	.LCFI266:
 6142              		.cfi_def_cfa_offset 8
 6143              		.cfi_offset 7, -8
 6144              		.cfi_offset 14, -4
 6145 0002 84B0     		sub	sp, sp, #16
 6146              	.LCFI267:
 6147              		.cfi_def_cfa_offset 24
 6148 0004 00AF     		add	r7, sp, #0
 6149              	.LCFI268:
 6150              		.cfi_def_cfa_register 7
 6151 0006 7860     		str	r0, [r7, #4]
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 6152              		.loc 1 3017 23
 6153 0008 7B68     		ldr	r3, [r7, #4]
 6154 000a 5B6A     		ldr	r3, [r3, #36]
 6155 000c FB60     		str	r3, [r7, #12]
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
 6156              		.loc 1 3021 8
 6157 000e FB68     		ldr	r3, [r7, #12]
 6158 0010 5B6C     		ldr	r3, [r3, #68]
 6159              		.loc 1 3021 3
 6160 0012 F868     		ldr	r0, [r7, #12]
 6161 0014 9847     		blx	r3
 6162              	.LVL19:
3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6163              		.loc 1 3026 1
 6164 0016 00BF     		nop
 6165 0018 1037     		adds	r7, r7, #16
 6166              	.LCFI269:
 6167              		.cfi_def_cfa_offset 8
 6168 001a BD46     		mov	sp, r7
 6169              	.LCFI270:
 6170              		.cfi_def_cfa_register 13
 6171              		@ sp needed
 6172 001c 80BD     		pop	{r7, pc}
 6173              		.cfi_endproc
 6174              	.LFE113:
 6176              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 6177              		.align	1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 161


 6178              		.syntax unified
 6179              		.thumb
 6180              		.thumb_func
 6182              	UART_DMAReceiveCplt:
 6183              	.LFB114:
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6184              		.loc 1 3035 1
 6185              		.cfi_startproc
 6186              		@ args = 0, pretend = 0, frame = 16
 6187              		@ frame_needed = 1, uses_anonymous_args = 0
 6188 0000 80B5     		push	{r7, lr}
 6189              	.LCFI271:
 6190              		.cfi_def_cfa_offset 8
 6191              		.cfi_offset 7, -8
 6192              		.cfi_offset 14, -4
 6193 0002 84B0     		sub	sp, sp, #16
 6194              	.LCFI272:
 6195              		.cfi_def_cfa_offset 24
 6196 0004 00AF     		add	r7, sp, #0
 6197              	.LCFI273:
 6198              		.cfi_def_cfa_register 7
 6199 0006 7860     		str	r0, [r7, #4]
3036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 6200              		.loc 1 3036 23
 6201 0008 7B68     		ldr	r3, [r7, #4]
 6202 000a 5B6A     		ldr	r3, [r3, #36]
 6203 000c FB60     		str	r3, [r7, #12]
3037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 6204              		.loc 1 3038 12
 6205 000e 7B68     		ldr	r3, [r7, #4]
 6206 0010 1B68     		ldr	r3, [r3]
 6207              		.loc 1 3038 22
 6208 0012 1B68     		ldr	r3, [r3]
 6209              		.loc 1 3038 28
 6210 0014 03F02003 		and	r3, r3, #32
 6211              		.loc 1 3038 6
 6212 0018 002B     		cmp	r3, #0
 6213 001a 2AD1     		bne	.L314
3039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6214              		.loc 1 3040 24
 6215 001c FB68     		ldr	r3, [r7, #12]
 6216 001e 0022     		movs	r2, #0
 6217 0020 DA85     		strh	r2, [r3, #46]	@ movhi
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6218              		.loc 1 3043 5
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 162


 6219 0022 FB68     		ldr	r3, [r7, #12]
 6220 0024 1B68     		ldr	r3, [r3]
 6221 0026 DA68     		ldr	r2, [r3, #12]
 6222 0028 FB68     		ldr	r3, [r7, #12]
 6223 002a 1B68     		ldr	r3, [r3]
 6224 002c 22F48072 		bic	r2, r2, #256
 6225 0030 DA60     		str	r2, [r3, #12]
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6226              		.loc 1 3044 5
 6227 0032 FB68     		ldr	r3, [r7, #12]
 6228 0034 1B68     		ldr	r3, [r3]
 6229 0036 5A69     		ldr	r2, [r3, #20]
 6230 0038 FB68     		ldr	r3, [r7, #12]
 6231 003a 1B68     		ldr	r3, [r3]
 6232 003c 22F00102 		bic	r2, r2, #1
 6233 0040 5A61     		str	r2, [r3, #20]
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
3048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6234              		.loc 1 3048 5
 6235 0042 FB68     		ldr	r3, [r7, #12]
 6236 0044 1B68     		ldr	r3, [r3]
 6237 0046 5A69     		ldr	r2, [r3, #20]
 6238 0048 FB68     		ldr	r3, [r7, #12]
 6239 004a 1B68     		ldr	r3, [r3]
 6240 004c 22F04002 		bic	r2, r2, #64
 6241 0050 5A61     		str	r2, [r3, #20]
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 6242              		.loc 1 3051 20
 6243 0052 FB68     		ldr	r3, [r7, #12]
 6244 0054 2022     		movs	r2, #32
 6245 0056 83F83E20 		strb	r2, [r3, #62]
3052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 6246              		.loc 1 3054 14
 6247 005a FB68     		ldr	r3, [r7, #12]
 6248 005c 1B6B     		ldr	r3, [r3, #48]
 6249              		.loc 1 3054 8
 6250 005e 012B     		cmp	r3, #1
 6251 0060 07D1     		bne	.L314
3055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6252              		.loc 1 3056 7
 6253 0062 FB68     		ldr	r3, [r7, #12]
 6254 0064 1B68     		ldr	r3, [r3]
 6255 0066 DA68     		ldr	r2, [r3, #12]
 6256 0068 FB68     		ldr	r3, [r7, #12]
 6257 006a 1B68     		ldr	r3, [r3]
 6258 006c 22F01002 		bic	r2, r2, #16
 6259 0070 DA60     		str	r2, [r3, #12]
 6260              	.L314:
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 163


3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 6261              		.loc 1 3062 12
 6262 0072 FB68     		ldr	r3, [r7, #12]
 6263 0074 1B6B     		ldr	r3, [r3, #48]
 6264              		.loc 1 3062 6
 6265 0076 012B     		cmp	r3, #1
 6266 0078 07D1     		bne	.L315
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
 6267              		.loc 1 3066 10
 6268 007a FB68     		ldr	r3, [r7, #12]
 6269 007c 9B6E     		ldr	r3, [r3, #104]
 6270              		.loc 1 3066 5
 6271 007e FA68     		ldr	r2, [r7, #12]
 6272 0080 928D     		ldrh	r2, [r2, #44]
 6273 0082 1146     		mov	r1, r2
 6274 0084 F868     		ldr	r0, [r7, #12]
 6275 0086 9847     		blx	r3
 6276              	.LVL20:
3067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6277              		.loc 1 3083 1
 6278 0088 03E0     		b	.L317
 6279              	.L315:
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 6280              		.loc 1 3077 10
 6281 008a FB68     		ldr	r3, [r7, #12]
 6282 008c 1B6D     		ldr	r3, [r3, #80]
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 6283              		.loc 1 3077 5
 6284 008e F868     		ldr	r0, [r7, #12]
 6285 0090 9847     		blx	r3
 6286              	.LVL21:
 6287              	.L317:
 6288              		.loc 1 3083 1
 6289 0092 00BF     		nop
 6290 0094 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 164


 6291              	.LCFI274:
 6292              		.cfi_def_cfa_offset 8
 6293 0096 BD46     		mov	sp, r7
 6294              	.LCFI275:
 6295              		.cfi_def_cfa_register 13
 6296              		@ sp needed
 6297 0098 80BD     		pop	{r7, pc}
 6298              		.cfi_endproc
 6299              	.LFE114:
 6301              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 6302              		.align	1
 6303              		.syntax unified
 6304              		.thumb
 6305              		.thumb_func
 6307              	UART_DMARxHalfCplt:
 6308              	.LFB115:
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6309              		.loc 1 3092 1
 6310              		.cfi_startproc
 6311              		@ args = 0, pretend = 0, frame = 16
 6312              		@ frame_needed = 1, uses_anonymous_args = 0
 6313 0000 80B5     		push	{r7, lr}
 6314              	.LCFI276:
 6315              		.cfi_def_cfa_offset 8
 6316              		.cfi_offset 7, -8
 6317              		.cfi_offset 14, -4
 6318 0002 84B0     		sub	sp, sp, #16
 6319              	.LCFI277:
 6320              		.cfi_def_cfa_offset 24
 6321 0004 00AF     		add	r7, sp, #0
 6322              	.LCFI278:
 6323              		.cfi_def_cfa_register 7
 6324 0006 7860     		str	r0, [r7, #4]
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 6325              		.loc 1 3093 23
 6326 0008 7B68     		ldr	r3, [r7, #4]
 6327 000a 5B6A     		ldr	r3, [r3, #36]
 6328 000c FB60     		str	r3, [r7, #12]
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
3096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 6329              		.loc 1 3097 12
 6330 000e FB68     		ldr	r3, [r7, #12]
 6331 0010 1B6B     		ldr	r3, [r3, #48]
 6332              		.loc 1 3097 6
 6333 0012 012B     		cmp	r3, #1
 6334 0014 09D1     		bne	.L319
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 165


3099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize/2U);
 6335              		.loc 1 3101 10
 6336 0016 FB68     		ldr	r3, [r7, #12]
 6337 0018 9B6E     		ldr	r3, [r3, #104]
 6338              		.loc 1 3101 40
 6339 001a FA68     		ldr	r2, [r7, #12]
 6340 001c 928D     		ldrh	r2, [r2, #44]
 6341              		.loc 1 3101 5
 6342 001e 5208     		lsrs	r2, r2, #1
 6343 0020 92B2     		uxth	r2, r2
 6344 0022 1146     		mov	r1, r2
 6345 0024 F868     		ldr	r0, [r7, #12]
 6346 0026 9847     		blx	r3
 6347              	.LVL22:
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize/2U);
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6348              		.loc 1 3118 1
 6349 0028 03E0     		b	.L321
 6350              	.L319:
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 6351              		.loc 1 3112 10
 6352 002a FB68     		ldr	r3, [r7, #12]
 6353 002c DB6C     		ldr	r3, [r3, #76]
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 6354              		.loc 1 3112 5
 6355 002e F868     		ldr	r0, [r7, #12]
 6356 0030 9847     		blx	r3
 6357              	.LVL23:
 6358              	.L321:
 6359              		.loc 1 3118 1
 6360 0032 00BF     		nop
 6361 0034 1037     		adds	r7, r7, #16
 6362              	.LCFI279:
 6363              		.cfi_def_cfa_offset 8
 6364 0036 BD46     		mov	sp, r7
 6365              	.LCFI280:
 6366              		.cfi_def_cfa_register 13
 6367              		@ sp needed
 6368 0038 80BD     		pop	{r7, pc}
 6369              		.cfi_endproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 166


 6370              	.LFE115:
 6372              		.section	.text.UART_DMAError,"ax",%progbits
 6373              		.align	1
 6374              		.syntax unified
 6375              		.thumb
 6376              		.thumb_func
 6378              	UART_DMAError:
 6379              	.LFB116:
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6380              		.loc 1 3127 1
 6381              		.cfi_startproc
 6382              		@ args = 0, pretend = 0, frame = 16
 6383              		@ frame_needed = 1, uses_anonymous_args = 0
 6384 0000 80B5     		push	{r7, lr}
 6385              	.LCFI281:
 6386              		.cfi_def_cfa_offset 8
 6387              		.cfi_offset 7, -8
 6388              		.cfi_offset 14, -4
 6389 0002 84B0     		sub	sp, sp, #16
 6390              	.LCFI282:
 6391              		.cfi_def_cfa_offset 24
 6392 0004 00AF     		add	r7, sp, #0
 6393              	.LCFI283:
 6394              		.cfi_def_cfa_register 7
 6395 0006 7860     		str	r0, [r7, #4]
3128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 6396              		.loc 1 3128 12
 6397 0008 0023     		movs	r3, #0
 6398 000a FB60     		str	r3, [r7, #12]
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 6399              		.loc 1 3129 23
 6400 000c 7B68     		ldr	r3, [r7, #4]
 6401 000e 5B6A     		ldr	r3, [r3, #36]
 6402 0010 BB60     		str	r3, [r7, #8]
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 6403              		.loc 1 3132 16
 6404 0012 BB68     		ldr	r3, [r7, #8]
 6405 0014 1B68     		ldr	r3, [r3]
 6406 0016 5B69     		ldr	r3, [r3, #20]
 6407 0018 03F08003 		and	r3, r3, #128
 6408 001c 002B     		cmp	r3, #0
 6409 001e 14BF     		ite	ne
 6410 0020 0123     		movne	r3, #1
 6411 0022 0023     		moveq	r3, #0
 6412 0024 DBB2     		uxtb	r3, r3
 6413              		.loc 1 3132 14
 6414 0026 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 167


3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 6415              		.loc 1 3133 13
 6416 0028 BB68     		ldr	r3, [r7, #8]
 6417 002a 93F83D30 		ldrb	r3, [r3, #61]
 6418 002e DBB2     		uxtb	r3, r3
 6419              		.loc 1 3133 6
 6420 0030 212B     		cmp	r3, #33
 6421 0032 08D1     		bne	.L323
 6422              		.loc 1 3133 49 discriminator 1
 6423 0034 FB68     		ldr	r3, [r7, #12]
 6424 0036 002B     		cmp	r3, #0
 6425 0038 05D0     		beq	.L323
3134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 6426              		.loc 1 3135 24
 6427 003a BB68     		ldr	r3, [r7, #8]
 6428 003c 0022     		movs	r2, #0
 6429 003e DA84     		strh	r2, [r3, #38]	@ movhi
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 6430              		.loc 1 3136 5
 6431 0040 B868     		ldr	r0, [r7, #8]
 6432 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 6433              	.L323:
3137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 6434              		.loc 1 3140 16
 6435 0046 BB68     		ldr	r3, [r7, #8]
 6436 0048 1B68     		ldr	r3, [r3]
 6437 004a 5B69     		ldr	r3, [r3, #20]
 6438 004c 03F04003 		and	r3, r3, #64
 6439 0050 002B     		cmp	r3, #0
 6440 0052 14BF     		ite	ne
 6441 0054 0123     		movne	r3, #1
 6442 0056 0023     		moveq	r3, #0
 6443 0058 DBB2     		uxtb	r3, r3
 6444              		.loc 1 3140 14
 6445 005a FB60     		str	r3, [r7, #12]
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 6446              		.loc 1 3141 13
 6447 005c BB68     		ldr	r3, [r7, #8]
 6448 005e 93F83E30 		ldrb	r3, [r3, #62]
 6449 0062 DBB2     		uxtb	r3, r3
 6450              		.loc 1 3141 6
 6451 0064 222B     		cmp	r3, #34
 6452 0066 08D1     		bne	.L324
 6453              		.loc 1 3141 50 discriminator 1
 6454 0068 FB68     		ldr	r3, [r7, #12]
 6455 006a 002B     		cmp	r3, #0
 6456 006c 05D0     		beq	.L324
3142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 6457              		.loc 1 3143 24
 6458 006e BB68     		ldr	r3, [r7, #8]
 6459 0070 0022     		movs	r2, #0
 6460 0072 DA85     		strh	r2, [r3, #46]	@ movhi
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 168


3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 6461              		.loc 1 3144 5
 6462 0074 B868     		ldr	r0, [r7, #8]
 6463 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 6464              	.L324:
3145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 6465              		.loc 1 3147 20
 6466 007a BB68     		ldr	r3, [r7, #8]
 6467 007c 1B6C     		ldr	r3, [r3, #64]
 6468 007e 43F01002 		orr	r2, r3, #16
 6469 0082 BB68     		ldr	r3, [r7, #8]
 6470 0084 1A64     		str	r2, [r3, #64]
3148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered error callback*/
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback(huart);
 6471              		.loc 1 3150 8
 6472 0086 BB68     		ldr	r3, [r7, #8]
 6473 0088 5B6D     		ldr	r3, [r3, #84]
 6474              		.loc 1 3150 3
 6475 008a B868     		ldr	r0, [r7, #8]
 6476 008c 9847     		blx	r3
 6477              	.LVL24:
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak error callback*/
3153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6478              		.loc 1 3155 1
 6479 008e 00BF     		nop
 6480 0090 1037     		adds	r7, r7, #16
 6481              	.LCFI284:
 6482              		.cfi_def_cfa_offset 8
 6483 0092 BD46     		mov	sp, r7
 6484              	.LCFI285:
 6485              		.cfi_def_cfa_register 13
 6486              		@ sp needed
 6487 0094 80BD     		pop	{r7, pc}
 6488              		.cfi_endproc
 6489              	.LFE116:
 6491              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 6492              		.align	1
 6493              		.syntax unified
 6494              		.thumb
 6495              		.thumb_func
 6497              	UART_WaitOnFlagUntilTimeout:
 6498              	.LFB117:
3156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
3159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Tickstart Tick start value
3164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 169


3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6499              		.loc 1 3168 1
 6500              		.cfi_startproc
 6501              		@ args = 4, pretend = 0, frame = 16
 6502              		@ frame_needed = 1, uses_anonymous_args = 0
 6503 0000 80B5     		push	{r7, lr}
 6504              	.LCFI286:
 6505              		.cfi_def_cfa_offset 8
 6506              		.cfi_offset 7, -8
 6507              		.cfi_offset 14, -4
 6508 0002 84B0     		sub	sp, sp, #16
 6509              	.LCFI287:
 6510              		.cfi_def_cfa_offset 24
 6511 0004 00AF     		add	r7, sp, #0
 6512              	.LCFI288:
 6513              		.cfi_def_cfa_register 7
 6514 0006 F860     		str	r0, [r7, #12]
 6515 0008 B960     		str	r1, [r7, #8]
 6516 000a 3B60     		str	r3, [r7]
 6517 000c 1346     		mov	r3, r2
 6518 000e FB71     		strb	r3, [r7, #7]
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 6519              		.loc 1 3170 9
 6520 0010 2CE0     		b	.L326
 6521              	.L329:
3171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check for the Timeout */
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 6522              		.loc 1 3173 8
 6523 0012 BB69     		ldr	r3, [r7, #24]
 6524 0014 B3F1FF3F 		cmp	r3, #-1
 6525 0018 28D0     		beq	.L326
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 6526              		.loc 1 3175 10
 6527 001a BB69     		ldr	r3, [r7, #24]
 6528 001c 002B     		cmp	r3, #0
 6529 001e 07D0     		beq	.L327
 6530              		.loc 1 3175 32 discriminator 1
 6531 0020 FFF7FEFF 		bl	HAL_GetTick
 6532 0024 0246     		mov	r2, r0
 6533              		.loc 1 3175 46 discriminator 1
 6534 0026 3B68     		ldr	r3, [r7]
 6535 0028 D31A     		subs	r3, r2, r3
 6536              		.loc 1 3175 27 discriminator 1
 6537 002a BA69     		ldr	r2, [r7, #24]
 6538 002c 9A42     		cmp	r2, r3
 6539 002e 1DD2     		bcs	.L326
 6540              	.L327:
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 6541              		.loc 1 3178 9
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 170


 6542 0030 FB68     		ldr	r3, [r7, #12]
 6543 0032 1B68     		ldr	r3, [r3]
 6544 0034 DA68     		ldr	r2, [r3, #12]
 6545 0036 FB68     		ldr	r3, [r7, #12]
 6546 0038 1B68     		ldr	r3, [r3]
 6547 003a 22F4D072 		bic	r2, r2, #416
 6548 003e DA60     		str	r2, [r3, #12]
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6549              		.loc 1 3179 9
 6550 0040 FB68     		ldr	r3, [r7, #12]
 6551 0042 1B68     		ldr	r3, [r3]
 6552 0044 5A69     		ldr	r2, [r3, #20]
 6553 0046 FB68     		ldr	r3, [r7, #12]
 6554 0048 1B68     		ldr	r3, [r3]
 6555 004a 22F00102 		bic	r2, r2, #1
 6556 004e 5A61     		str	r2, [r3, #20]
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 6557              		.loc 1 3181 24
 6558 0050 FB68     		ldr	r3, [r7, #12]
 6559 0052 2022     		movs	r2, #32
 6560 0054 83F83D20 		strb	r2, [r3, #61]
3182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6561              		.loc 1 3182 24
 6562 0058 FB68     		ldr	r3, [r7, #12]
 6563 005a 2022     		movs	r2, #32
 6564 005c 83F83E20 		strb	r2, [r3, #62]
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Process Unlocked */
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 6565              		.loc 1 3185 9
 6566 0060 FB68     		ldr	r3, [r7, #12]
 6567 0062 0022     		movs	r2, #0
 6568 0064 83F83C20 		strb	r2, [r3, #60]
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
 6569              		.loc 1 3187 16
 6570 0068 0323     		movs	r3, #3
 6571 006a 0FE0     		b	.L328
 6572              	.L326:
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6573              		.loc 1 3170 11
 6574 006c FB68     		ldr	r3, [r7, #12]
 6575 006e 1B68     		ldr	r3, [r3]
 6576 0070 1A68     		ldr	r2, [r3]
 6577 0072 BB68     		ldr	r3, [r7, #8]
 6578 0074 1340     		ands	r3, r3, r2
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6579              		.loc 1 3170 50
 6580 0076 BA68     		ldr	r2, [r7, #8]
 6581 0078 9A42     		cmp	r2, r3
 6582 007a 0CBF     		ite	eq
 6583 007c 0123     		moveq	r3, #1
 6584 007e 0023     		movne	r3, #0
 6585 0080 DBB2     		uxtb	r3, r3
 6586 0082 1A46     		mov	r2, r3
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 171


 6587              		.loc 1 3170 59
 6588 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 6589              		.loc 1 3170 9
 6590 0086 9A42     		cmp	r2, r3
 6591 0088 C3D0     		beq	.L329
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 6592              		.loc 1 3191 10
 6593 008a 0023     		movs	r3, #0
 6594              	.L328:
3192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6595              		.loc 1 3192 1
 6596 008c 1846     		mov	r0, r3
 6597 008e 1037     		adds	r7, r7, #16
 6598              	.LCFI289:
 6599              		.cfi_def_cfa_offset 8
 6600 0090 BD46     		mov	sp, r7
 6601              	.LCFI290:
 6602              		.cfi_def_cfa_register 13
 6603              		@ sp needed
 6604 0092 80BD     		pop	{r7, pc}
 6605              		.cfi_endproc
 6606              	.LFE117:
 6608              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 6609              		.align	1
 6610              		.global	UART_Start_Receive_IT
 6611              		.syntax unified
 6612              		.thumb
 6613              		.thumb_func
 6615              	UART_Start_Receive_IT:
 6616              	.LFB118:
3193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6617              		.loc 1 3206 1
 6618              		.cfi_startproc
 6619              		@ args = 0, pretend = 0, frame = 16
 6620              		@ frame_needed = 1, uses_anonymous_args = 0
 6621              		@ link register save eliminated.
 6622 0000 80B4     		push	{r7}
 6623              	.LCFI291:
 6624              		.cfi_def_cfa_offset 4
 6625              		.cfi_offset 7, -4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 172


 6626 0002 85B0     		sub	sp, sp, #20
 6627              	.LCFI292:
 6628              		.cfi_def_cfa_offset 24
 6629 0004 00AF     		add	r7, sp, #0
 6630              	.LCFI293:
 6631              		.cfi_def_cfa_register 7
 6632 0006 F860     		str	r0, [r7, #12]
 6633 0008 B960     		str	r1, [r7, #8]
 6634 000a 1346     		mov	r3, r2
 6635 000c FB80     		strh	r3, [r7, #6]	@ movhi
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 6636              		.loc 1 3207 21
 6637 000e FB68     		ldr	r3, [r7, #12]
 6638 0010 BA68     		ldr	r2, [r7, #8]
 6639 0012 9A62     		str	r2, [r3, #40]
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferSize = Size;
 6640              		.loc 1 3208 21
 6641 0014 FB68     		ldr	r3, [r7, #12]
 6642 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 6643 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = Size;
 6644              		.loc 1 3209 22
 6645 001a FB68     		ldr	r3, [r7, #12]
 6646 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 6647 001e DA85     		strh	r2, [r3, #46]	@ movhi
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6648              		.loc 1 3211 20
 6649 0020 FB68     		ldr	r3, [r7, #12]
 6650 0022 0022     		movs	r2, #0
 6651 0024 1A64     		str	r2, [r3, #64]
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 6652              		.loc 1 3212 18
 6653 0026 FB68     		ldr	r3, [r7, #12]
 6654 0028 2222     		movs	r2, #34
 6655 002a 83F83E20 		strb	r2, [r3, #62]
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
3215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6656              		.loc 1 3215 3
 6657 002e FB68     		ldr	r3, [r7, #12]
 6658 0030 0022     		movs	r2, #0
 6659 0032 83F83C20 		strb	r2, [r3, #60]
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 6660              		.loc 1 3218 3
 6661 0036 FB68     		ldr	r3, [r7, #12]
 6662 0038 1B68     		ldr	r3, [r3]
 6663 003a DA68     		ldr	r2, [r3, #12]
 6664 003c FB68     		ldr	r3, [r7, #12]
 6665 003e 1B68     		ldr	r3, [r3]
 6666 0040 42F48072 		orr	r2, r2, #256
 6667 0044 DA60     		str	r2, [r3, #12]
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 173


 6668              		.loc 1 3221 3
 6669 0046 FB68     		ldr	r3, [r7, #12]
 6670 0048 1B68     		ldr	r3, [r3]
 6671 004a 5A69     		ldr	r2, [r3, #20]
 6672 004c FB68     		ldr	r3, [r7, #12]
 6673 004e 1B68     		ldr	r3, [r3]
 6674 0050 42F00102 		orr	r2, r2, #1
 6675 0054 5A61     		str	r2, [r3, #20]
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 6676              		.loc 1 3224 3
 6677 0056 FB68     		ldr	r3, [r7, #12]
 6678 0058 1B68     		ldr	r3, [r3]
 6679 005a DA68     		ldr	r2, [r3, #12]
 6680 005c FB68     		ldr	r3, [r7, #12]
 6681 005e 1B68     		ldr	r3, [r3]
 6682 0060 42F02002 		orr	r2, r2, #32
 6683 0064 DA60     		str	r2, [r3, #12]
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 6684              		.loc 1 3226 10
 6685 0066 0023     		movs	r3, #0
3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6686              		.loc 1 3227 1
 6687 0068 1846     		mov	r0, r3
 6688 006a 1437     		adds	r7, r7, #20
 6689              	.LCFI294:
 6690              		.cfi_def_cfa_offset 4
 6691 006c BD46     		mov	sp, r7
 6692              	.LCFI295:
 6693              		.cfi_def_cfa_register 13
 6694              		@ sp needed
 6695 006e 80BC     		pop	{r7}
 6696              	.LCFI296:
 6697              		.cfi_restore 7
 6698              		.cfi_def_cfa_offset 0
 6699 0070 7047     		bx	lr
 6700              		.cfi_endproc
 6701              	.LFE118:
 6703              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 6704              		.align	1
 6705              		.global	UART_Start_Receive_DMA
 6706              		.syntax unified
 6707              		.thumb
 6708              		.thumb_func
 6710              	UART_Start_Receive_DMA:
 6711              	.LFB119:
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 174


3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6712              		.loc 1 3241 1
 6713              		.cfi_startproc
 6714              		@ args = 0, pretend = 0, frame = 24
 6715              		@ frame_needed = 1, uses_anonymous_args = 0
 6716 0000 80B5     		push	{r7, lr}
 6717              	.LCFI297:
 6718              		.cfi_def_cfa_offset 8
 6719              		.cfi_offset 7, -8
 6720              		.cfi_offset 14, -4
 6721 0002 86B0     		sub	sp, sp, #24
 6722              	.LCFI298:
 6723              		.cfi_def_cfa_offset 32
 6724 0004 00AF     		add	r7, sp, #0
 6725              	.LCFI299:
 6726              		.cfi_def_cfa_register 7
 6727 0006 F860     		str	r0, [r7, #12]
 6728 0008 B960     		str	r1, [r7, #8]
 6729 000a 1346     		mov	r3, r2
 6730 000c FB80     		strh	r3, [r7, #6]	@ movhi
3242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 6731              		.loc 1 3244 21
 6732 000e BA68     		ldr	r2, [r7, #8]
 6733 0010 FB68     		ldr	r3, [r7, #12]
 6734 0012 9A62     		str	r2, [r3, #40]
3245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferSize = Size;
 6735              		.loc 1 3245 21
 6736 0014 FB68     		ldr	r3, [r7, #12]
 6737 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 6738 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6739              		.loc 1 3247 20
 6740 001a FB68     		ldr	r3, [r7, #12]
 6741 001c 0022     		movs	r2, #0
 6742 001e 1A64     		str	r2, [r3, #64]
3248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 6743              		.loc 1 3248 18
 6744 0020 FB68     		ldr	r3, [r7, #12]
 6745 0022 2222     		movs	r2, #34
 6746 0024 83F83E20 		strb	r2, [r3, #62]
3249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 6747              		.loc 1 3251 8
 6748 0028 FB68     		ldr	r3, [r7, #12]
 6749 002a 9B6B     		ldr	r3, [r3, #56]
 6750              		.loc 1 3251 35
 6751 002c 234A     		ldr	r2, .L334
 6752 002e 9A62     		str	r2, [r3, #40]
3252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 175


3253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 6753              		.loc 1 3254 8
 6754 0030 FB68     		ldr	r3, [r7, #12]
 6755 0032 9B6B     		ldr	r3, [r3, #56]
 6756              		.loc 1 3254 39
 6757 0034 224A     		ldr	r2, .L334+4
 6758 0036 DA62     		str	r2, [r3, #44]
3255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the DMA error callback */
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
 6759              		.loc 1 3257 8
 6760 0038 FB68     		ldr	r3, [r7, #12]
 6761 003a 9B6B     		ldr	r3, [r3, #56]
 6762              		.loc 1 3257 36
 6763 003c 214A     		ldr	r2, .L334+8
 6764 003e 1A63     		str	r2, [r3, #48]
3258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the DMA abort callback */
3260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 6765              		.loc 1 3260 8
 6766 0040 FB68     		ldr	r3, [r7, #12]
 6767 0042 9B6B     		ldr	r3, [r3, #56]
 6768              		.loc 1 3260 36
 6769 0044 0022     		movs	r2, #0
 6770 0046 5A63     		str	r2, [r3, #52]
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the DMA stream */
3263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
 6771              		.loc 1 3263 7
 6772 0048 07F10803 		add	r3, r7, #8
 6773 004c 7B61     		str	r3, [r7, #20]
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 6774              		.loc 1 3264 3
 6775 004e FB68     		ldr	r3, [r7, #12]
 6776 0050 986B     		ldr	r0, [r3, #56]
 6777              		.loc 1 3264 51
 6778 0052 FB68     		ldr	r3, [r7, #12]
 6779 0054 1B68     		ldr	r3, [r3]
 6780              		.loc 1 3264 45
 6781 0056 0433     		adds	r3, r3, #4
 6782              		.loc 1 3264 3
 6783 0058 1946     		mov	r1, r3
 6784 005a 7B69     		ldr	r3, [r7, #20]
 6785 005c 1A68     		ldr	r2, [r3]
 6786 005e FB88     		ldrh	r3, [r7, #6]
 6787 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6788              	.LBB11:
3265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
 6789              		.loc 1 3267 3
 6790 0064 0023     		movs	r3, #0
 6791 0066 3B61     		str	r3, [r7, #16]
 6792 0068 FB68     		ldr	r3, [r7, #12]
 6793 006a 1B68     		ldr	r3, [r3]
 6794 006c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 176


 6795 006e 3B61     		str	r3, [r7, #16]
 6796 0070 FB68     		ldr	r3, [r7, #12]
 6797 0072 1B68     		ldr	r3, [r3]
 6798 0074 5B68     		ldr	r3, [r3, #4]
 6799 0076 3B61     		str	r3, [r7, #16]
 6800 0078 3B69     		ldr	r3, [r7, #16]
 6801              	.LBE11:
3268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
3270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6802              		.loc 1 3270 3
 6803 007a FB68     		ldr	r3, [r7, #12]
 6804 007c 0022     		movs	r2, #0
 6805 007e 83F83C20 		strb	r2, [r3, #60]
3271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6806              		.loc 1 3273 3
 6807 0082 FB68     		ldr	r3, [r7, #12]
 6808 0084 1B68     		ldr	r3, [r3]
 6809 0086 DA68     		ldr	r2, [r3, #12]
 6810 0088 FB68     		ldr	r3, [r7, #12]
 6811 008a 1B68     		ldr	r3, [r3]
 6812 008c 42F48072 		orr	r2, r2, #256
 6813 0090 DA60     		str	r2, [r3, #12]
3274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6814              		.loc 1 3276 3
 6815 0092 FB68     		ldr	r3, [r7, #12]
 6816 0094 1B68     		ldr	r3, [r3]
 6817 0096 5A69     		ldr	r2, [r3, #20]
 6818 0098 FB68     		ldr	r3, [r7, #12]
 6819 009a 1B68     		ldr	r3, [r3]
 6820 009c 42F00102 		orr	r2, r2, #1
 6821 00a0 5A61     		str	r2, [r3, #20]
3277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   in the UART CR3 register */
3280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6822              		.loc 1 3280 3
 6823 00a2 FB68     		ldr	r3, [r7, #12]
 6824 00a4 1B68     		ldr	r3, [r3]
 6825 00a6 5A69     		ldr	r2, [r3, #20]
 6826 00a8 FB68     		ldr	r3, [r7, #12]
 6827 00aa 1B68     		ldr	r3, [r3]
 6828 00ac 42F04002 		orr	r2, r2, #64
 6829 00b0 5A61     		str	r2, [r3, #20]
3281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 6830              		.loc 1 3282 10
 6831 00b2 0023     		movs	r3, #0
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6832              		.loc 1 3283 1
 6833 00b4 1846     		mov	r0, r3
 6834 00b6 1837     		adds	r7, r7, #24
 6835              	.LCFI300:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 177


 6836              		.cfi_def_cfa_offset 8
 6837 00b8 BD46     		mov	sp, r7
 6838              	.LCFI301:
 6839              		.cfi_def_cfa_register 13
 6840              		@ sp needed
 6841 00ba 80BD     		pop	{r7, pc}
 6842              	.L335:
 6843              		.align	2
 6844              	.L334:
 6845 00bc 00000000 		.word	UART_DMAReceiveCplt
 6846 00c0 00000000 		.word	UART_DMARxHalfCplt
 6847 00c4 00000000 		.word	UART_DMAError
 6848              		.cfi_endproc
 6849              	.LFE119:
 6851              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 6852              		.align	1
 6853              		.syntax unified
 6854              		.thumb
 6855              		.thumb_func
 6857              	UART_EndTxTransfer:
 6858              	.LFB120:
3284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6859              		.loc 1 3291 1
 6860              		.cfi_startproc
 6861              		@ args = 0, pretend = 0, frame = 8
 6862              		@ frame_needed = 1, uses_anonymous_args = 0
 6863              		@ link register save eliminated.
 6864 0000 80B4     		push	{r7}
 6865              	.LCFI302:
 6866              		.cfi_def_cfa_offset 4
 6867              		.cfi_offset 7, -4
 6868 0002 83B0     		sub	sp, sp, #12
 6869              	.LCFI303:
 6870              		.cfi_def_cfa_offset 16
 6871 0004 00AF     		add	r7, sp, #0
 6872              	.LCFI304:
 6873              		.cfi_def_cfa_register 7
 6874 0006 7860     		str	r0, [r7, #4]
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 6875              		.loc 1 3293 3
 6876 0008 7B68     		ldr	r3, [r7, #4]
 6877 000a 1B68     		ldr	r3, [r3]
 6878 000c DA68     		ldr	r2, [r3, #12]
 6879 000e 7B68     		ldr	r3, [r7, #4]
 6880 0010 1B68     		ldr	r3, [r3]
 6881 0012 22F0C002 		bic	r2, r2, #192
 6882 0016 DA60     		str	r2, [r3, #12]
3294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 178


3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6883              		.loc 1 3296 17
 6884 0018 7B68     		ldr	r3, [r7, #4]
 6885 001a 2022     		movs	r2, #32
 6886 001c 83F83D20 		strb	r2, [r3, #61]
3297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6887              		.loc 1 3297 1
 6888 0020 00BF     		nop
 6889 0022 0C37     		adds	r7, r7, #12
 6890              	.LCFI305:
 6891              		.cfi_def_cfa_offset 4
 6892 0024 BD46     		mov	sp, r7
 6893              	.LCFI306:
 6894              		.cfi_def_cfa_register 13
 6895              		@ sp needed
 6896 0026 80BC     		pop	{r7}
 6897              	.LCFI307:
 6898              		.cfi_restore 7
 6899              		.cfi_def_cfa_offset 0
 6900 0028 7047     		bx	lr
 6901              		.cfi_endproc
 6902              	.LFE120:
 6904              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 6905              		.align	1
 6906              		.syntax unified
 6907              		.thumb
 6908              		.thumb_func
 6910              	UART_EndRxTransfer:
 6911              	.LFB121:
3298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6912              		.loc 1 3305 1
 6913              		.cfi_startproc
 6914              		@ args = 0, pretend = 0, frame = 8
 6915              		@ frame_needed = 1, uses_anonymous_args = 0
 6916              		@ link register save eliminated.
 6917 0000 80B4     		push	{r7}
 6918              	.LCFI308:
 6919              		.cfi_def_cfa_offset 4
 6920              		.cfi_offset 7, -4
 6921 0002 83B0     		sub	sp, sp, #12
 6922              	.LCFI309:
 6923              		.cfi_def_cfa_offset 16
 6924 0004 00AF     		add	r7, sp, #0
 6925              	.LCFI310:
 6926              		.cfi_def_cfa_register 7
 6927 0006 7860     		str	r0, [r7, #4]
3306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6928              		.loc 1 3307 3
 6929 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 179


 6930 000a 1B68     		ldr	r3, [r3]
 6931 000c DA68     		ldr	r2, [r3, #12]
 6932 000e 7B68     		ldr	r3, [r7, #4]
 6933 0010 1B68     		ldr	r3, [r3]
 6934 0012 22F49072 		bic	r2, r2, #288
 6935 0016 DA60     		str	r2, [r3, #12]
3308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6936              		.loc 1 3308 3
 6937 0018 7B68     		ldr	r3, [r7, #4]
 6938 001a 1B68     		ldr	r3, [r3]
 6939 001c 5A69     		ldr	r2, [r3, #20]
 6940 001e 7B68     		ldr	r3, [r7, #4]
 6941 0020 1B68     		ldr	r3, [r3]
 6942 0022 22F00102 		bic	r2, r2, #1
 6943 0026 5A61     		str	r2, [r3, #20]
3309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 6944              		.loc 1 3311 12
 6945 0028 7B68     		ldr	r3, [r7, #4]
 6946 002a 1B6B     		ldr	r3, [r3, #48]
 6947              		.loc 1 3311 6
 6948 002c 012B     		cmp	r3, #1
 6949 002e 07D1     		bne	.L338
3312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6950              		.loc 1 3313 5
 6951 0030 7B68     		ldr	r3, [r7, #4]
 6952 0032 1B68     		ldr	r3, [r3]
 6953 0034 DA68     		ldr	r2, [r3, #12]
 6954 0036 7B68     		ldr	r3, [r7, #4]
 6955 0038 1B68     		ldr	r3, [r3]
 6956 003a 22F01002 		bic	r2, r2, #16
 6957 003e DA60     		str	r2, [r3, #12]
 6958              	.L338:
3314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6959              		.loc 1 3317 18
 6960 0040 7B68     		ldr	r3, [r7, #4]
 6961 0042 2022     		movs	r2, #32
 6962 0044 83F83E20 		strb	r2, [r3, #62]
3318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6963              		.loc 1 3318 24
 6964 0048 7B68     		ldr	r3, [r7, #4]
 6965 004a 0022     		movs	r2, #0
 6966 004c 1A63     		str	r2, [r3, #48]
3319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6967              		.loc 1 3319 1
 6968 004e 00BF     		nop
 6969 0050 0C37     		adds	r7, r7, #12
 6970              	.LCFI311:
 6971              		.cfi_def_cfa_offset 4
 6972 0052 BD46     		mov	sp, r7
 6973              	.LCFI312:
 6974              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 180


 6975              		@ sp needed
 6976 0054 80BC     		pop	{r7}
 6977              	.LCFI313:
 6978              		.cfi_restore 7
 6979              		.cfi_def_cfa_offset 0
 6980 0056 7047     		bx	lr
 6981              		.cfi_endproc
 6982              	.LFE121:
 6984              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 6985              		.align	1
 6986              		.syntax unified
 6987              		.thumb
 6988              		.thumb_func
 6990              	UART_DMAAbortOnError:
 6991              	.LFB122:
3320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6992              		.loc 1 3329 1
 6993              		.cfi_startproc
 6994              		@ args = 0, pretend = 0, frame = 16
 6995              		@ frame_needed = 1, uses_anonymous_args = 0
 6996 0000 80B5     		push	{r7, lr}
 6997              	.LCFI314:
 6998              		.cfi_def_cfa_offset 8
 6999              		.cfi_offset 7, -8
 7000              		.cfi_offset 14, -4
 7001 0002 84B0     		sub	sp, sp, #16
 7002              	.LCFI315:
 7003              		.cfi_def_cfa_offset 24
 7004 0004 00AF     		add	r7, sp, #0
 7005              	.LCFI316:
 7006              		.cfi_def_cfa_register 7
 7007 0006 7860     		str	r0, [r7, #4]
3330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7008              		.loc 1 3330 23
 7009 0008 7B68     		ldr	r3, [r7, #4]
 7010 000a 5B6A     		ldr	r3, [r3, #36]
 7011 000c FB60     		str	r3, [r7, #12]
3331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 7012              		.loc 1 3331 22
 7013 000e FB68     		ldr	r3, [r7, #12]
 7014 0010 0022     		movs	r2, #0
 7015 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 7016              		.loc 1 3332 22
 7017 0014 FB68     		ldr	r3, [r7, #12]
 7018 0016 0022     		movs	r2, #0
 7019 0018 DA84     		strh	r2, [r3, #38]	@ movhi
3333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 181


3334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered error callback*/
3336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback(huart);
 7020              		.loc 1 3336 8
 7021 001a FB68     		ldr	r3, [r7, #12]
 7022 001c 5B6D     		ldr	r3, [r3, #84]
 7023              		.loc 1 3336 3
 7024 001e F868     		ldr	r0, [r7, #12]
 7025 0020 9847     		blx	r3
 7026              	.LVL25:
3337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak error callback*/
3339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7027              		.loc 1 3341 1
 7028 0022 00BF     		nop
 7029 0024 1037     		adds	r7, r7, #16
 7030              	.LCFI317:
 7031              		.cfi_def_cfa_offset 8
 7032 0026 BD46     		mov	sp, r7
 7033              	.LCFI318:
 7034              		.cfi_def_cfa_register 13
 7035              		@ sp needed
 7036 0028 80BD     		pop	{r7, pc}
 7037              		.cfi_endproc
 7038              	.LFE122:
 7040              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 7041              		.align	1
 7042              		.syntax unified
 7043              		.thumb
 7044              		.thumb_func
 7046              	UART_DMATxAbortCallback:
 7047              	.LFB123:
3342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 7048              		.loc 1 3353 1
 7049              		.cfi_startproc
 7050              		@ args = 0, pretend = 0, frame = 16
 7051              		@ frame_needed = 1, uses_anonymous_args = 0
 7052 0000 80B5     		push	{r7, lr}
 7053              	.LCFI319:
 7054              		.cfi_def_cfa_offset 8
 7055              		.cfi_offset 7, -8
 7056              		.cfi_offset 14, -4
 7057 0002 84B0     		sub	sp, sp, #16
 7058              	.LCFI320:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 182


 7059              		.cfi_def_cfa_offset 24
 7060 0004 00AF     		add	r7, sp, #0
 7061              	.LCFI321:
 7062              		.cfi_def_cfa_register 7
 7063 0006 7860     		str	r0, [r7, #4]
3354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7064              		.loc 1 3354 23
 7065 0008 7B68     		ldr	r3, [r7, #4]
 7066 000a 5B6A     		ldr	r3, [r3, #36]
 7067 000c FB60     		str	r3, [r7, #12]
3355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 7068              		.loc 1 3356 8
 7069 000e FB68     		ldr	r3, [r7, #12]
 7070 0010 5B6B     		ldr	r3, [r3, #52]
 7071              		.loc 1 3356 36
 7072 0012 0022     		movs	r2, #0
 7073 0014 5A63     		str	r2, [r3, #52]
3357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 7074              		.loc 1 3359 12
 7075 0016 FB68     		ldr	r3, [r7, #12]
 7076 0018 9B6B     		ldr	r3, [r3, #56]
 7077              		.loc 1 3359 6
 7078 001a 002B     		cmp	r3, #0
 7079 001c 04D0     		beq	.L341
3360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 7080              		.loc 1 3361 14
 7081 001e FB68     		ldr	r3, [r7, #12]
 7082 0020 9B6B     		ldr	r3, [r3, #56]
 7083              		.loc 1 3361 22
 7084 0022 5B6B     		ldr	r3, [r3, #52]
 7085              		.loc 1 3361 8
 7086 0024 002B     		cmp	r3, #0
 7087 0026 18D1     		bne	.L343
 7088              	.L341:
3362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
3364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 7089              		.loc 1 3368 22
 7090 0028 FB68     		ldr	r3, [r7, #12]
 7091 002a 0022     		movs	r2, #0
 7092 002c DA84     		strh	r2, [r3, #38]	@ movhi
3369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 7093              		.loc 1 3369 22
 7094 002e FB68     		ldr	r3, [r7, #12]
 7095 0030 0022     		movs	r2, #0
 7096 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
3372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 183


 7097              		.loc 1 3372 20
 7098 0034 FB68     		ldr	r3, [r7, #12]
 7099 0036 0022     		movs	r2, #0
 7100 0038 1A64     		str	r2, [r3, #64]
3373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 7101              		.loc 1 3375 18
 7102 003a FB68     		ldr	r3, [r7, #12]
 7103 003c 2022     		movs	r2, #32
 7104 003e 83F83D20 		strb	r2, [r3, #61]
3376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7105              		.loc 1 3376 18
 7106 0042 FB68     		ldr	r3, [r7, #12]
 7107 0044 2022     		movs	r2, #32
 7108 0046 83F83E20 		strb	r2, [r3, #62]
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7109              		.loc 1 3377 24
 7110 004a FB68     		ldr	r3, [r7, #12]
 7111 004c 0022     		movs	r2, #0
 7112 004e 1A63     		str	r2, [r3, #48]
3378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort complete callback */
3382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
 7113              		.loc 1 3382 8
 7114 0050 FB68     		ldr	r3, [r7, #12]
 7115 0052 9B6D     		ldr	r3, [r3, #88]
 7116              		.loc 1 3382 3
 7117 0054 F868     		ldr	r0, [r7, #12]
 7118 0056 9847     		blx	r3
 7119              	.LVL26:
 7120 0058 00E0     		b	.L340
 7121              	.L343:
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 7122              		.loc 1 3363 7
 7123 005a 00BF     		nop
 7124              	.L340:
3383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7125              		.loc 1 3387 1
 7126 005c 1037     		adds	r7, r7, #16
 7127              	.LCFI322:
 7128              		.cfi_def_cfa_offset 8
 7129 005e BD46     		mov	sp, r7
 7130              	.LCFI323:
 7131              		.cfi_def_cfa_register 13
 7132              		@ sp needed
 7133 0060 80BD     		pop	{r7, pc}
 7134              		.cfi_endproc
 7135              	.LFE123:
 7137              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 7138              		.align	1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 184


 7139              		.syntax unified
 7140              		.thumb
 7141              		.thumb_func
 7143              	UART_DMARxAbortCallback:
 7144              	.LFB124:
3388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 7145              		.loc 1 3399 1
 7146              		.cfi_startproc
 7147              		@ args = 0, pretend = 0, frame = 16
 7148              		@ frame_needed = 1, uses_anonymous_args = 0
 7149 0000 80B5     		push	{r7, lr}
 7150              	.LCFI324:
 7151              		.cfi_def_cfa_offset 8
 7152              		.cfi_offset 7, -8
 7153              		.cfi_offset 14, -4
 7154 0002 84B0     		sub	sp, sp, #16
 7155              	.LCFI325:
 7156              		.cfi_def_cfa_offset 24
 7157 0004 00AF     		add	r7, sp, #0
 7158              	.LCFI326:
 7159              		.cfi_def_cfa_register 7
 7160 0006 7860     		str	r0, [r7, #4]
3400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7161              		.loc 1 3400 23
 7162 0008 7B68     		ldr	r3, [r7, #4]
 7163 000a 5B6A     		ldr	r3, [r3, #36]
 7164 000c FB60     		str	r3, [r7, #12]
3401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 7165              		.loc 1 3402 8
 7166 000e FB68     		ldr	r3, [r7, #12]
 7167 0010 9B6B     		ldr	r3, [r3, #56]
 7168              		.loc 1 3402 36
 7169 0012 0022     		movs	r2, #0
 7170 0014 5A63     		str	r2, [r3, #52]
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 7171              		.loc 1 3405 12
 7172 0016 FB68     		ldr	r3, [r7, #12]
 7173 0018 5B6B     		ldr	r3, [r3, #52]
 7174              		.loc 1 3405 6
 7175 001a 002B     		cmp	r3, #0
 7176 001c 04D0     		beq	.L345
3406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 185


 7177              		.loc 1 3407 14
 7178 001e FB68     		ldr	r3, [r7, #12]
 7179 0020 5B6B     		ldr	r3, [r3, #52]
 7180              		.loc 1 3407 22
 7181 0022 5B6B     		ldr	r3, [r3, #52]
 7182              		.loc 1 3407 8
 7183 0024 002B     		cmp	r3, #0
 7184 0026 18D1     		bne	.L347
 7185              	.L345:
3408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
3410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 7186              		.loc 1 3414 22
 7187 0028 FB68     		ldr	r3, [r7, #12]
 7188 002a 0022     		movs	r2, #0
 7189 002c DA84     		strh	r2, [r3, #38]	@ movhi
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 7190              		.loc 1 3415 22
 7191 002e FB68     		ldr	r3, [r7, #12]
 7192 0030 0022     		movs	r2, #0
 7193 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
3418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7194              		.loc 1 3418 20
 7195 0034 FB68     		ldr	r3, [r7, #12]
 7196 0036 0022     		movs	r2, #0
 7197 0038 1A64     		str	r2, [r3, #64]
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 7198              		.loc 1 3421 18
 7199 003a FB68     		ldr	r3, [r7, #12]
 7200 003c 2022     		movs	r2, #32
 7201 003e 83F83D20 		strb	r2, [r3, #61]
3422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7202              		.loc 1 3422 18
 7203 0042 FB68     		ldr	r3, [r7, #12]
 7204 0044 2022     		movs	r2, #32
 7205 0046 83F83E20 		strb	r2, [r3, #62]
3423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7206              		.loc 1 3423 24
 7207 004a FB68     		ldr	r3, [r7, #12]
 7208 004c 0022     		movs	r2, #0
 7209 004e 1A63     		str	r2, [r3, #48]
3424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort complete callback */
3428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
 7210              		.loc 1 3428 8
 7211 0050 FB68     		ldr	r3, [r7, #12]
 7212 0052 9B6D     		ldr	r3, [r3, #88]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 186


 7213              		.loc 1 3428 3
 7214 0054 F868     		ldr	r0, [r7, #12]
 7215 0056 9847     		blx	r3
 7216              	.LVL27:
 7217 0058 00E0     		b	.L344
 7218              	.L347:
3409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 7219              		.loc 1 3409 7
 7220 005a 00BF     		nop
 7221              	.L344:
3429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7222              		.loc 1 3433 1
 7223 005c 1037     		adds	r7, r7, #16
 7224              	.LCFI327:
 7225              		.cfi_def_cfa_offset 8
 7226 005e BD46     		mov	sp, r7
 7227              	.LCFI328:
 7228              		.cfi_def_cfa_register 13
 7229              		@ sp needed
 7230 0060 80BD     		pop	{r7, pc}
 7231              		.cfi_endproc
 7232              	.LFE124:
 7234              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 7235              		.align	1
 7236              		.syntax unified
 7237              		.thumb
 7238              		.thumb_func
 7240              	UART_DMATxOnlyAbortCallback:
 7241              	.LFB125:
3434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 7242              		.loc 1 3445 1
 7243              		.cfi_startproc
 7244              		@ args = 0, pretend = 0, frame = 16
 7245              		@ frame_needed = 1, uses_anonymous_args = 0
 7246 0000 80B5     		push	{r7, lr}
 7247              	.LCFI329:
 7248              		.cfi_def_cfa_offset 8
 7249              		.cfi_offset 7, -8
 7250              		.cfi_offset 14, -4
 7251 0002 84B0     		sub	sp, sp, #16
 7252              	.LCFI330:
 7253              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 187


 7254 0004 00AF     		add	r7, sp, #0
 7255              	.LCFI331:
 7256              		.cfi_def_cfa_register 7
 7257 0006 7860     		str	r0, [r7, #4]
3446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7258              		.loc 1 3446 23
 7259 0008 7B68     		ldr	r3, [r7, #4]
 7260 000a 5B6A     		ldr	r3, [r3, #36]
 7261 000c FB60     		str	r3, [r7, #12]
3447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 7262              		.loc 1 3448 22
 7263 000e FB68     		ldr	r3, [r7, #12]
 7264 0010 0022     		movs	r2, #0
 7265 0012 DA84     		strh	r2, [r3, #38]	@ movhi
3449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7266              		.loc 1 3451 17
 7267 0014 FB68     		ldr	r3, [r7, #12]
 7268 0016 2022     		movs	r2, #32
 7269 0018 83F83D20 		strb	r2, [r3, #61]
3452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
 7270              		.loc 1 3456 8
 7271 001c FB68     		ldr	r3, [r7, #12]
 7272 001e DB6D     		ldr	r3, [r3, #92]
 7273              		.loc 1 3456 3
 7274 0020 F868     		ldr	r0, [r7, #12]
 7275 0022 9847     		blx	r3
 7276              	.LVL28:
3457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7277              		.loc 1 3461 1
 7278 0024 00BF     		nop
 7279 0026 1037     		adds	r7, r7, #16
 7280              	.LCFI332:
 7281              		.cfi_def_cfa_offset 8
 7282 0028 BD46     		mov	sp, r7
 7283              	.LCFI333:
 7284              		.cfi_def_cfa_register 13
 7285              		@ sp needed
 7286 002a 80BD     		pop	{r7, pc}
 7287              		.cfi_endproc
 7288              	.LFE125:
 7290              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 7291              		.align	1
 7292              		.syntax unified
 7293              		.thumb
 7294              		.thumb_func
 7296              	UART_DMARxOnlyAbortCallback:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 188


 7297              	.LFB126:
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 7298              		.loc 1 3473 1
 7299              		.cfi_startproc
 7300              		@ args = 0, pretend = 0, frame = 16
 7301              		@ frame_needed = 1, uses_anonymous_args = 0
 7302 0000 80B5     		push	{r7, lr}
 7303              	.LCFI334:
 7304              		.cfi_def_cfa_offset 8
 7305              		.cfi_offset 7, -8
 7306              		.cfi_offset 14, -4
 7307 0002 84B0     		sub	sp, sp, #16
 7308              	.LCFI335:
 7309              		.cfi_def_cfa_offset 24
 7310 0004 00AF     		add	r7, sp, #0
 7311              	.LCFI336:
 7312              		.cfi_def_cfa_register 7
 7313 0006 7860     		str	r0, [r7, #4]
3474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7314              		.loc 1 3474 23
 7315 0008 7B68     		ldr	r3, [r7, #4]
 7316 000a 5B6A     		ldr	r3, [r3, #36]
 7317 000c FB60     		str	r3, [r7, #12]
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 7318              		.loc 1 3476 22
 7319 000e FB68     		ldr	r3, [r7, #12]
 7320 0010 0022     		movs	r2, #0
 7321 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7322              		.loc 1 3479 18
 7323 0014 FB68     		ldr	r3, [r7, #12]
 7324 0016 2022     		movs	r2, #32
 7325 0018 83F83E20 		strb	r2, [r3, #62]
3480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7326              		.loc 1 3480 24
 7327 001c FB68     		ldr	r3, [r7, #12]
 7328 001e 0022     		movs	r2, #0
 7329 0020 1A63     		str	r2, [r3, #48]
3481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 189


 7330              		.loc 1 3485 8
 7331 0022 FB68     		ldr	r3, [r7, #12]
 7332 0024 1B6E     		ldr	r3, [r3, #96]
 7333              		.loc 1 3485 3
 7334 0026 F868     		ldr	r0, [r7, #12]
 7335 0028 9847     		blx	r3
 7336              	.LVL29:
3486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7337              		.loc 1 3490 1
 7338 002a 00BF     		nop
 7339 002c 1037     		adds	r7, r7, #16
 7340              	.LCFI337:
 7341              		.cfi_def_cfa_offset 8
 7342 002e BD46     		mov	sp, r7
 7343              	.LCFI338:
 7344              		.cfi_def_cfa_register 13
 7345              		@ sp needed
 7346 0030 80BD     		pop	{r7, pc}
 7347              		.cfi_endproc
 7348              	.LFE126:
 7350              		.section	.text.UART_Transmit_IT,"ax",%progbits
 7351              		.align	1
 7352              		.syntax unified
 7353              		.thumb
 7354              		.thumb_func
 7356              	UART_Transmit_IT:
 7357              	.LFB127:
3491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
3494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 7358              		.loc 1 3499 1
 7359              		.cfi_startproc
 7360              		@ args = 0, pretend = 0, frame = 16
 7361              		@ frame_needed = 1, uses_anonymous_args = 0
 7362              		@ link register save eliminated.
 7363 0000 80B4     		push	{r7}
 7364              	.LCFI339:
 7365              		.cfi_def_cfa_offset 4
 7366              		.cfi_offset 7, -4
 7367 0002 85B0     		sub	sp, sp, #20
 7368              	.LCFI340:
 7369              		.cfi_def_cfa_offset 24
 7370 0004 00AF     		add	r7, sp, #0
 7371              	.LCFI341:
 7372              		.cfi_def_cfa_register 7
 7373 0006 7860     		str	r0, [r7, #4]
3500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *tmp;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 190


3501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7374              		.loc 1 3503 12
 7375 0008 7B68     		ldr	r3, [r7, #4]
 7376 000a 93F83D30 		ldrb	r3, [r3, #61]
 7377 000e DBB2     		uxtb	r3, r3
 7378              		.loc 1 3503 6
 7379 0010 212B     		cmp	r3, #33
 7380 0012 3ED1     		bne	.L351
3504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 7381              		.loc 1 3505 21
 7382 0014 7B68     		ldr	r3, [r7, #4]
 7383 0016 9B68     		ldr	r3, [r3, #8]
 7384              		.loc 1 3505 8
 7385 0018 B3F5805F 		cmp	r3, #4096
 7386 001c 14D1     		bne	.L352
 7387              		.loc 1 3505 71 discriminator 1
 7388 001e 7B68     		ldr	r3, [r7, #4]
 7389 0020 1B69     		ldr	r3, [r3, #16]
 7390              		.loc 1 3505 56 discriminator 1
 7391 0022 002B     		cmp	r3, #0
 7392 0024 10D1     		bne	.L352
3506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 7393              		.loc 1 3507 11
 7394 0026 7B68     		ldr	r3, [r7, #4]
 7395 0028 1B6A     		ldr	r3, [r3, #32]
 7396 002a FB60     		str	r3, [r7, #12]
3508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 7397              		.loc 1 3508 40
 7398 002c FB68     		ldr	r3, [r7, #12]
 7399 002e 1B88     		ldrh	r3, [r3]
 7400              		.loc 1 3508 29
 7401 0030 1A46     		mov	r2, r3
 7402              		.loc 1 3508 12
 7403 0032 7B68     		ldr	r3, [r7, #4]
 7404 0034 1B68     		ldr	r3, [r3]
 7405              		.loc 1 3508 29
 7406 0036 C2F30802 		ubfx	r2, r2, #0, #9
 7407              		.loc 1 3508 27
 7408 003a 5A60     		str	r2, [r3, #4]
3509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7409              		.loc 1 3509 25
 7410 003c 7B68     		ldr	r3, [r7, #4]
 7411 003e 1B6A     		ldr	r3, [r3, #32]
 7412 0040 9A1C     		adds	r2, r3, #2
 7413 0042 7B68     		ldr	r3, [r7, #4]
 7414 0044 1A62     		str	r2, [r3, #32]
 7415 0046 08E0     		b	.L353
 7416              	.L352:
3510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
3512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 7417              		.loc 1 3513 45
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 191


 7418 0048 7B68     		ldr	r3, [r7, #4]
 7419 004a 1B6A     		ldr	r3, [r3, #32]
 7420              		.loc 1 3513 57
 7421 004c 591C     		adds	r1, r3, #1
 7422 004e 7A68     		ldr	r2, [r7, #4]
 7423 0050 1162     		str	r1, [r2, #32]
 7424              		.loc 1 3513 39
 7425 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7426              		.loc 1 3513 12
 7427 0054 7B68     		ldr	r3, [r7, #4]
 7428 0056 1B68     		ldr	r3, [r3]
 7429              		.loc 1 3513 27
 7430 0058 5A60     		str	r2, [r3, #4]
 7431              	.L353:
3514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 7432              		.loc 1 3516 16
 7433 005a 7B68     		ldr	r3, [r7, #4]
 7434 005c DB8C     		ldrh	r3, [r3, #38]	@ movhi
 7435 005e 9BB2     		uxth	r3, r3
 7436              		.loc 1 3516 9
 7437 0060 013B     		subs	r3, r3, #1
 7438 0062 9BB2     		uxth	r3, r3
 7439              		.loc 1 3516 8
 7440 0064 7A68     		ldr	r2, [r7, #4]
 7441 0066 1946     		mov	r1, r3	@ movhi
 7442 0068 D184     		strh	r1, [r2, #38]	@ movhi
 7443 006a 002B     		cmp	r3, #0
 7444 006c 0FD1     		bne	.L354
3517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
3519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 7445              		.loc 1 3519 7
 7446 006e 7B68     		ldr	r3, [r7, #4]
 7447 0070 1B68     		ldr	r3, [r3]
 7448 0072 DA68     		ldr	r2, [r3, #12]
 7449 0074 7B68     		ldr	r3, [r7, #4]
 7450 0076 1B68     		ldr	r3, [r3]
 7451 0078 22F08002 		bic	r2, r2, #128
 7452 007c DA60     		str	r2, [r3, #12]
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 7453              		.loc 1 3522 7
 7454 007e 7B68     		ldr	r3, [r7, #4]
 7455 0080 1B68     		ldr	r3, [r3]
 7456 0082 DA68     		ldr	r2, [r3, #12]
 7457 0084 7B68     		ldr	r3, [r7, #4]
 7458 0086 1B68     		ldr	r3, [r3]
 7459 0088 42F04002 		orr	r2, r2, #64
 7460 008c DA60     		str	r2, [r3, #12]
 7461              	.L354:
3523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 7462              		.loc 1 3524 12
 7463 008e 0023     		movs	r3, #0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 192


 7464 0090 00E0     		b	.L355
 7465              	.L351:
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 7466              		.loc 1 3528 12
 7467 0092 0223     		movs	r3, #2
 7468              	.L355:
3529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7469              		.loc 1 3530 1
 7470 0094 1846     		mov	r0, r3
 7471 0096 1437     		adds	r7, r7, #20
 7472              	.LCFI342:
 7473              		.cfi_def_cfa_offset 4
 7474 0098 BD46     		mov	sp, r7
 7475              	.LCFI343:
 7476              		.cfi_def_cfa_register 13
 7477              		@ sp needed
 7478 009a 80BC     		pop	{r7}
 7479              	.LCFI344:
 7480              		.cfi_restore 7
 7481              		.cfi_def_cfa_offset 0
 7482 009c 7047     		bx	lr
 7483              		.cfi_endproc
 7484              	.LFE127:
 7486              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 7487              		.align	1
 7488              		.syntax unified
 7489              		.thumb
 7490              		.thumb_func
 7492              	UART_EndTransmit_IT:
 7493              	.LFB128:
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 7494              		.loc 1 3539 1
 7495              		.cfi_startproc
 7496              		@ args = 0, pretend = 0, frame = 8
 7497              		@ frame_needed = 1, uses_anonymous_args = 0
 7498 0000 80B5     		push	{r7, lr}
 7499              	.LCFI345:
 7500              		.cfi_def_cfa_offset 8
 7501              		.cfi_offset 7, -8
 7502              		.cfi_offset 14, -4
 7503 0002 82B0     		sub	sp, sp, #8
 7504              	.LCFI346:
 7505              		.cfi_def_cfa_offset 16
 7506 0004 00AF     		add	r7, sp, #0
 7507              	.LCFI347:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 193


 7508              		.cfi_def_cfa_register 7
 7509 0006 7860     		str	r0, [r7, #4]
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 7510              		.loc 1 3541 3
 7511 0008 7B68     		ldr	r3, [r7, #4]
 7512 000a 1B68     		ldr	r3, [r3]
 7513 000c DA68     		ldr	r2, [r3, #12]
 7514 000e 7B68     		ldr	r3, [r7, #4]
 7515 0010 1B68     		ldr	r3, [r3]
 7516 0012 22F04002 		bic	r2, r2, #64
 7517 0016 DA60     		str	r2, [r3, #12]
3542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7518              		.loc 1 3544 17
 7519 0018 7B68     		ldr	r3, [r7, #4]
 7520 001a 2022     		movs	r2, #32
 7521 001c 83F83D20 		strb	r2, [r3, #61]
3545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxCpltCallback(huart);
 7522              		.loc 1 3548 8
 7523 0020 7B68     		ldr	r3, [r7, #4]
 7524 0022 9B6C     		ldr	r3, [r3, #72]
 7525              		.loc 1 3548 3
 7526 0024 7868     		ldr	r0, [r7, #4]
 7527 0026 9847     		blx	r3
 7528              	.LVL30:
3549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
3552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 7529              		.loc 1 3554 10
 7530 0028 0023     		movs	r3, #0
3555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7531              		.loc 1 3555 1
 7532 002a 1846     		mov	r0, r3
 7533 002c 0837     		adds	r7, r7, #8
 7534              	.LCFI348:
 7535              		.cfi_def_cfa_offset 8
 7536 002e BD46     		mov	sp, r7
 7537              	.LCFI349:
 7538              		.cfi_def_cfa_register 13
 7539              		@ sp needed
 7540 0030 80BD     		pop	{r7, pc}
 7541              		.cfi_endproc
 7542              	.LFE128:
 7544              		.section	.text.UART_Receive_IT,"ax",%progbits
 7545              		.align	1
 7546              		.syntax unified
 7547              		.thumb
 7548              		.thumb_func
 7550              	UART_Receive_IT:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 194


 7551              	.LFB129:
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 7552              		.loc 1 3564 1
 7553              		.cfi_startproc
 7554              		@ args = 0, pretend = 0, frame = 24
 7555              		@ frame_needed = 1, uses_anonymous_args = 0
 7556 0000 80B5     		push	{r7, lr}
 7557              	.LCFI350:
 7558              		.cfi_def_cfa_offset 8
 7559              		.cfi_offset 7, -8
 7560              		.cfi_offset 14, -4
 7561 0002 86B0     		sub	sp, sp, #24
 7562              	.LCFI351:
 7563              		.cfi_def_cfa_offset 32
 7564 0004 00AF     		add	r7, sp, #0
 7565              	.LCFI352:
 7566              		.cfi_def_cfa_register 7
 7567 0006 7860     		str	r0, [r7, #4]
3565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
3566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
3567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7568              		.loc 1 3569 12
 7569 0008 7B68     		ldr	r3, [r7, #4]
 7570 000a 93F83E30 		ldrb	r3, [r3, #62]
 7571 000e DBB2     		uxtb	r3, r3
 7572              		.loc 1 3569 6
 7573 0010 222B     		cmp	r3, #34
 7574 0012 40F09B80 		bne	.L359
3570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 7575              		.loc 1 3571 21
 7576 0016 7B68     		ldr	r3, [r7, #4]
 7577 0018 9B68     		ldr	r3, [r3, #8]
 7578              		.loc 1 3571 8
 7579 001a B3F5805F 		cmp	r3, #4096
 7580 001e 17D1     		bne	.L360
 7581              		.loc 1 3571 71 discriminator 1
 7582 0020 7B68     		ldr	r3, [r7, #4]
 7583 0022 1B69     		ldr	r3, [r3, #16]
 7584              		.loc 1 3571 56 discriminator 1
 7585 0024 002B     		cmp	r3, #0
 7586 0026 13D1     		bne	.L360
3572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
 7587              		.loc 1 3573 19
 7588 0028 0023     		movs	r3, #0
 7589 002a 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 195


3574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 7590              		.loc 1 3574 19
 7591 002c 7B68     		ldr	r3, [r7, #4]
 7592 002e 9B6A     		ldr	r3, [r3, #40]
 7593 0030 3B61     		str	r3, [r7, #16]
3575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 7594              		.loc 1 3575 38
 7595 0032 7B68     		ldr	r3, [r7, #4]
 7596 0034 1B68     		ldr	r3, [r3]
 7597              		.loc 1 3575 48
 7598 0036 5B68     		ldr	r3, [r3, #4]
 7599              		.loc 1 3575 22
 7600 0038 9BB2     		uxth	r3, r3
 7601 003a C3F30803 		ubfx	r3, r3, #0, #9
 7602 003e 9AB2     		uxth	r2, r3
 7603              		.loc 1 3575 20
 7604 0040 3B69     		ldr	r3, [r7, #16]
 7605 0042 1A80     		strh	r2, [r3]	@ movhi
3576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 7606              		.loc 1 3576 25
 7607 0044 7B68     		ldr	r3, [r7, #4]
 7608 0046 9B6A     		ldr	r3, [r3, #40]
 7609 0048 9A1C     		adds	r2, r3, #2
 7610 004a 7B68     		ldr	r3, [r7, #4]
 7611 004c 9A62     		str	r2, [r3, #40]
 7612 004e 26E0     		b	.L361
 7613              	.L360:
3577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
3579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 7614              		.loc 1 3580 18
 7615 0050 7B68     		ldr	r3, [r7, #4]
 7616 0052 9B6A     		ldr	r3, [r3, #40]
 7617 0054 7B61     		str	r3, [r7, #20]
3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits  = NULL;
 7618              		.loc 1 3581 20
 7619 0056 0023     		movs	r3, #0
 7620 0058 3B61     		str	r3, [r7, #16]
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
 7621              		.loc 1 3583 23
 7622 005a 7B68     		ldr	r3, [r7, #4]
 7623 005c 9B68     		ldr	r3, [r3, #8]
 7624              		.loc 1 3583 10
 7625 005e B3F5805F 		cmp	r3, #4096
 7626 0062 07D0     		beq	.L362
 7627              		.loc 1 3583 74 discriminator 1
 7628 0064 7B68     		ldr	r3, [r7, #4]
 7629 0066 9B68     		ldr	r3, [r3, #8]
 7630              		.loc 1 3583 58 discriminator 1
 7631 0068 002B     		cmp	r3, #0
 7632 006a 0AD1     		bne	.L363
 7633              		.loc 1 3583 124 discriminator 2
 7634 006c 7B68     		ldr	r3, [r7, #4]
 7635 006e 1B69     		ldr	r3, [r3, #16]
 7636              		.loc 1 3583 109 discriminator 2
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 196


 7637 0070 002B     		cmp	r3, #0
 7638 0072 06D1     		bne	.L363
 7639              	.L362:
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 7640              		.loc 1 3585 38
 7641 0074 7B68     		ldr	r3, [r7, #4]
 7642 0076 1B68     		ldr	r3, [r3]
 7643              		.loc 1 3585 48
 7644 0078 5B68     		ldr	r3, [r3, #4]
 7645              		.loc 1 3585 23
 7646 007a DAB2     		uxtb	r2, r3
 7647              		.loc 1 3585 21
 7648 007c 7B69     		ldr	r3, [r7, #20]
 7649 007e 1A70     		strb	r2, [r3]
 7650 0080 08E0     		b	.L364
 7651              	.L363:
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
3588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 7652              		.loc 1 3589 38
 7653 0082 7B68     		ldr	r3, [r7, #4]
 7654 0084 1B68     		ldr	r3, [r3]
 7655              		.loc 1 3589 48
 7656 0086 5B68     		ldr	r3, [r3, #4]
 7657              		.loc 1 3589 23
 7658 0088 DBB2     		uxtb	r3, r3
 7659 008a 03F07F03 		and	r3, r3, #127
 7660 008e DAB2     		uxtb	r2, r3
 7661              		.loc 1 3589 21
 7662 0090 7B69     		ldr	r3, [r7, #20]
 7663 0092 1A70     		strb	r2, [r3]
 7664              	.L364:
3590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
 7665              		.loc 1 3591 25
 7666 0094 7B68     		ldr	r3, [r7, #4]
 7667 0096 9B6A     		ldr	r3, [r3, #40]
 7668 0098 5A1C     		adds	r2, r3, #1
 7669 009a 7B68     		ldr	r3, [r7, #4]
 7670 009c 9A62     		str	r2, [r3, #40]
 7671              	.L361:
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 7672              		.loc 1 3594 16
 7673 009e 7B68     		ldr	r3, [r7, #4]
 7674 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7675 00a2 9BB2     		uxth	r3, r3
 7676              		.loc 1 3594 9
 7677 00a4 013B     		subs	r3, r3, #1
 7678 00a6 9BB2     		uxth	r3, r3
 7679              		.loc 1 3594 8
 7680 00a8 7A68     		ldr	r2, [r7, #4]
 7681 00aa 1946     		mov	r1, r3	@ movhi
 7682 00ac D185     		strh	r1, [r2, #46]	@ movhi
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 197


 7683 00ae 002B     		cmp	r3, #0
 7684 00b0 4AD1     		bne	.L365
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 7685              		.loc 1 3597 7
 7686 00b2 7B68     		ldr	r3, [r7, #4]
 7687 00b4 1B68     		ldr	r3, [r3]
 7688 00b6 DA68     		ldr	r2, [r3, #12]
 7689 00b8 7B68     		ldr	r3, [r7, #4]
 7690 00ba 1B68     		ldr	r3, [r3]
 7691 00bc 22F02002 		bic	r2, r2, #32
 7692 00c0 DA60     		str	r2, [r3, #12]
3598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 7693              		.loc 1 3600 7
 7694 00c2 7B68     		ldr	r3, [r7, #4]
 7695 00c4 1B68     		ldr	r3, [r3]
 7696 00c6 DA68     		ldr	r2, [r3, #12]
 7697 00c8 7B68     		ldr	r3, [r7, #4]
 7698 00ca 1B68     		ldr	r3, [r3]
 7699 00cc 22F48072 		bic	r2, r2, #256
 7700 00d0 DA60     		str	r2, [r3, #12]
3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 7701              		.loc 1 3603 7
 7702 00d2 7B68     		ldr	r3, [r7, #4]
 7703 00d4 1B68     		ldr	r3, [r3]
 7704 00d6 5A69     		ldr	r2, [r3, #20]
 7705 00d8 7B68     		ldr	r3, [r7, #4]
 7706 00da 1B68     		ldr	r3, [r3]
 7707 00dc 22F00102 		bic	r2, r2, #1
 7708 00e0 5A61     		str	r2, [r3, #20]
3604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7709              		.loc 1 3606 22
 7710 00e2 7B68     		ldr	r3, [r7, #4]
 7711 00e4 2022     		movs	r2, #32
 7712 00e6 83F83E20 		strb	r2, [r3, #62]
3607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check current reception Mode :
3609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7713              		.loc 1 3610 16
 7714 00ea 7B68     		ldr	r3, [r7, #4]
 7715 00ec 1B6B     		ldr	r3, [r3, #48]
 7716              		.loc 1 3610 10
 7717 00ee 012B     		cmp	r3, #1
 7718 00f0 24D1     		bne	.L366
3611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Set reception type to Standard */
3613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 7719              		.loc 1 3613 30
 7720 00f2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 198


 7721 00f4 0022     		movs	r2, #0
 7722 00f6 1A63     		str	r2, [r3, #48]
3614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable IDLE interrupt */
3616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 7723              		.loc 1 3616 9
 7724 00f8 7B68     		ldr	r3, [r7, #4]
 7725 00fa 1B68     		ldr	r3, [r3]
 7726 00fc DA68     		ldr	r2, [r3, #12]
 7727 00fe 7B68     		ldr	r3, [r7, #4]
 7728 0100 1B68     		ldr	r3, [r3]
 7729 0102 22F01002 		bic	r2, r2, #16
 7730 0106 DA60     		str	r2, [r3, #12]
3617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Check if IDLE flag is set */
3619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 7731              		.loc 1 3619 13
 7732 0108 7B68     		ldr	r3, [r7, #4]
 7733 010a 1B68     		ldr	r3, [r3]
 7734 010c 1B68     		ldr	r3, [r3]
 7735 010e 03F01003 		and	r3, r3, #16
 7736              		.loc 1 3619 12
 7737 0112 102B     		cmp	r3, #16
 7738 0114 0AD1     		bne	.L367
 7739              	.LBB12:
3620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
3621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
 7740              		.loc 1 3622 11
 7741 0116 0023     		movs	r3, #0
 7742 0118 FB60     		str	r3, [r7, #12]
 7743 011a 7B68     		ldr	r3, [r7, #4]
 7744 011c 1B68     		ldr	r3, [r3]
 7745 011e 1B68     		ldr	r3, [r3]
 7746 0120 FB60     		str	r3, [r7, #12]
 7747 0122 7B68     		ldr	r3, [r7, #4]
 7748 0124 1B68     		ldr	r3, [r3]
 7749 0126 5B68     		ldr	r3, [r3, #4]
 7750 0128 FB60     		str	r3, [r7, #12]
 7751 012a FB68     		ldr	r3, [r7, #12]
 7752              	.L367:
 7753              	.LBE12:
3623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
3624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
 7754              		.loc 1 3627 14
 7755 012c 7B68     		ldr	r3, [r7, #4]
 7756 012e 9B6E     		ldr	r3, [r3, #104]
 7757              		.loc 1 3627 9
 7758 0130 7A68     		ldr	r2, [r7, #4]
 7759 0132 928D     		ldrh	r2, [r2, #44]
 7760 0134 1146     		mov	r1, r2
 7761 0136 7868     		ldr	r0, [r7, #4]
 7762 0138 9847     		blx	r3
 7763              	.LVL31:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 199


 7764 013a 03E0     		b	.L368
 7765              	.L366:
3628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif
3632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
3634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        /* Standard reception API called */
3636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)		  
3637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        /*Call registered Rx complete callback*/
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        huart->RxCpltCallback(huart);
 7766              		.loc 1 3638 13
 7767 013c 7B68     		ldr	r3, [r7, #4]
 7768 013e 1B6D     		ldr	r3, [r3, #80]
 7769              		.loc 1 3638 8
 7770 0140 7868     		ldr	r0, [r7, #4]
 7771 0142 9847     		blx	r3
 7772              	.LVL32:
 7773              	.L368:
3639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        /*Call legacy weak Rx complete callback*/
3641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        HAL_UART_RxCpltCallback(huart);
3642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
 7774              		.loc 1 3645 14
 7775 0144 0023     		movs	r3, #0
 7776 0146 02E0     		b	.L369
 7777              	.L365:
3646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 7778              		.loc 1 3647 12
 7779 0148 0023     		movs	r3, #0
 7780 014a 00E0     		b	.L369
 7781              	.L359:
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 7782              		.loc 1 3651 12
 7783 014c 0223     		movs	r3, #2
 7784              	.L369:
3652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7785              		.loc 1 3653 1
 7786 014e 1846     		mov	r0, r3
 7787 0150 1837     		adds	r7, r7, #24
 7788              	.LCFI353:
 7789              		.cfi_def_cfa_offset 8
 7790 0152 BD46     		mov	sp, r7
 7791              	.LCFI354:
 7792              		.cfi_def_cfa_register 13
 7793              		@ sp needed
 7794 0154 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 200


 7795              		.cfi_endproc
 7796              	.LFE129:
 7798              		.section	.text.UART_SetConfig,"ax",%progbits
 7799              		.align	1
 7800              		.syntax unified
 7801              		.thumb
 7802              		.thumb_func
 7804              	UART_SetConfig:
 7805              	.LFB130:
3654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 7806              		.loc 1 3662 1
 7807              		.cfi_startproc
 7808              		@ args = 0, pretend = 0, frame = 16
 7809              		@ frame_needed = 1, uses_anonymous_args = 0
 7810 0000 80B5     		push	{r7, lr}
 7811              	.LCFI355:
 7812              		.cfi_def_cfa_offset 8
 7813              		.cfi_offset 7, -8
 7814              		.cfi_offset 14, -4
 7815 0002 84B0     		sub	sp, sp, #16
 7816              	.LCFI356:
 7817              		.cfi_def_cfa_offset 24
 7818 0004 00AF     		add	r7, sp, #0
 7819              	.LCFI357:
 7820              		.cfi_def_cfa_register 7
 7821 0006 7860     		str	r0, [r7, #4]
3663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg;
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t pclk;
3665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
3667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      according to huart->Init.StopBits value */
3675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 7822              		.loc 1 3675 3
 7823 0008 7B68     		ldr	r3, [r7, #4]
 7824 000a 1B68     		ldr	r3, [r3]
 7825 000c 1B69     		ldr	r3, [r3, #16]
 7826 000e 23F44051 		bic	r1, r3, #12288
 7827 0012 7B68     		ldr	r3, [r7, #4]
 7828 0014 DA68     		ldr	r2, [r3, #12]
 7829 0016 7B68     		ldr	r3, [r7, #4]
 7830 0018 1B68     		ldr	r3, [r3]
 7831 001a 0A43     		orrs	r2, r2, r1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 201


 7832 001c 1A61     		str	r2, [r3, #16]
3676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
3685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
3687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
3689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 7833              		.loc 1 3690 33
 7834 001e 7B68     		ldr	r3, [r7, #4]
 7835 0020 9A68     		ldr	r2, [r3, #8]
 7836              		.loc 1 3690 58
 7837 0022 7B68     		ldr	r3, [r7, #4]
 7838 0024 1B69     		ldr	r3, [r3, #16]
 7839              		.loc 1 3690 45
 7840 0026 1A43     		orrs	r2, r2, r3
 7841              		.loc 1 3690 79
 7842 0028 7B68     		ldr	r3, [r7, #4]
 7843 002a 5B69     		ldr	r3, [r3, #20]
 7844              		.loc 1 3690 10
 7845 002c 1343     		orrs	r3, r3, r2
 7846 002e BB60     		str	r3, [r7, #8]
3691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 7847              		.loc 1 3691 3
 7848 0030 7B68     		ldr	r3, [r7, #4]
 7849 0032 1B68     		ldr	r3, [r3]
 7850 0034 DB68     		ldr	r3, [r3, #12]
 7851 0036 23F4B053 		bic	r3, r3, #5632
 7852 003a 23F00C03 		bic	r3, r3, #12
 7853 003e 7A68     		ldr	r2, [r7, #4]
 7854 0040 1268     		ldr	r2, [r2]
 7855 0042 B968     		ldr	r1, [r7, #8]
 7856 0044 0B43     		orrs	r3, r3, r1
 7857 0046 D360     		str	r3, [r2, #12]
3692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE),
3693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
3694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
3695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 7858              		.loc 1 3698 3
 7859 0048 7B68     		ldr	r3, [r7, #4]
 7860 004a 1B68     		ldr	r3, [r3]
 7861 004c 5B69     		ldr	r3, [r3, #20]
 7862 004e 23F44071 		bic	r1, r3, #768
 7863 0052 7B68     		ldr	r3, [r7, #4]
 7864 0054 9A69     		ldr	r2, [r3, #24]
 7865 0056 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 202


 7866 0058 1B68     		ldr	r3, [r3]
 7867 005a 0A43     		orrs	r2, r2, r1
 7868 005c 5A61     		str	r2, [r3, #20]
3699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Instance == USART1)
 7869              		.loc 1 3701 11
 7870 005e 7B68     		ldr	r3, [r7, #4]
 7871 0060 1B68     		ldr	r3, [r3]
 7872              		.loc 1 3701 5
 7873 0062 2C4A     		ldr	r2, .L373
 7874 0064 9342     		cmp	r3, r2
 7875 0066 03D1     		bne	.L371
3702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     pclk = HAL_RCC_GetPCLK2Freq();
 7876              		.loc 1 3703 12
 7877 0068 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 7878 006c F860     		str	r0, [r7, #12]
 7879 006e 02E0     		b	.L372
 7880              	.L371:
3704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     pclk = HAL_RCC_GetPCLK1Freq();
 7881              		.loc 1 3707 12
 7882 0070 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7883 0074 F860     		str	r0, [r7, #12]
 7884              	.L372:
3708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
3712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 7885              		.loc 1 3721 26
 7886 0076 FA68     		ldr	r2, [r7, #12]
 7887 0078 1346     		mov	r3, r2
 7888 007a 9B00     		lsls	r3, r3, #2
 7889 007c 1344     		add	r3, r3, r2
 7890 007e 9A00     		lsls	r2, r3, #2
 7891 0080 1A44     		add	r2, r2, r3
 7892 0082 7B68     		ldr	r3, [r7, #4]
 7893 0084 5B68     		ldr	r3, [r3, #4]
 7894 0086 9B00     		lsls	r3, r3, #2
 7895 0088 B2FBF3F3 		udiv	r3, r2, r3
 7896 008c 224A     		ldr	r2, .L373+4
 7897 008e A2FB0323 		umull	r2, r3, r2, r3
 7898 0092 5B09     		lsrs	r3, r3, #5
 7899 0094 1901     		lsls	r1, r3, #4
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 203


 7900 0096 FA68     		ldr	r2, [r7, #12]
 7901 0098 1346     		mov	r3, r2
 7902 009a 9B00     		lsls	r3, r3, #2
 7903 009c 1344     		add	r3, r3, r2
 7904 009e 9A00     		lsls	r2, r3, #2
 7905 00a0 1A44     		add	r2, r2, r3
 7906 00a2 7B68     		ldr	r3, [r7, #4]
 7907 00a4 5B68     		ldr	r3, [r3, #4]
 7908 00a6 9B00     		lsls	r3, r3, #2
 7909 00a8 B2FBF3F2 		udiv	r2, r2, r3
 7910 00ac 1A4B     		ldr	r3, .L373+4
 7911 00ae A3FB0203 		umull	r0, r3, r3, r2
 7912 00b2 5B09     		lsrs	r3, r3, #5
 7913 00b4 6420     		movs	r0, #100
 7914 00b6 00FB03F3 		mul	r3, r0, r3
 7915 00ba D31A     		subs	r3, r2, r3
 7916 00bc 1B01     		lsls	r3, r3, #4
 7917 00be 3233     		adds	r3, r3, #50
 7918 00c0 154A     		ldr	r2, .L373+4
 7919 00c2 A2FB0323 		umull	r2, r3, r2, r3
 7920 00c6 5B09     		lsrs	r3, r3, #5
 7921 00c8 03F0F003 		and	r3, r3, #240
 7922 00cc 1944     		add	r1, r1, r3
 7923 00ce FA68     		ldr	r2, [r7, #12]
 7924 00d0 1346     		mov	r3, r2
 7925 00d2 9B00     		lsls	r3, r3, #2
 7926 00d4 1344     		add	r3, r3, r2
 7927 00d6 9A00     		lsls	r2, r3, #2
 7928 00d8 1A44     		add	r2, r2, r3
 7929 00da 7B68     		ldr	r3, [r7, #4]
 7930 00dc 5B68     		ldr	r3, [r3, #4]
 7931 00de 9B00     		lsls	r3, r3, #2
 7932 00e0 B2FBF3F2 		udiv	r2, r2, r3
 7933 00e4 0C4B     		ldr	r3, .L373+4
 7934 00e6 A3FB0203 		umull	r0, r3, r3, r2
 7935 00ea 5B09     		lsrs	r3, r3, #5
 7936 00ec 6420     		movs	r0, #100
 7937 00ee 00FB03F3 		mul	r3, r0, r3
 7938 00f2 D31A     		subs	r3, r2, r3
 7939 00f4 1B01     		lsls	r3, r3, #4
 7940 00f6 3233     		adds	r3, r3, #50
 7941 00f8 074A     		ldr	r2, .L373+4
 7942 00fa A2FB0323 		umull	r2, r3, r2, r3
 7943 00fe 5B09     		lsrs	r3, r3, #5
 7944 0100 03F00F02 		and	r2, r3, #15
 7945              		.loc 1 3721 8
 7946 0104 7B68     		ldr	r3, [r7, #4]
 7947 0106 1B68     		ldr	r3, [r3]
 7948              		.loc 1 3721 26
 7949 0108 0A44     		add	r2, r2, r1
 7950              		.loc 1 3721 24
 7951 010a 9A60     		str	r2, [r3, #8]
3722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
3723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 7952              		.loc 1 3723 1
 7953 010c 00BF     		nop
 7954 010e 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 204


 7955              	.LCFI358:
 7956              		.cfi_def_cfa_offset 8
 7957 0110 BD46     		mov	sp, r7
 7958              	.LCFI359:
 7959              		.cfi_def_cfa_register 13
 7960              		@ sp needed
 7961 0112 80BD     		pop	{r7, pc}
 7962              	.L374:
 7963              		.align	2
 7964              	.L373:
 7965 0114 00380140 		.word	1073821696
 7966 0118 1F85EB51 		.word	1374389535
 7967              		.cfi_endproc
 7968              	.LFE130:
 7970              		.text
 7971              	.Letext0:
 7972              		.file 2 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 7973              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 7974              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 7975              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 7976              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 7977              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 7978              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 205


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_uart.c
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:18     .text.HAL_UART_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:24     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5963   .text.UART_InitCallbacksToDefault:00000000 UART_InitCallbacksToDefault
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7804   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:151    .text.HAL_UART_Init:000000b0 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:747    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:156    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:162    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:296    .text.HAL_HalfDuplex_Init:000000c0 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:301    .text.HAL_LIN_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:307    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:459    .text.HAL_LIN_Init:000000e4 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:464    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:470    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:633    .text.HAL_MultiProcessor_Init:000000f8 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:638    .text.HAL_UART_DeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:644    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:736    .text.HAL_UART_DeInit:00000070 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:789    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:741    .text.HAL_UART_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:783    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:825    .text.HAL_UART_RegisterCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:831    .text.HAL_UART_RegisterCallback:00000000 HAL_UART_RegisterCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:897    .text.HAL_UART_RegisterCallback:00000058 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:910    .text.HAL_UART_RegisterCallback:0000008c $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1070   .text.HAL_UART_UnRegisterCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1076   .text.HAL_UART_UnRegisterCallback:00000000 HAL_UART_UnRegisterCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1127   .text.HAL_UART_UnRegisterCallback:00000040 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1140   .text.HAL_UART_UnRegisterCallback:00000074 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1299   .text.HAL_UART_UnRegisterCallback:00000134 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5095   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5053   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5179   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5137   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5221   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5263   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5305   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5347   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1313   .text.HAL_UART_RegisterRxEventCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1319   .text.HAL_UART_RegisterRxEventCallback:00000000 HAL_UART_RegisterRxEventCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1416   .text.HAL_UART_UnRegisterRxEventCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1422   .text.HAL_UART_UnRegisterRxEventCallback:00000000 HAL_UART_UnRegisterRxEventCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1503   .text.HAL_UART_UnRegisterRxEventCallback:0000005c $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5389   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1508   .text.HAL_UART_Transmit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1514   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6497   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1734   .text.HAL_UART_Receive:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1740   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1984   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:1990   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2101   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2107   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6615   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2191   .text.HAL_UART_Transmit_DMA:00000000 $t
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 206


C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2197   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2350   .text.HAL_UART_Transmit_DMA:000000cc $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6052   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6134   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6378   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2357   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2363   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6710   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2447   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2453   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2592   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2598   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2716   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2722   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6857   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6910   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2853   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:2859   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3179   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3185   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3310   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3316   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3441   .text.HAL_UART_Abort:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3447   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3645   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3651   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3756   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3762   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3894   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:3900   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4150   .text.HAL_UART_Abort_IT:00000160 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7046   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7143   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4156   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4162   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4287   .text.HAL_UART_AbortTransmit_IT:000000a0 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7240   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4292   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4298   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4454   .text.HAL_UART_AbortReceive_IT:000000d4 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7296   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4459   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:4465   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7550   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7356   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7492   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5042   .text.HAL_UART_IRQHandler:0000035c $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6990   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5047   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5089   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5131   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5173   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5215   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5257   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5299   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5341   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5383   .text.HAL_UARTEx_RxEventCallback:00000000 $t
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s 			page 207


C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5427   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5433   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5505   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5511   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5583   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5589   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5661   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5667   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5753   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5759   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5845   .text.HAL_UART_GetState:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5851   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5912   .text.HAL_UART_GetError:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5918   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:5957   .text.UART_InitCallbacksToDefault:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6034   .text.UART_InitCallbacksToDefault:00000048 $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6047   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6129   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6177   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6182   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6302   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6307   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6373   .text.UART_DMAError:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6492   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6609   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6704   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6845   .text.UART_Start_Receive_DMA:000000bc $d
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6852   .text.UART_EndTxTransfer:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6905   .text.UART_EndRxTransfer:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:6985   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7041   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7138   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7235   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7291   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7351   .text.UART_Transmit_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7487   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7545   .text.UART_Receive_IT:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7799   .text.UART_SetConfig:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cclxGZcQ.s:7965   .text.UART_SetConfig:00000114 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
